<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSLambdaDeleteFunctionRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSLambdaDeleteFunctionRequest</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
            
			
			<NodeRef refid="1247"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaDeleteFunctionRequest/setFunctionName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Lambda function to delete.&lt;/p&gt;&lt;p&gt; You can specify the function name (for example, &lt;code&gt;Thumbnail&lt;/code&gt;) or you can specify Amazon Resource Name (ARN) of the function (for example, &lt;code&gt;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&lt;/code&gt;). If you are using versioning, you can also provide a qualified function ARN (ARN that is qualified with function version or alias name as suffix). AWS Lambda also allows you to specify only the function name with the account ID qualifier (for example, &lt;code&gt;account-id:Thumbnail&lt;/code&gt;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="1247"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaDeleteFunctionRequest/functionName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Lambda function to delete.&lt;/p&gt;&lt;p&gt; You can specify the function name (for example, &lt;code&gt;Thumbnail&lt;/code&gt;) or you can specify Amazon Resource Name (ARN) of the function (for example, &lt;code&gt;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&lt;/code&gt;). If you are using versioning, you can also provide a qualified function ARN (ARN that is qualified with function version or alias name as suffix). AWS Lambda also allows you to specify only the function name with the account ID qualifier (for example, &lt;code&gt;account-id:Thumbnail&lt;/code&gt;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="1247"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaDeleteFunctionRequest/functionName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Lambda function to delete.&lt;/p&gt;&lt;p&gt; You can specify the function name (for example, &lt;code&gt;Thumbnail&lt;/code&gt;) or you can specify Amazon Resource Name (ARN) of the function (for example, &lt;code&gt;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&lt;/code&gt;). If you are using versioning, you can also provide a qualified function ARN (ARN that is qualified with function version or alias name as suffix). AWS Lambda also allows you to specify only the function name with the account ID qualifier (for example, &lt;code&gt;account-id:Thumbnail&lt;/code&gt;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="1247"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaDeleteFunctionRequest/setQualifier:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Using this optional parameter you can specify a function version (but not the &lt;code&gt;$LATEST&lt;/code&gt; version) to direct AWS Lambda to delete a specific function version. If the function version has one or more aliases pointing to it, you will get an error because you cannot have aliases pointing to it. You can delete any function version but not the &lt;code&gt;$LATEST&lt;/code&gt;, that is, you cannot specify &lt;code&gt;$LATEST&lt;/code&gt; as the value of this parameter. The &lt;code&gt;$LATEST&lt;/code&gt; version can be deleted only when you want to delete all the function versions and aliases.&lt;/p&gt;&lt;p&gt;You can only specify a function version, not an alias name, using this parameter. You cannot delete a function version using its alias.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify this parameter, AWS Lambda will delete the function, including all of its versions and aliases.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *qualifier</Declaration>
			
			
			<Anchor>//api/name/qualifier</Anchor>
            <NodeRef refid="1247"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaDeleteFunctionRequest/qualifier</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Using this optional parameter you can specify a function version (but not the &lt;code&gt;$LATEST&lt;/code&gt; version) to direct AWS Lambda to delete a specific function version. If the function version has one or more aliases pointing to it, you will get an error because you cannot have aliases pointing to it. You can delete any function version but not the &lt;code&gt;$LATEST&lt;/code&gt;, that is, you cannot specify &lt;code&gt;$LATEST&lt;/code&gt; as the value of this parameter. The &lt;code&gt;$LATEST&lt;/code&gt; version can be deleted only when you want to delete all the function versions and aliases.&lt;/p&gt;&lt;p&gt;You can only specify a function version, not an alias name, using this parameter. You cannot delete a function version using its alias.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify this parameter, AWS Lambda will delete the function, including all of its versions and aliases.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *qualifier</Declaration>
			
			
			<Anchor>//api/name/qualifier</Anchor>
            <NodeRef refid="1247"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaDeleteFunctionRequest/qualifier</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Using this optional parameter you can specify a function version (but not the &lt;code&gt;$LATEST&lt;/code&gt; version) to direct AWS Lambda to delete a specific function version. If the function version has one or more aliases pointing to it, you will get an error because you cannot have aliases pointing to it. You can delete any function version but not the &lt;code&gt;$LATEST&lt;/code&gt;, that is, you cannot specify &lt;code&gt;$LATEST&lt;/code&gt; as the value of this parameter. The &lt;code&gt;$LATEST&lt;/code&gt; version can be deleted only when you want to delete all the function versions and aliases.&lt;/p&gt;&lt;p&gt;You can only specify a function version, not an alias name, using this parameter. You cannot delete a function version using its alias.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify this parameter, AWS Lambda will delete the function, including all of its versions and aliases.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *qualifier</Declaration>
			
			
			<Anchor>//api/name/qualifier</Anchor>
            <NodeRef refid="1247"/>
		</Token>
		
        
        
	</File>
</Tokens>