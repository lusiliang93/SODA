<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSEC2DescribeImagesRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSEC2DescribeImagesRequest</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Contains the parameters for DescribeImages.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
            
			
			<NodeRef refid="590"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/setDryRun:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/dryRun</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeImagesRequest/dryRun</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/setExecutableUsers:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Scopes the images by users with explicit launch permissions. Specify an AWS account ID, &lt;code&gt;self&lt;/code&gt; (the sender of the request), or &lt;code&gt;all&lt;/code&gt; (public AMIs).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *executableUsers</Declaration>
			
			
			<Anchor>//api/name/executableUsers</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/executableUsers</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Scopes the images by users with explicit launch permissions. Specify an AWS account ID, &lt;code&gt;self&lt;/code&gt; (the sender of the request), or &lt;code&gt;all&lt;/code&gt; (public AMIs).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *executableUsers</Declaration>
			
			
			<Anchor>//api/name/executableUsers</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeImagesRequest/executableUsers</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Scopes the images by users with explicit launch permissions. Specify an AWS account ID, &lt;code&gt;self&lt;/code&gt; (the sender of the request), or &lt;code&gt;all&lt;/code&gt; (public AMIs).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *executableUsers</Declaration>
			
			
			<Anchor>//api/name/executableUsers</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/setFilters:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;architecture&lt;/code&gt; - The image architecture (&lt;code&gt;i386&lt;/code&gt; | &lt;code&gt;x86_64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.delete-on-termination&lt;/code&gt; - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.device-name&lt;/code&gt; - The device name for the EBS volume (for example, &lt;code&gt;/dev/sdh&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.snapshot-id&lt;/code&gt; - The ID of the snapshot used for the EBS volume.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.volume-size&lt;/code&gt; - The volume size of the EBS volume, in GiB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.volume-type&lt;/code&gt; - The volume type of the EBS volume (&lt;code&gt;gp2&lt;/code&gt; | &lt;code&gt;io1&lt;/code&gt; | &lt;code&gt;st1 &lt;/code&gt;| &lt;code&gt;sc1&lt;/code&gt; | &lt;code&gt;standard&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;description&lt;/code&gt; - The description of the image (provided during image creation).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;hypervisor&lt;/code&gt; - The hypervisor type (&lt;code&gt;ovm&lt;/code&gt; | &lt;code&gt;xen&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;image-id&lt;/code&gt; - The ID of the image.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;image-type&lt;/code&gt; - The image type (&lt;code&gt;machine&lt;/code&gt; | &lt;code&gt;kernel&lt;/code&gt; | &lt;code&gt;ramdisk&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;is-public&lt;/code&gt; - A Boolean that indicates whether the image is public.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;kernel-id&lt;/code&gt; - The kernel ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;manifest-location&lt;/code&gt; - The location of the image manifest.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt; - The name of the AMI (provided during image creation).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-alias&lt;/code&gt; - The AWS account alias (for example, &lt;code&gt;amazon&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-id&lt;/code&gt; - The AWS account ID of the image owner.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;platform&lt;/code&gt; - The platform. To only list Windows-based AMIs, use &lt;code&gt;windows&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;product-code&lt;/code&gt; - The product code.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;product-code.type&lt;/code&gt; - The type of the product code (&lt;code&gt;devpay&lt;/code&gt; | &lt;code&gt;marketplace&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ramdisk-id&lt;/code&gt; - The RAM disk ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;root-device-name&lt;/code&gt; - The name of the root device volume (for example, &lt;code&gt;/dev/sda1&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;root-device-type&lt;/code&gt; - The type of the root device volume (&lt;code&gt;ebs&lt;/code&gt; | &lt;code&gt;instance-store&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state&lt;/code&gt; - The state of the image (&lt;code&gt;available&lt;/code&gt; | &lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state-reason-code&lt;/code&gt; - The reason code for the state change.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state-reason-message&lt;/code&gt; - The message for the state change.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; - The key/value combination of a tag assigned to the resource.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-key&lt;/code&gt; - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter &quot;tag-key=Purpose&quot; and the filter &quot;tag-value=X&quot;, you get any resources assigned both the tag key Purpose (regardless of what the tag&apos;s value is), and the tag value X (regardless of what the tag&apos;s key is). If you want to list only resources where Purpose is X, see the &lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-value&lt;/code&gt; - The value of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-key&lt;/code&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;virtualization-type&lt;/code&gt; - The virtualization type (&lt;code&gt;paravirtual&lt;/code&gt; | &lt;code&gt;hvm&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Filter*&gt; *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/filters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;architecture&lt;/code&gt; - The image architecture (&lt;code&gt;i386&lt;/code&gt; | &lt;code&gt;x86_64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.delete-on-termination&lt;/code&gt; - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.device-name&lt;/code&gt; - The device name for the EBS volume (for example, &lt;code&gt;/dev/sdh&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.snapshot-id&lt;/code&gt; - The ID of the snapshot used for the EBS volume.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.volume-size&lt;/code&gt; - The volume size of the EBS volume, in GiB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.volume-type&lt;/code&gt; - The volume type of the EBS volume (&lt;code&gt;gp2&lt;/code&gt; | &lt;code&gt;io1&lt;/code&gt; | &lt;code&gt;st1 &lt;/code&gt;| &lt;code&gt;sc1&lt;/code&gt; | &lt;code&gt;standard&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;description&lt;/code&gt; - The description of the image (provided during image creation).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;hypervisor&lt;/code&gt; - The hypervisor type (&lt;code&gt;ovm&lt;/code&gt; | &lt;code&gt;xen&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;image-id&lt;/code&gt; - The ID of the image.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;image-type&lt;/code&gt; - The image type (&lt;code&gt;machine&lt;/code&gt; | &lt;code&gt;kernel&lt;/code&gt; | &lt;code&gt;ramdisk&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;is-public&lt;/code&gt; - A Boolean that indicates whether the image is public.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;kernel-id&lt;/code&gt; - The kernel ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;manifest-location&lt;/code&gt; - The location of the image manifest.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt; - The name of the AMI (provided during image creation).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-alias&lt;/code&gt; - The AWS account alias (for example, &lt;code&gt;amazon&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-id&lt;/code&gt; - The AWS account ID of the image owner.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;platform&lt;/code&gt; - The platform. To only list Windows-based AMIs, use &lt;code&gt;windows&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;product-code&lt;/code&gt; - The product code.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;product-code.type&lt;/code&gt; - The type of the product code (&lt;code&gt;devpay&lt;/code&gt; | &lt;code&gt;marketplace&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ramdisk-id&lt;/code&gt; - The RAM disk ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;root-device-name&lt;/code&gt; - The name of the root device volume (for example, &lt;code&gt;/dev/sda1&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;root-device-type&lt;/code&gt; - The type of the root device volume (&lt;code&gt;ebs&lt;/code&gt; | &lt;code&gt;instance-store&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state&lt;/code&gt; - The state of the image (&lt;code&gt;available&lt;/code&gt; | &lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state-reason-code&lt;/code&gt; - The reason code for the state change.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state-reason-message&lt;/code&gt; - The message for the state change.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; - The key/value combination of a tag assigned to the resource.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-key&lt;/code&gt; - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter &quot;tag-key=Purpose&quot; and the filter &quot;tag-value=X&quot;, you get any resources assigned both the tag key Purpose (regardless of what the tag&apos;s value is), and the tag value X (regardless of what the tag&apos;s key is). If you want to list only resources where Purpose is X, see the &lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-value&lt;/code&gt; - The value of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-key&lt;/code&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;virtualization-type&lt;/code&gt; - The virtualization type (&lt;code&gt;paravirtual&lt;/code&gt; | &lt;code&gt;hvm&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Filter*&gt; *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeImagesRequest/filters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;architecture&lt;/code&gt; - The image architecture (&lt;code&gt;i386&lt;/code&gt; | &lt;code&gt;x86_64&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.delete-on-termination&lt;/code&gt; - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.device-name&lt;/code&gt; - The device name for the EBS volume (for example, &lt;code&gt;/dev/sdh&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.snapshot-id&lt;/code&gt; - The ID of the snapshot used for the EBS volume.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.volume-size&lt;/code&gt; - The volume size of the EBS volume, in GiB.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;block-device-mapping.volume-type&lt;/code&gt; - The volume type of the EBS volume (&lt;code&gt;gp2&lt;/code&gt; | &lt;code&gt;io1&lt;/code&gt; | &lt;code&gt;st1 &lt;/code&gt;| &lt;code&gt;sc1&lt;/code&gt; | &lt;code&gt;standard&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;description&lt;/code&gt; - The description of the image (provided during image creation).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;hypervisor&lt;/code&gt; - The hypervisor type (&lt;code&gt;ovm&lt;/code&gt; | &lt;code&gt;xen&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;image-id&lt;/code&gt; - The ID of the image.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;image-type&lt;/code&gt; - The image type (&lt;code&gt;machine&lt;/code&gt; | &lt;code&gt;kernel&lt;/code&gt; | &lt;code&gt;ramdisk&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;is-public&lt;/code&gt; - A Boolean that indicates whether the image is public.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;kernel-id&lt;/code&gt; - The kernel ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;manifest-location&lt;/code&gt; - The location of the image manifest.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt; - The name of the AMI (provided during image creation).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-alias&lt;/code&gt; - The AWS account alias (for example, &lt;code&gt;amazon&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;owner-id&lt;/code&gt; - The AWS account ID of the image owner.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;platform&lt;/code&gt; - The platform. To only list Windows-based AMIs, use &lt;code&gt;windows&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;product-code&lt;/code&gt; - The product code.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;product-code.type&lt;/code&gt; - The type of the product code (&lt;code&gt;devpay&lt;/code&gt; | &lt;code&gt;marketplace&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ramdisk-id&lt;/code&gt; - The RAM disk ID.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;root-device-name&lt;/code&gt; - The name of the root device volume (for example, &lt;code&gt;/dev/sda1&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;root-device-type&lt;/code&gt; - The type of the root device volume (&lt;code&gt;ebs&lt;/code&gt; | &lt;code&gt;instance-store&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state&lt;/code&gt; - The state of the image (&lt;code&gt;available&lt;/code&gt; | &lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state-reason-code&lt;/code&gt; - The reason code for the state change.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;state-reason-message&lt;/code&gt; - The message for the state change.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; - The key/value combination of a tag assigned to the resource.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-key&lt;/code&gt; - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter &quot;tag-key=Purpose&quot; and the filter &quot;tag-value=X&quot;, you get any resources assigned both the tag key Purpose (regardless of what the tag&apos;s value is), and the tag value X (regardless of what the tag&apos;s key is). If you want to list only resources where Purpose is X, see the &lt;code&gt;tag&lt;/code&gt;:&lt;i&gt;key&lt;/i&gt;=&lt;i&gt;value&lt;/i&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tag-value&lt;/code&gt; - The value of a tag assigned to the resource. This filter is independent of the &lt;code&gt;tag-key&lt;/code&gt; filter.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;virtualization-type&lt;/code&gt; - The virtualization type (&lt;code&gt;paravirtual&lt;/code&gt; | &lt;code&gt;hvm&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Filter*&gt; *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/setImageIds:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more image IDs.&lt;/p&gt;&lt;p&gt;Default: Describes all images available to you.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *imageIds</Declaration>
			
			
			<Anchor>//api/name/imageIds</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/imageIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more image IDs.&lt;/p&gt;&lt;p&gt;Default: Describes all images available to you.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *imageIds</Declaration>
			
			
			<Anchor>//api/name/imageIds</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeImagesRequest/imageIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more image IDs.&lt;/p&gt;&lt;p&gt;Default: Describes all images available to you.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *imageIds</Declaration>
			
			
			<Anchor>//api/name/imageIds</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/setOwners:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Filters the images by the owner. Specify an AWS account ID, &lt;code&gt;amazon&lt;/code&gt; (owner is Amazon), &lt;code&gt;aws-marketplace&lt;/code&gt; (owner is AWS Marketplace), &lt;code&gt;self&lt;/code&gt; (owner is the sender of the request). Omitting this option returns all images for which you have launch permissions, regardless of ownership.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *owners</Declaration>
			
			
			<Anchor>//api/name/owners</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeImagesRequest/owners</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Filters the images by the owner. Specify an AWS account ID, &lt;code&gt;amazon&lt;/code&gt; (owner is Amazon), &lt;code&gt;aws-marketplace&lt;/code&gt; (owner is AWS Marketplace), &lt;code&gt;self&lt;/code&gt; (owner is the sender of the request). Omitting this option returns all images for which you have launch permissions, regardless of ownership.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *owners</Declaration>
			
			
			<Anchor>//api/name/owners</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeImagesRequest/owners</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Filters the images by the owner. Specify an AWS account ID, &lt;code&gt;amazon&lt;/code&gt; (owner is Amazon), &lt;code&gt;aws-marketplace&lt;/code&gt; (owner is AWS Marketplace), &lt;code&gt;self&lt;/code&gt; (owner is the sender of the request). Omitting this option returns all images for which you have launch permissions, regardless of ownership.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *owners</Declaration>
			
			
			<Anchor>//api/name/owners</Anchor>
            <NodeRef refid="590"/>
		</Token>
		
        
        
	</File>
</Tokens>