<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSSNSPublishInput.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSSNSPublishInput</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Input for Publish action.&lt;/p&gt;
Required parameters: [Message]</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
            
			
			<NodeRef refid="1614"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/setMessage:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message you want to send to the topic.&lt;/p&gt;&lt;p&gt;If you want to send the same message to all transport protocols, include the text of the message as a String value.&lt;/p&gt;&lt;p&gt;If you want to send different messages for each transport protocol, set the value of the &lt;code&gt;MessageStructure&lt;/code&gt; parameter to &lt;code&gt;json&lt;/code&gt; and use a JSON object for the &lt;code&gt;Message&lt;/code&gt; parameter. See the Examples section for the format of the JSON object. &lt;/p&gt;&lt;p&gt;Constraints: Messages must be UTF-8 encoded strings at most 256 KB in size (262144 bytes, not 262144 characters).&lt;/p&gt;&lt;p&gt;JSON-specific constraints:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Keys in the JSON object that correspond to supported transport protocols must have simple JSON string values. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The values will be parsed (unescaped) before they are used in outgoing messages.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Values have a minimum length of 0 (the empty string, &quot;&quot;, is allowed).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Values have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Non-string values will cause the key to be ignored.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Keys that do not correspond to supported transport protocols are ignored.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Duplicate keys are not allowed.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Failure to parse or validate any key or value in the message will cause the &lt;code&gt;Publish&lt;/code&gt; call to return an error (no partial delivery).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/message</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message you want to send to the topic.&lt;/p&gt;&lt;p&gt;If you want to send the same message to all transport protocols, include the text of the message as a String value.&lt;/p&gt;&lt;p&gt;If you want to send different messages for each transport protocol, set the value of the &lt;code&gt;MessageStructure&lt;/code&gt; parameter to &lt;code&gt;json&lt;/code&gt; and use a JSON object for the &lt;code&gt;Message&lt;/code&gt; parameter. See the Examples section for the format of the JSON object. &lt;/p&gt;&lt;p&gt;Constraints: Messages must be UTF-8 encoded strings at most 256 KB in size (262144 bytes, not 262144 characters).&lt;/p&gt;&lt;p&gt;JSON-specific constraints:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Keys in the JSON object that correspond to supported transport protocols must have simple JSON string values. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The values will be parsed (unescaped) before they are used in outgoing messages.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Values have a minimum length of 0 (the empty string, &quot;&quot;, is allowed).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Values have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Non-string values will cause the key to be ignored.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Keys that do not correspond to supported transport protocols are ignored.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Duplicate keys are not allowed.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Failure to parse or validate any key or value in the message will cause the &lt;code&gt;Publish&lt;/code&gt; call to return an error (no partial delivery).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSNSPublishInput/message</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The message you want to send to the topic.&lt;/p&gt;&lt;p&gt;If you want to send the same message to all transport protocols, include the text of the message as a String value.&lt;/p&gt;&lt;p&gt;If you want to send different messages for each transport protocol, set the value of the &lt;code&gt;MessageStructure&lt;/code&gt; parameter to &lt;code&gt;json&lt;/code&gt; and use a JSON object for the &lt;code&gt;Message&lt;/code&gt; parameter. See the Examples section for the format of the JSON object. &lt;/p&gt;&lt;p&gt;Constraints: Messages must be UTF-8 encoded strings at most 256 KB in size (262144 bytes, not 262144 characters).&lt;/p&gt;&lt;p&gt;JSON-specific constraints:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Keys in the JSON object that correspond to supported transport protocols must have simple JSON string values. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The values will be parsed (unescaped) before they are used in outgoing messages.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Values have a minimum length of 0 (the empty string, &quot;&quot;, is allowed).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Values have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Non-string values will cause the key to be ignored.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Keys that do not correspond to supported transport protocols are ignored.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Duplicate keys are not allowed.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Failure to parse or validate any key or value in the message will cause the &lt;code&gt;Publish&lt;/code&gt; call to return an error (no partial delivery).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/setMessageAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Message attributes for Publish action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSSNSMessageAttributeValue*&gt; *messageAttributes</Declaration>
			
			
			<Anchor>//api/name/messageAttributes</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/messageAttributes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Message attributes for Publish action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSSNSMessageAttributeValue*&gt; *messageAttributes</Declaration>
			
			
			<Anchor>//api/name/messageAttributes</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSNSPublishInput/messageAttributes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Message attributes for Publish action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSSNSMessageAttributeValue*&gt; *messageAttributes</Declaration>
			
			
			<Anchor>//api/name/messageAttributes</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/setMessageStructure:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Set &lt;code&gt;MessageStructure&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt; if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set &lt;code&gt;MessageStructure&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt;, the value of the &lt;code&gt;Message&lt;/code&gt; parameter must: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;be a syntactically valid JSON object; and&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;contain at least a top-level JSON key of &quot;default&quot; with a value that is a string.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., &quot;http&quot;). &lt;/p&gt;&lt;p&gt;For information about sending different messages for each protocol using the AWS Management Console, go to Create Different Messages for Each Protocol in the &lt;i&gt;Amazon Simple Notification Service Getting Started Guide&lt;/i&gt;. &lt;/p&gt;&lt;p&gt;Valid value: &lt;code&gt;json&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageStructure</Declaration>
			
			
			<Anchor>//api/name/messageStructure</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/messageStructure</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Set &lt;code&gt;MessageStructure&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt; if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set &lt;code&gt;MessageStructure&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt;, the value of the &lt;code&gt;Message&lt;/code&gt; parameter must: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;be a syntactically valid JSON object; and&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;contain at least a top-level JSON key of &quot;default&quot; with a value that is a string.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., &quot;http&quot;). &lt;/p&gt;&lt;p&gt;For information about sending different messages for each protocol using the AWS Management Console, go to Create Different Messages for Each Protocol in the &lt;i&gt;Amazon Simple Notification Service Getting Started Guide&lt;/i&gt;. &lt;/p&gt;&lt;p&gt;Valid value: &lt;code&gt;json&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageStructure</Declaration>
			
			
			<Anchor>//api/name/messageStructure</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSNSPublishInput/messageStructure</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Set &lt;code&gt;MessageStructure&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt; if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set &lt;code&gt;MessageStructure&lt;/code&gt; to &lt;code&gt;json&lt;/code&gt;, the value of the &lt;code&gt;Message&lt;/code&gt; parameter must: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;be a syntactically valid JSON object; and&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;contain at least a top-level JSON key of &quot;default&quot; with a value that is a string.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., &quot;http&quot;). &lt;/p&gt;&lt;p&gt;For information about sending different messages for each protocol using the AWS Management Console, go to Create Different Messages for Each Protocol in the &lt;i&gt;Amazon Simple Notification Service Getting Started Guide&lt;/i&gt;. &lt;/p&gt;&lt;p&gt;Valid value: &lt;code&gt;json&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *messageStructure</Declaration>
			
			
			<Anchor>//api/name/messageStructure</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/setPhoneNumber:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The phone number to which you want to deliver an SMS message. Use E.164 format.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;TargetArn&lt;/code&gt; or &lt;code&gt;TopicArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *phoneNumber</Declaration>
			
			
			<Anchor>//api/name/phoneNumber</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/phoneNumber</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The phone number to which you want to deliver an SMS message. Use E.164 format.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;TargetArn&lt;/code&gt; or &lt;code&gt;TopicArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *phoneNumber</Declaration>
			
			
			<Anchor>//api/name/phoneNumber</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSNSPublishInput/phoneNumber</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The phone number to which you want to deliver an SMS message. Use E.164 format.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;TargetArn&lt;/code&gt; or &lt;code&gt;TopicArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *phoneNumber</Declaration>
			
			
			<Anchor>//api/name/phoneNumber</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/setSubject:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional parameter to be used as the &quot;Subject&quot; line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.&lt;/p&gt;&lt;p&gt;Constraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subject</Declaration>
			
			
			<Anchor>//api/name/subject</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/subject</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional parameter to be used as the &quot;Subject&quot; line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.&lt;/p&gt;&lt;p&gt;Constraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subject</Declaration>
			
			
			<Anchor>//api/name/subject</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSNSPublishInput/subject</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Optional parameter to be used as the &quot;Subject&quot; line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.&lt;/p&gt;&lt;p&gt;Constraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subject</Declaration>
			
			
			<Anchor>//api/name/subject</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/setTargetArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Either TopicArn or EndpointArn, but not both.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;TargetArn&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; or &lt;code&gt;TopicArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *targetArn</Declaration>
			
			
			<Anchor>//api/name/targetArn</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/targetArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Either TopicArn or EndpointArn, but not both.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;TargetArn&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; or &lt;code&gt;TopicArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *targetArn</Declaration>
			
			
			<Anchor>//api/name/targetArn</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSNSPublishInput/targetArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Either TopicArn or EndpointArn, but not both.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;TargetArn&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; or &lt;code&gt;TopicArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *targetArn</Declaration>
			
			
			<Anchor>//api/name/targetArn</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/setTopicArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The topic you want to publish to.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;TopicArn&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; or &lt;code&gt;TargetArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *topicArn</Declaration>
			
			
			<Anchor>//api/name/topicArn</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSNSPublishInput/topicArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The topic you want to publish to.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;TopicArn&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; or &lt;code&gt;TargetArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *topicArn</Declaration>
			
			
			<Anchor>//api/name/topicArn</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSNSPublishInput/topicArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The topic you want to publish to.&lt;/p&gt;&lt;p&gt;If you don&apos;t specify a value for the &lt;code&gt;TopicArn&lt;/code&gt; parameter, you must specify a value for the &lt;code&gt;PhoneNumber&lt;/code&gt; or &lt;code&gt;TargetArn&lt;/code&gt; parameters.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSNSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *topicArn</Declaration>
			
			
			<Anchor>//api/name/topicArn</Anchor>
            <NodeRef refid="1614"/>
		</Token>
		
        
        
	</File>
</Tokens>