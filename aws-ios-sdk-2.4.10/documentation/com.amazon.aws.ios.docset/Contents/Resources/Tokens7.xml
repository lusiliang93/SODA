<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSAutoScaling.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScaling</TokenIdentifier>
			<Abstract type="html">&lt;fullname&gt;Auto Scaling&lt;/fullname&gt;&lt;p&gt;Auto Scaling is designed to automatically launch or terminate EC2 instances based on user-defined policies, schedules, and health checks. Use this service in conjunction with the Amazon CloudWatch and Elastic Load Balancing services.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScaling/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSAutoScaling/defaultAutoScaling</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultAutoScaling</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultAutoScaling</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSAutoScaling/registerAutoScalingWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
			<Declaration>+ (void)registerAutoScalingWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerAutoScalingWithConfiguration:forKey:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSAutoScaling/AutoScalingForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerAutoScalingWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)AutoScalingForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/AutoScalingForKey:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSAutoScaling/removeAutoScalingForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
			<Declaration>+ (void)removeAutoScalingForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeAutoScalingForKey:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/attachInstances:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches one or more EC2 instances to the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;When you attach instances, Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.&lt;/p&gt;&lt;p&gt;If there is a Classic load balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.&lt;/p&gt;&lt;p&gt;For more information, see Attach EC2 Instances to Your Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachInstancesQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)attachInstances:(AWSAutoScalingAttachInstancesQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachInstances service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/attachInstances:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/attachInstances:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches one or more EC2 instances to the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;When you attach instances, Auto Scaling increases the desired capacity of the group by the number of instances being attached. If the number of instances being attached plus the desired capacity of the group exceeds the maximum size of the group, the operation fails.&lt;/p&gt;&lt;p&gt;If there is a Classic load balancer attached to your Auto Scaling group, the instances are also registered with the load balancer. If there are target groups attached to your Auto Scaling group, the instances are also registered with the target groups.&lt;/p&gt;&lt;p&gt;For more information, see Attach EC2 Instances to Your Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachInstancesQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)attachInstances:(AWSAutoScalingAttachInstancesQuery *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachInstances service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attachInstances:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/attachLoadBalancerTargetGroups:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches one or more target groups to the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;To describe the target groups for an Auto Scaling group, use &lt;a&gt;DescribeLoadBalancerTargetGroups&lt;/a&gt;. To detach the target group from the Auto Scaling group, use &lt;a&gt;DetachLoadBalancerTargetGroups&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Attach a Load Balancer to Your Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachLoadBalancerTargetGroupsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachLoadBalancerTargetGroupsResultType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingAttachLoadBalancerTargetGroupsResultType*&gt; *)attachLoadBalancerTargetGroups:(AWSAutoScalingAttachLoadBalancerTargetGroupsType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachLoadBalancerTargetGroups service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingAttachLoadBalancerTargetGroupsResultType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/attachLoadBalancerTargetGroups:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/attachLoadBalancerTargetGroups:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches one or more target groups to the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;To describe the target groups for an Auto Scaling group, use &lt;a&gt;DescribeLoadBalancerTargetGroups&lt;/a&gt;. To detach the target group from the Auto Scaling group, use &lt;a&gt;DetachLoadBalancerTargetGroups&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Attach a Load Balancer to Your Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachLoadBalancerTargetGroupsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachLoadBalancerTargetGroupsResultType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)attachLoadBalancerTargetGroups:(AWSAutoScalingAttachLoadBalancerTargetGroupsType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingAttachLoadBalancerTargetGroupsResultType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachLoadBalancerTargetGroups service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attachLoadBalancerTargetGroups:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/attachLoadBalancers:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches one or more Classic load balancers to the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;To attach an Application load balancer instead, see &lt;a&gt;AttachLoadBalancerTargetGroups&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;To describe the load balancers for an Auto Scaling group, use &lt;a&gt;DescribeLoadBalancers&lt;/a&gt;. To detach the load balancer from the Auto Scaling group, use &lt;a&gt;DetachLoadBalancers&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Attach a Load Balancer to Your Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachLoadBalancersType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachLoadBalancersResultType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingAttachLoadBalancersResultType*&gt; *)attachLoadBalancers:(AWSAutoScalingAttachLoadBalancersType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachLoadBalancers service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingAttachLoadBalancersResultType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/attachLoadBalancers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/attachLoadBalancers:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Attaches one or more Classic load balancers to the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;To attach an Application load balancer instead, see &lt;a&gt;AttachLoadBalancerTargetGroups&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;To describe the load balancers for an Auto Scaling group, use &lt;a&gt;DescribeLoadBalancers&lt;/a&gt;. To detach the load balancer from the Auto Scaling group, use &lt;a&gt;DetachLoadBalancers&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Attach a Load Balancer to Your Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachLoadBalancersType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAttachLoadBalancersResultType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)attachLoadBalancers:(AWSAutoScalingAttachLoadBalancersType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingAttachLoadBalancersResultType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AttachLoadBalancers service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attachLoadBalancers:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/completeLifecycleAction:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Completes the lifecycle action for the specified token or instance with the specified result.&lt;/p&gt;&lt;p&gt;This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;If you finish before the timeout period ends, complete the lifecycle action.&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For more information, see Auto Scaling Lifecycle in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCompleteLifecycleActionType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCompleteLifecycleActionAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingCompleteLifecycleActionAnswer*&gt; *)completeLifecycleAction:(AWSAutoScalingCompleteLifecycleActionType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CompleteLifecycleAction service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingCompleteLifecycleActionAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/completeLifecycleAction:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/completeLifecycleAction:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Completes the lifecycle action for the specified token or instance with the specified result.&lt;/p&gt;&lt;p&gt;This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;If you finish before the timeout period ends, complete the lifecycle action.&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For more information, see Auto Scaling Lifecycle in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCompleteLifecycleActionType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCompleteLifecycleActionAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)completeLifecycleAction:(AWSAutoScalingCompleteLifecycleActionType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingCompleteLifecycleActionAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CompleteLifecycleAction service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/completeLifecycleAction:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/createAutoScalingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an Auto Scaling group with the specified name and attributes.&lt;/p&gt;&lt;p&gt;If you exceed your maximum limit of Auto Scaling groups, which by default is 20 per region, the call fails. For information about viewing and updating this limit, see &lt;a&gt;DescribeAccountLimits&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Groups in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCreateAutoScalingGroupType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)createAutoScalingGroup:(AWSAutoScalingCreateAutoScalingGroupType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateAutoScalingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorAlreadyExists, AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/createAutoScalingGroup:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/createAutoScalingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates an Auto Scaling group with the specified name and attributes.&lt;/p&gt;&lt;p&gt;If you exceed your maximum limit of Auto Scaling groups, which by default is 20 per region, the call fails. For information about viewing and updating this limit, see &lt;a&gt;DescribeAccountLimits&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Groups in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCreateAutoScalingGroupType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createAutoScalingGroup:(AWSAutoScalingCreateAutoScalingGroupType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateAutoScalingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorAlreadyExists, AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createAutoScalingGroup:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/createLaunchConfiguration:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a launch configuration.&lt;/p&gt;&lt;p&gt;If you exceed your maximum limit of launch configurations, which by default is 100 per region, the call fails. For information about viewing and updating this limit, see &lt;a&gt;DescribeAccountLimits&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Launch Configurations in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCreateLaunchConfigurationType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)createLaunchConfiguration:(AWSAutoScalingCreateLaunchConfigurationType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateLaunchConfiguration service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorAlreadyExists, AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/createLaunchConfiguration:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/createLaunchConfiguration:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a launch configuration.&lt;/p&gt;&lt;p&gt;If you exceed your maximum limit of launch configurations, which by default is 100 per region, the call fails. For information about viewing and updating this limit, see &lt;a&gt;DescribeAccountLimits&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Launch Configurations in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCreateLaunchConfigurationType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createLaunchConfiguration:(AWSAutoScalingCreateLaunchConfigurationType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateLaunchConfiguration service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorAlreadyExists, AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createLaunchConfiguration:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/createOrUpdateTags:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates or updates tags for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.&lt;/p&gt;&lt;p&gt;For more information, see Tagging Auto Scaling Groups and Instances in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCreateOrUpdateTagsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)createOrUpdateTags:(AWSAutoScalingCreateOrUpdateTagsType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateOrUpdateTags service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorAlreadyExists, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/createOrUpdateTags:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/createOrUpdateTags:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates or updates tags for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;When you specify a tag with a key that already exists, the operation overwrites the previous tag definition, and you do not get an error message.&lt;/p&gt;&lt;p&gt;For more information, see Tagging Auto Scaling Groups and Instances in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCreateOrUpdateTagsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createOrUpdateTags:(AWSAutoScalingCreateOrUpdateTagsType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateOrUpdateTags service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorAlreadyExists, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createOrUpdateTags:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteAutoScalingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.&lt;/p&gt;&lt;p&gt;If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.&lt;/p&gt;&lt;p&gt;To remove instances from the Auto Scaling group before deleting it, call &lt;a&gt;DetachInstances&lt;/a&gt; with the list of instances and the option to decrement the desired capacity so that Auto Scaling does not launch replacement instances.&lt;/p&gt;&lt;p&gt;To terminate all instances before deleting the Auto Scaling group, call &lt;a&gt;UpdateAutoScalingGroup&lt;/a&gt; and set the minimum size and desired capacity of the Auto Scaling group to zero.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteAutoScalingGroupType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteAutoScalingGroup:(AWSAutoScalingDeleteAutoScalingGroupType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteAutoScalingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceInUse, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteAutoScalingGroup:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteAutoScalingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;If the group has instances or scaling activities in progress, you must specify the option to force the deletion in order for it to succeed.&lt;/p&gt;&lt;p&gt;If the group has policies, deleting the group deletes the policies, the underlying alarm actions, and any alarm that no longer has an associated action.&lt;/p&gt;&lt;p&gt;To remove instances from the Auto Scaling group before deleting it, call &lt;a&gt;DetachInstances&lt;/a&gt; with the list of instances and the option to decrement the desired capacity so that Auto Scaling does not launch replacement instances.&lt;/p&gt;&lt;p&gt;To terminate all instances before deleting the Auto Scaling group, call &lt;a&gt;UpdateAutoScalingGroup&lt;/a&gt; and set the minimum size and desired capacity of the Auto Scaling group to zero.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteAutoScalingGroupType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteAutoScalingGroup:(AWSAutoScalingDeleteAutoScalingGroupType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteAutoScalingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceInUse, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteAutoScalingGroup:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteLaunchConfiguration:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified launch configuration.&lt;/p&gt;&lt;p&gt;The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingLaunchConfigurationNameType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteLaunchConfiguration:(AWSAutoScalingLaunchConfigurationNameType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteLaunchConfiguration service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceInUse, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteLaunchConfiguration:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteLaunchConfiguration:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified launch configuration.&lt;/p&gt;&lt;p&gt;The launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingLaunchConfigurationNameType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteLaunchConfiguration:(AWSAutoScalingLaunchConfigurationNameType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteLaunchConfiguration service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceInUse, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteLaunchConfiguration:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteLifecycleHook:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified lifecycle hook.&lt;/p&gt;&lt;p&gt;If there are any outstanding lifecycle actions, they are completed first (&lt;code&gt;ABANDON&lt;/code&gt; for launching instances, &lt;code&gt;CONTINUE&lt;/code&gt; for terminating instances).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteLifecycleHookType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteLifecycleHookAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDeleteLifecycleHookAnswer*&gt; *)deleteLifecycleHook:(AWSAutoScalingDeleteLifecycleHookType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteLifecycleHook service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDeleteLifecycleHookAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteLifecycleHook:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteLifecycleHook:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified lifecycle hook.&lt;/p&gt;&lt;p&gt;If there are any outstanding lifecycle actions, they are completed first (&lt;code&gt;ABANDON&lt;/code&gt; for launching instances, &lt;code&gt;CONTINUE&lt;/code&gt; for terminating instances).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteLifecycleHookType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteLifecycleHookAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteLifecycleHook:(AWSAutoScalingDeleteLifecycleHookType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDeleteLifecycleHookAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteLifecycleHook service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteLifecycleHook:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteNotificationConfiguration:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified notification.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteNotificationConfigurationType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteNotificationConfiguration:(AWSAutoScalingDeleteNotificationConfigurationType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteNotificationConfiguration service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteNotificationConfiguration:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteNotificationConfiguration:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified notification.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteNotificationConfigurationType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteNotificationConfiguration:(AWSAutoScalingDeleteNotificationConfigurationType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteNotificationConfiguration service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteNotificationConfiguration:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deletePolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified Auto Scaling policy.&lt;/p&gt;&lt;p&gt;Deleting a policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeletePolicyType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deletePolicy:(AWSAutoScalingDeletePolicyType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeletePolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/deletePolicy:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deletePolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified Auto Scaling policy.&lt;/p&gt;&lt;p&gt;Deleting a policy deletes the underlying alarm action, but does not delete the alarm, even if it no longer has an associated action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeletePolicyType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deletePolicy:(AWSAutoScalingDeletePolicyType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeletePolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deletePolicy:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteScheduledAction:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified scheduled action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteScheduledActionType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteScheduledAction:(AWSAutoScalingDeleteScheduledActionType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteScheduledAction service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteScheduledAction:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteScheduledAction:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified scheduled action.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteScheduledActionType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteScheduledAction:(AWSAutoScalingDeleteScheduledActionType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteScheduledAction service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteScheduledAction:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteTags:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified tags.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteTagsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteTags:(AWSAutoScalingDeleteTagsType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteTags service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteTags:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/deleteTags:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified tags.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDeleteTagsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteTags:(AWSAutoScalingDeleteTagsType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteTags service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteTags:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAccountLimits:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the current Auto Scaling resource limits for your AWS account.&lt;/p&gt;&lt;p&gt;For information about requesting an increase in these limits, see AWS Service Limits in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeAccountLimitsAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeAccountLimitsAnswer*&gt; *)describeAccountLimits:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAccountLimits service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeAccountLimitsAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeAccountLimits:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAccountLimits:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the current Auto Scaling resource limits for your AWS account.&lt;/p&gt;&lt;p&gt;For information about requesting an increase in these limits, see AWS Service Limits in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeAccountLimitsAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeAccountLimits:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeAccountLimitsAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAccountLimits service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeAccountLimits:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAdjustmentTypes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the policy adjustment types for use with &lt;a&gt;PutScalingPolicy&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeAdjustmentTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeAdjustmentTypesAnswer*&gt; *)describeAdjustmentTypes:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAdjustmentTypes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeAdjustmentTypesAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeAdjustmentTypes:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAdjustmentTypes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the policy adjustment types for use with &lt;a&gt;PutScalingPolicy&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeAdjustmentTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeAdjustmentTypes:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeAdjustmentTypesAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAdjustmentTypes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeAdjustmentTypes:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAutoScalingGroups:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes one or more Auto Scaling groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAutoScalingGroupNamesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAutoScalingGroupsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingAutoScalingGroupsType*&gt; *)describeAutoScalingGroups:(AWSAutoScalingAutoScalingGroupNamesType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAutoScalingGroups service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingAutoScalingGroupsType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeAutoScalingGroups:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAutoScalingGroups:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes one or more Auto Scaling groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAutoScalingGroupNamesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAutoScalingGroupsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeAutoScalingGroups:(AWSAutoScalingAutoScalingGroupNamesType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingAutoScalingGroupsType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAutoScalingGroups service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeAutoScalingGroups:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAutoScalingInstances:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes one or more Auto Scaling instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeAutoScalingInstancesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAutoScalingInstancesType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingAutoScalingInstancesType*&gt; *)describeAutoScalingInstances:(AWSAutoScalingDescribeAutoScalingInstancesType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAutoScalingInstances service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingAutoScalingInstancesType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeAutoScalingInstances:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAutoScalingInstances:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes one or more Auto Scaling instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeAutoScalingInstancesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingAutoScalingInstancesType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeAutoScalingInstances:(AWSAutoScalingDescribeAutoScalingInstancesType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingAutoScalingInstancesType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAutoScalingInstances service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeAutoScalingInstances:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAutoScalingNotificationTypes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the notification types that are supported by Auto Scaling.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeAutoScalingNotificationTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeAutoScalingNotificationTypesAnswer*&gt; *)describeAutoScalingNotificationTypes:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAutoScalingNotificationTypes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeAutoScalingNotificationTypesAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeAutoScalingNotificationTypes:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeAutoScalingNotificationTypes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the notification types that are supported by Auto Scaling.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeAutoScalingNotificationTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeAutoScalingNotificationTypes:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeAutoScalingNotificationTypesAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeAutoScalingNotificationTypes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeAutoScalingNotificationTypes:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLaunchConfigurations:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes one or more launch configurations.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingLaunchConfigurationNamesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingLaunchConfigurationsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingLaunchConfigurationsType*&gt; *)describeLaunchConfigurations:(AWSAutoScalingLaunchConfigurationNamesType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLaunchConfigurations service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingLaunchConfigurationsType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeLaunchConfigurations:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLaunchConfigurations:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes one or more launch configurations.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingLaunchConfigurationNamesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingLaunchConfigurationsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeLaunchConfigurations:(AWSAutoScalingLaunchConfigurationNamesType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingLaunchConfigurationsType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLaunchConfigurations service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeLaunchConfigurations:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLifecycleHookTypes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the available types of lifecycle hooks.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLifecycleHookTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeLifecycleHookTypesAnswer*&gt; *)describeLifecycleHookTypes:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLifecycleHookTypes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeLifecycleHookTypesAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeLifecycleHookTypes:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLifecycleHookTypes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the available types of lifecycle hooks.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLifecycleHookTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeLifecycleHookTypes:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeLifecycleHookTypesAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLifecycleHookTypes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeLifecycleHookTypes:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLifecycleHooks:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the lifecycle hooks for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLifecycleHooksType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLifecycleHooksAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeLifecycleHooksAnswer*&gt; *)describeLifecycleHooks:(AWSAutoScalingDescribeLifecycleHooksType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLifecycleHooks service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeLifecycleHooksAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeLifecycleHooks:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLifecycleHooks:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the lifecycle hooks for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLifecycleHooksType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLifecycleHooksAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeLifecycleHooks:(AWSAutoScalingDescribeLifecycleHooksType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeLifecycleHooksAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLifecycleHooks service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeLifecycleHooks:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLoadBalancerTargetGroups:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the target groups for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLoadBalancerTargetGroupsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLoadBalancerTargetGroupsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeLoadBalancerTargetGroupsResponse*&gt; *)describeLoadBalancerTargetGroups:(AWSAutoScalingDescribeLoadBalancerTargetGroupsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLoadBalancerTargetGroups service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeLoadBalancerTargetGroupsResponse. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeLoadBalancerTargetGroups:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLoadBalancerTargetGroups:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the target groups for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLoadBalancerTargetGroupsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLoadBalancerTargetGroupsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeLoadBalancerTargetGroups:(AWSAutoScalingDescribeLoadBalancerTargetGroupsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeLoadBalancerTargetGroupsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLoadBalancerTargetGroups service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeLoadBalancerTargetGroups:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLoadBalancers:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the load balancers for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;Note that this operation describes only Classic load balancers. If you have Application load balancers, use &lt;a&gt;DescribeLoadBalancerTargetGroups&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLoadBalancersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLoadBalancersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeLoadBalancersResponse*&gt; *)describeLoadBalancers:(AWSAutoScalingDescribeLoadBalancersRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLoadBalancers service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeLoadBalancersResponse. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeLoadBalancers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeLoadBalancers:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the load balancers for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;Note that this operation describes only Classic load balancers. If you have Application load balancers, use &lt;a&gt;DescribeLoadBalancerTargetGroups&lt;/a&gt; instead.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLoadBalancersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeLoadBalancersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeLoadBalancers:(AWSAutoScalingDescribeLoadBalancersRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeLoadBalancersResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeLoadBalancers service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeLoadBalancers:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeMetricCollectionTypes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the available CloudWatch metrics for Auto Scaling.&lt;/p&gt;&lt;p&gt;Note that the &lt;code&gt;GroupStandbyInstances&lt;/code&gt; metric is not returned by default. You must explicitly request this metric when calling &lt;a&gt;EnableMetricsCollection&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeMetricCollectionTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeMetricCollectionTypesAnswer*&gt; *)describeMetricCollectionTypes:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeMetricCollectionTypes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeMetricCollectionTypesAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeMetricCollectionTypes:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeMetricCollectionTypes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the available CloudWatch metrics for Auto Scaling.&lt;/p&gt;&lt;p&gt;Note that the &lt;code&gt;GroupStandbyInstances&lt;/code&gt; metric is not returned by default. You must explicitly request this metric when calling &lt;a&gt;EnableMetricsCollection&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeMetricCollectionTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeMetricCollectionTypes:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeMetricCollectionTypesAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeMetricCollectionTypes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeMetricCollectionTypes:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeNotificationConfigurations:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the notification actions associated with the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeNotificationConfigurationsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeNotificationConfigurationsAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeNotificationConfigurationsAnswer*&gt; *)describeNotificationConfigurations:(AWSAutoScalingDescribeNotificationConfigurationsType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeNotificationConfigurations service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeNotificationConfigurationsAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeNotificationConfigurations:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeNotificationConfigurations:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the notification actions associated with the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeNotificationConfigurationsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeNotificationConfigurationsAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeNotificationConfigurations:(AWSAutoScalingDescribeNotificationConfigurationsType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeNotificationConfigurationsAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeNotificationConfigurations service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeNotificationConfigurations:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describePolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the policies for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribePoliciesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPoliciesType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingPoliciesType*&gt; *)describePolicies:(AWSAutoScalingDescribePoliciesType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribePolicies service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingPoliciesType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describePolicies:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describePolicies:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the policies for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribePoliciesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPoliciesType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describePolicies:(AWSAutoScalingDescribePoliciesType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingPoliciesType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribePolicies service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describePolicies:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeScalingActivities:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes one or more scaling activities for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeScalingActivitiesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingActivitiesType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingActivitiesType*&gt; *)describeScalingActivities:(AWSAutoScalingDescribeScalingActivitiesType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeScalingActivities service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingActivitiesType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeScalingActivities:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeScalingActivities:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes one or more scaling activities for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeScalingActivitiesType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingActivitiesType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeScalingActivities:(AWSAutoScalingDescribeScalingActivitiesType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingActivitiesType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeScalingActivities service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeScalingActivities:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeScalingProcessTypes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the scaling process types for use with &lt;a&gt;ResumeProcesses&lt;/a&gt; and &lt;a&gt;SuspendProcesses&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingProcessesType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingProcessesType*&gt; *)describeScalingProcessTypes:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeScalingProcessTypes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingProcessesType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeScalingProcessTypes:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeScalingProcessTypes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the scaling process types for use with &lt;a&gt;ResumeProcesses&lt;/a&gt; and &lt;a&gt;SuspendProcesses&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingProcessesType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeScalingProcessTypes:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingProcessesType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeScalingProcessTypes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeScalingProcessTypes:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeScheduledActions:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the actions scheduled for your Auto Scaling group that haven&apos;t run. To describe the actions that have already run, use &lt;a&gt;DescribeScalingActivities&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeScheduledActionsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingScheduledActionsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingScheduledActionsType*&gt; *)describeScheduledActions:(AWSAutoScalingDescribeScheduledActionsType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeScheduledActions service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingScheduledActionsType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeScheduledActions:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeScheduledActions:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the actions scheduled for your Auto Scaling group that haven&apos;t run. To describe the actions that have already run, use &lt;a&gt;DescribeScalingActivities&lt;/a&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeScheduledActionsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingScheduledActionsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeScheduledActions:(AWSAutoScalingDescribeScheduledActionsType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingScheduledActionsType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeScheduledActions service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeScheduledActions:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeTags:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the specified tags.&lt;/p&gt;&lt;p&gt;You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.&lt;/p&gt;&lt;p&gt;You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there&apos;s no match, no special message is returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeTagsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingTagsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingTagsType*&gt; *)describeTags:(AWSAutoScalingDescribeTagsType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeTags service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingTagsType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeTags:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeTags:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the specified tags.&lt;/p&gt;&lt;p&gt;You can use filters to limit the results. For example, you can query for the tags for a specific Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results.&lt;/p&gt;&lt;p&gt;You can also specify multiple filters. The result includes information for a particular tag only if it matches all the filters. If there&apos;s no match, no special message is returned.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeTagsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingTagsType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeTags:(AWSAutoScalingDescribeTagsType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingTagsType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeTags service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorInvalidNextToken, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeTags:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeTerminationPolicyTypes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the termination policies supported by Auto Scaling.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeTerminationPolicyTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDescribeTerminationPolicyTypesAnswer*&gt; *)describeTerminationPolicyTypes:(AWSRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeTerminationPolicyTypes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDescribeTerminationPolicyTypesAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/describeTerminationPolicyTypes:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/describeTerminationPolicyTypes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the termination policies supported by Auto Scaling.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDescribeTerminationPolicyTypesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeTerminationPolicyTypes:(AWSRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDescribeTerminationPolicyTypesAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeTerminationPolicyTypes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeTerminationPolicyTypes:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/detachInstances:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes one or more instances from the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;After the instances are detached, you can manage them independently from the rest of the Auto Scaling group.&lt;/p&gt;&lt;p&gt;If you do not specify the option to decrement the desired capacity, Auto Scaling launches instances to replace the ones that are detached.&lt;/p&gt;&lt;p&gt;If there is a Classic load balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.&lt;/p&gt;&lt;p&gt;For more information, see Detach EC2 Instances from Your Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachInstancesQuery</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachInstancesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDetachInstancesAnswer*&gt; *)detachInstances:(AWSAutoScalingDetachInstancesQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachInstances service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDetachInstancesAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/detachInstances:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/detachInstances:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Removes one or more instances from the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;After the instances are detached, you can manage them independently from the rest of the Auto Scaling group.&lt;/p&gt;&lt;p&gt;If you do not specify the option to decrement the desired capacity, Auto Scaling launches instances to replace the ones that are detached.&lt;/p&gt;&lt;p&gt;If there is a Classic load balancer attached to the Auto Scaling group, the instances are deregistered from the load balancer. If there are target groups attached to the Auto Scaling group, the instances are deregistered from the target groups.&lt;/p&gt;&lt;p&gt;For more information, see Detach EC2 Instances from Your Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachInstancesQuery</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachInstancesAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)detachInstances:(AWSAutoScalingDetachInstancesQuery *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDetachInstancesAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachInstances service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/detachInstances:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/detachLoadBalancerTargetGroups:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Detaches one or more target groups from the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachLoadBalancerTargetGroupsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachLoadBalancerTargetGroupsResultType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDetachLoadBalancerTargetGroupsResultType*&gt; *)detachLoadBalancerTargetGroups:(AWSAutoScalingDetachLoadBalancerTargetGroupsType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachLoadBalancerTargetGroups service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDetachLoadBalancerTargetGroupsResultType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/detachLoadBalancerTargetGroups:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/detachLoadBalancerTargetGroups:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Detaches one or more target groups from the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachLoadBalancerTargetGroupsType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachLoadBalancerTargetGroupsResultType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)detachLoadBalancerTargetGroups:(AWSAutoScalingDetachLoadBalancerTargetGroupsType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDetachLoadBalancerTargetGroupsResultType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachLoadBalancerTargetGroups service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/detachLoadBalancerTargetGroups:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/detachLoadBalancers:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Detaches one or more Classic load balancers from the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;Note that this operation detaches only Classic load balancers. If you have Application load balancers, use &lt;a&gt;DetachLoadBalancerTargetGroups&lt;/a&gt; instead.&lt;/p&gt;&lt;p&gt;When you detach a load balancer, it enters the &lt;code&gt;Removing&lt;/code&gt; state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using &lt;a&gt;DescribeLoadBalancers&lt;/a&gt;. Note that the instances remain running.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachLoadBalancersType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachLoadBalancersResultType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingDetachLoadBalancersResultType*&gt; *)detachLoadBalancers:(AWSAutoScalingDetachLoadBalancersType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachLoadBalancers service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingDetachLoadBalancersResultType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/detachLoadBalancers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/detachLoadBalancers:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Detaches one or more Classic load balancers from the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;Note that this operation detaches only Classic load balancers. If you have Application load balancers, use &lt;a&gt;DetachLoadBalancerTargetGroups&lt;/a&gt; instead.&lt;/p&gt;&lt;p&gt;When you detach a load balancer, it enters the &lt;code&gt;Removing&lt;/code&gt; state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using &lt;a&gt;DescribeLoadBalancers&lt;/a&gt;. Note that the instances remain running.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachLoadBalancersType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDetachLoadBalancersResultType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)detachLoadBalancers:(AWSAutoScalingDetachLoadBalancersType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingDetachLoadBalancersResultType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DetachLoadBalancers service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/detachLoadBalancers:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/disableMetricsCollection:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables monitoring of the specified metrics for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDisableMetricsCollectionQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)disableMetricsCollection:(AWSAutoScalingDisableMetricsCollectionQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DisableMetricsCollection service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/disableMetricsCollection:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/disableMetricsCollection:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables monitoring of the specified metrics for the specified Auto Scaling group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingDisableMetricsCollectionQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)disableMetricsCollection:(AWSAutoScalingDisableMetricsCollectionQuery *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DisableMetricsCollection service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/disableMetricsCollection:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/enableMetricsCollection:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables monitoring of the specified metrics for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;You can only enable metrics collection if &lt;code&gt;InstanceMonitoring&lt;/code&gt; in the launch configuration for the group is set to &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingEnableMetricsCollectionQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)enableMetricsCollection:(AWSAutoScalingEnableMetricsCollectionQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnableMetricsCollection service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/enableMetricsCollection:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/enableMetricsCollection:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables monitoring of the specified metrics for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;You can only enable metrics collection if &lt;code&gt;InstanceMonitoring&lt;/code&gt; in the launch configuration for the group is set to &lt;code&gt;True&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingEnableMetricsCollectionQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)enableMetricsCollection:(AWSAutoScalingEnableMetricsCollectionQuery *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnableMetricsCollection service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableMetricsCollection:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/enterStandby:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Moves the specified instances into &lt;code&gt;Standby&lt;/code&gt; mode.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Lifecycle in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingEnterStandbyQuery</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingEnterStandbyAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingEnterStandbyAnswer*&gt; *)enterStandby:(AWSAutoScalingEnterStandbyQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnterStandby service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingEnterStandbyAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/enterStandby:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/enterStandby:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Moves the specified instances into &lt;code&gt;Standby&lt;/code&gt; mode.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Lifecycle in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingEnterStandbyQuery</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingEnterStandbyAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)enterStandby:(AWSAutoScalingEnterStandbyQuery *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingEnterStandbyAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the EnterStandby service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enterStandby:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/executePolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Executes the specified policy.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingExecutePolicyType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)executePolicy:(AWSAutoScalingExecutePolicyType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ExecutePolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/executePolicy:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/executePolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Executes the specified policy.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingExecutePolicyType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)executePolicy:(AWSAutoScalingExecutePolicyType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ExecutePolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/executePolicy:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/exitStandby:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Moves the specified instances out of &lt;code&gt;Standby&lt;/code&gt; mode.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Lifecycle in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingExitStandbyQuery</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingExitStandbyAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingExitStandbyAnswer*&gt; *)exitStandby:(AWSAutoScalingExitStandbyQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ExitStandby service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingExitStandbyAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/exitStandby:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/exitStandby:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Moves the specified instances out of &lt;code&gt;Standby&lt;/code&gt; mode.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Lifecycle in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingExitStandbyQuery</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingExitStandbyAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)exitStandby:(AWSAutoScalingExitStandbyQuery *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingExitStandbyAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ExitStandby service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/exitStandby:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/putLifecycleHook:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates or updates a lifecycle hook for the specified Auto Scaling Group.&lt;/p&gt;&lt;p&gt;A lifecycle hook tells Auto Scaling that you want to perform an action on an instance that is not actively in service; for example, either when the instance launches or before the instance terminates.&lt;/p&gt;&lt;p&gt;This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you finish before the timeout period ends, complete the lifecycle action.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For more information, see AWS Service Limits in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutLifecycleHookType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutLifecycleHookAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingPutLifecycleHookAnswer*&gt; *)putLifecycleHook:(AWSAutoScalingPutLifecycleHookType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutLifecycleHook service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingPutLifecycleHookAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/putLifecycleHook:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/putLifecycleHook:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates or updates a lifecycle hook for the specified Auto Scaling Group.&lt;/p&gt;&lt;p&gt;A lifecycle hook tells Auto Scaling that you want to perform an action on an instance that is not actively in service; for example, either when the instance launches or before the instance terminates.&lt;/p&gt;&lt;p&gt;This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you finish before the timeout period ends, complete the lifecycle action.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For more information, see AWS Service Limits in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutLifecycleHookType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutLifecycleHookAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)putLifecycleHook:(AWSAutoScalingPutLifecycleHookType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingPutLifecycleHookAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutLifecycleHook service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/putLifecycleHook:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/putNotificationConfiguration:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.&lt;/p&gt;&lt;p&gt;This configuration overwrites any existing configuration.&lt;/p&gt;&lt;p&gt;For more information see Getting SNS Notifications When Your Auto Scaling Group Scales in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutNotificationConfigurationType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putNotificationConfiguration:(AWSAutoScalingPutNotificationConfigurationType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutNotificationConfiguration service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/putNotificationConfiguration:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/putNotificationConfiguration:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to the specified topic can have messages delivered to an endpoint such as a web server or an email address.&lt;/p&gt;&lt;p&gt;This configuration overwrites any existing configuration.&lt;/p&gt;&lt;p&gt;For more information see Getting SNS Notifications When Your Auto Scaling Group Scales in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutNotificationConfigurationType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)putNotificationConfiguration:(AWSAutoScalingPutNotificationConfigurationType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutNotificationConfiguration service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/putNotificationConfiguration:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/putScalingPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates or updates a policy for an Auto Scaling group. To update an existing policy, use the existing policy name and set the parameters you want to change. Any existing parameter not changed in an update to an existing policy is not changed in this update request.&lt;/p&gt;&lt;p&gt;If you exceed your maximum limit of step adjustments, which by default is 20 per region, the call fails. For information about updating this limit, see AWS Service Limits in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutScalingPolicyType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPolicyARNType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingPolicyARNType*&gt; *)putScalingPolicy:(AWSAutoScalingPutScalingPolicyType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutScalingPolicy service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingPolicyARNType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/putScalingPolicy:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/putScalingPolicy:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates or updates a policy for an Auto Scaling group. To update an existing policy, use the existing policy name and set the parameters you want to change. Any existing parameter not changed in an update to an existing policy is not changed in this update request.&lt;/p&gt;&lt;p&gt;If you exceed your maximum limit of step adjustments, which by default is 20 per region, the call fails. For information about updating this limit, see AWS Service Limits in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutScalingPolicyType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPolicyARNType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)putScalingPolicy:(AWSAutoScalingPutScalingPolicyType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingPolicyARNType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutScalingPolicy service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/putScalingPolicy:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/putScheduledUpdateGroupAction:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates or updates a scheduled scaling action for an Auto Scaling group. When updating a scheduled scaling action, if you leave a parameter unspecified, the corresponding value remains unchanged in the affected Auto Scaling group.&lt;/p&gt;&lt;p&gt;For more information, see Scheduled Scaling in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutScheduledUpdateGroupActionType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)putScheduledUpdateGroupAction:(AWSAutoScalingPutScheduledUpdateGroupActionType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutScheduledUpdateGroupAction service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorAlreadyExists, AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/putScheduledUpdateGroupAction:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/putScheduledUpdateGroupAction:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates or updates a scheduled scaling action for an Auto Scaling group. When updating a scheduled scaling action, if you leave a parameter unspecified, the corresponding value remains unchanged in the affected Auto Scaling group.&lt;/p&gt;&lt;p&gt;For more information, see Scheduled Scaling in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingPutScheduledUpdateGroupActionType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)putScheduledUpdateGroupAction:(AWSAutoScalingPutScheduledUpdateGroupActionType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the PutScheduledUpdateGroupAction service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorAlreadyExists, AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/putScheduledUpdateGroupAction:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/recordLifecycleActionHeartbeat:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using &lt;a&gt;PutLifecycleHook&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you finish before the timeout period ends, complete the lifecycle action.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For more information, see Auto Scaling Lifecycle in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingRecordLifecycleActionHeartbeatType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingRecordLifecycleActionHeartbeatAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingRecordLifecycleActionHeartbeatAnswer*&gt; *)recordLifecycleActionHeartbeat:(AWSAutoScalingRecordLifecycleActionHeartbeatType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RecordLifecycleActionHeartbeat service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingRecordLifecycleActionHeartbeatAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/recordLifecycleActionHeartbeat:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/recordLifecycleActionHeartbeat:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Records a heartbeat for the lifecycle action associated with the specified token or instance. This extends the timeout by the length of time defined using &lt;a&gt;PutLifecycleHook&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling group:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Auto Scaling launches or terminates instances.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Auto Scaling to publish lifecycle notifications to the target.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;b&gt;If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you finish before the timeout period ends, complete the lifecycle action.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For more information, see Auto Scaling Lifecycle in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingRecordLifecycleActionHeartbeatType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingRecordLifecycleActionHeartbeatAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)recordLifecycleActionHeartbeat:(AWSAutoScalingRecordLifecycleActionHeartbeatType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingRecordLifecycleActionHeartbeatAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RecordLifecycleActionHeartbeat service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/recordLifecycleActionHeartbeat:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/resumeProcesses:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resumes the specified suspended Auto Scaling processes, or all suspended process, for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;For more information, see Suspending and Resuming Auto Scaling Processes in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingScalingProcessQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)resumeProcesses:(AWSAutoScalingScalingProcessQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ResumeProcesses service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceInUse, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/resumeProcesses:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/resumeProcesses:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resumes the specified suspended Auto Scaling processes, or all suspended process, for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;For more information, see Suspending and Resuming Auto Scaling Processes in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingScalingProcessQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)resumeProcesses:(AWSAutoScalingScalingProcessQuery *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ResumeProcesses service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceInUse, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/resumeProcesses:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/setDesiredCapacity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the size of the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;For more information about desired capacity, see What Is Auto Scaling? in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingSetDesiredCapacityType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)setDesiredCapacity:(AWSAutoScalingSetDesiredCapacityType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetDesiredCapacity service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/setDesiredCapacity:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/setDesiredCapacity:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the size of the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;For more information about desired capacity, see What Is Auto Scaling? in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingSetDesiredCapacityType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setDesiredCapacity:(AWSAutoScalingSetDesiredCapacityType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetDesiredCapacity service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDesiredCapacity:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/setInstanceHealth:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the health status of the specified instance.&lt;/p&gt;&lt;p&gt;For more information, see Health Checks in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingSetInstanceHealthQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)setInstanceHealth:(AWSAutoScalingSetInstanceHealthQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetInstanceHealth service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/setInstanceHealth:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/setInstanceHealth:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the health status of the specified instance.&lt;/p&gt;&lt;p&gt;For more information, see Health Checks in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingSetInstanceHealthQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setInstanceHealth:(AWSAutoScalingSetInstanceHealthQuery *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetInstanceHealth service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setInstanceHealth:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/setInstanceProtection:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the instance protection settings of the specified instances.&lt;/p&gt;&lt;p&gt;For more information, see Instance Protection in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingSetInstanceProtectionQuery</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingSetInstanceProtectionAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingSetInstanceProtectionAnswer*&gt; *)setInstanceProtection:(AWSAutoScalingSetInstanceProtectionQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetInstanceProtection service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingSetInstanceProtectionAnswer. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/setInstanceProtection:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/setInstanceProtection:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the instance protection settings of the specified instances.&lt;/p&gt;&lt;p&gt;For more information, see Instance Protection in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingSetInstanceProtectionQuery</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingSetInstanceProtectionAnswer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setInstanceProtection:(AWSAutoScalingSetInstanceProtectionQuery *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingSetInstanceProtectionAnswer *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetInstanceProtection service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorLimitExceeded, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setInstanceProtection:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/suspendProcesses:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Suspends the specified Auto Scaling processes, or all processes, for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;Note that if you suspend either the &lt;code&gt;Launch&lt;/code&gt; or &lt;code&gt;Terminate&lt;/code&gt; process types, it can prevent other process types from functioning properly.&lt;/p&gt;&lt;p&gt;To resume processes that have been suspended, use &lt;a&gt;ResumeProcesses&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Suspending and Resuming Auto Scaling Processes in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingScalingProcessQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)suspendProcesses:(AWSAutoScalingScalingProcessQuery *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SuspendProcesses service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceInUse, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/suspendProcesses:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/suspendProcesses:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Suspends the specified Auto Scaling processes, or all processes, for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;Note that if you suspend either the &lt;code&gt;Launch&lt;/code&gt; or &lt;code&gt;Terminate&lt;/code&gt; process types, it can prevent other process types from functioning properly.&lt;/p&gt;&lt;p&gt;To resume processes that have been suspended, use &lt;a&gt;ResumeProcesses&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information, see Suspending and Resuming Auto Scaling Processes in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingScalingProcessQuery</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)suspendProcesses:(AWSAutoScalingScalingProcessQuery *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SuspendProcesses service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorResourceInUse, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/suspendProcesses:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/terminateInstanceInAutoScalingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Terminates the specified instance and optionally adjusts the desired group size.&lt;/p&gt;&lt;p&gt;This call simply makes a termination request. The instance is not terminated immediately.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingTerminateInstanceInAutoScalingGroupType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingActivityType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSAutoScalingActivityType*&gt; *)terminateInstanceInAutoScalingGroup:(AWSAutoScalingTerminateInstanceInAutoScalingGroupType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TerminateInstanceInAutoScalingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSAutoScalingActivityType. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/terminateInstanceInAutoScalingGroup:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/terminateInstanceInAutoScalingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Terminates the specified instance and optionally adjusts the desired group size.&lt;/p&gt;&lt;p&gt;This call simply makes a termination request. The instance is not terminated immediately.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingTerminateInstanceInAutoScalingGroupType</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingActivityType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)terminateInstanceInAutoScalingGroup:(AWSAutoScalingTerminateInstanceInAutoScalingGroupType *)request completionHandler:(void ( ^ _Nullable ) ( AWSAutoScalingActivityType *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the TerminateInstanceInAutoScalingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/terminateInstanceInAutoScalingGroup:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/updateAutoScalingGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the configuration for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;To update an Auto Scaling group with a launch configuration with &lt;code&gt;InstanceMonitoring&lt;/code&gt; set to &lt;code&gt;False&lt;/code&gt;, you must first disable the collection of group metrics. Otherwise, you will get an error. If you have previously enabled the collection of group metrics, you can disable it using &lt;a&gt;DisableMetricsCollection&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The new settings are registered upon the completion of this call. Any launch configuration settings take effect on any triggers after this call returns. Scaling activities that are currently in progress aren&apos;t affected.&lt;/p&gt;&lt;p&gt;Note the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If you specify a new value for &lt;code&gt;MinSize&lt;/code&gt; without specifying a value for &lt;code&gt;DesiredCapacity&lt;/code&gt;, and the new &lt;code&gt;MinSize&lt;/code&gt; is larger than the current size of the group, we implicitly call &lt;a&gt;SetDesiredCapacity&lt;/a&gt; to set the size of the group to the new value of &lt;code&gt;MinSize&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you specify a new value for &lt;code&gt;MaxSize&lt;/code&gt; without specifying a value for &lt;code&gt;DesiredCapacity&lt;/code&gt;, and the new &lt;code&gt;MaxSize&lt;/code&gt; is smaller than the current size of the group, we implicitly call &lt;a&gt;SetDesiredCapacity&lt;/a&gt; to set the size of the group to the new value of &lt;code&gt;MaxSize&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;All other optional parameters are left unchanged if not specified.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingUpdateAutoScalingGroupType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)updateAutoScalingGroup:(AWSAutoScalingUpdateAutoScalingGroupType *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAutoScalingGroup service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceContention.</Abstract></ReturnValue>
			<Anchor>//api/name/updateAutoScalingGroup:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScaling/updateAutoScalingGroup:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the configuration for the specified Auto Scaling group.&lt;/p&gt;&lt;p&gt;To update an Auto Scaling group with a launch configuration with &lt;code&gt;InstanceMonitoring&lt;/code&gt; set to &lt;code&gt;False&lt;/code&gt;, you must first disable the collection of group metrics. Otherwise, you will get an error. If you have previously enabled the collection of group metrics, you can disable it using &lt;a&gt;DisableMetricsCollection&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The new settings are registered upon the completion of this call. Any launch configuration settings take effect on any triggers after this call returns. Scaling activities that are currently in progress aren&apos;t affected.&lt;/p&gt;&lt;p&gt;Note the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If you specify a new value for &lt;code&gt;MinSize&lt;/code&gt; without specifying a value for &lt;code&gt;DesiredCapacity&lt;/code&gt;, and the new &lt;code&gt;MinSize&lt;/code&gt; is larger than the current size of the group, we implicitly call &lt;a&gt;SetDesiredCapacity&lt;/a&gt; to set the size of the group to the new value of &lt;code&gt;MinSize&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If you specify a new value for &lt;code&gt;MaxSize&lt;/code&gt; without specifying a value for &lt;code&gt;DesiredCapacity&lt;/code&gt;, and the new &lt;code&gt;MaxSize&lt;/code&gt; is smaller than the current size of the group, we implicitly call &lt;a&gt;SetDesiredCapacity&lt;/a&gt; to set the size of the group to the new value of &lt;code&gt;MaxSize&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;All other optional parameters are left unchanged if not specified.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingUpdateAutoScalingGroupType</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateAutoScalingGroup:(AWSAutoScalingUpdateAutoScalingGroupType *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateAutoScalingGroup service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSAutoScalingErrorDomain domain and the following error code: AWSAutoScalingErrorScalingActivityInProgress, AWSAutoScalingErrorResourceContention.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateAutoScalingGroup:completionHandler:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
        
	</File>
</Tokens>