<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSEC2DescribeInstanceStatusRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSEC2DescribeInstanceStatusRequest</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Contains the parameters for DescribeInstanceStatus.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
            
			
			<NodeRef refid="597"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/setDryRun:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/dryRun</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeInstanceStatusRequest/dryRun</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/setFilters:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;availability-zone&lt;/code&gt; - The Availability Zone of the instance.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.code&lt;/code&gt; - The code for the scheduled event (&lt;code&gt;instance-reboot&lt;/code&gt; | &lt;code&gt;system-reboot&lt;/code&gt; | &lt;code&gt;system-maintenance&lt;/code&gt; | &lt;code&gt;instance-retirement&lt;/code&gt; | &lt;code&gt;instance-stop&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.description&lt;/code&gt; - A description of the event.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.not-after&lt;/code&gt; - The latest end time for the scheduled event (for example, &lt;code&gt;2014-09-15T17:15:20.000Z&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.not-before&lt;/code&gt; - The earliest start time for the scheduled event (for example, &lt;code&gt;2014-09-15T17:15:20.000Z&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-state-code&lt;/code&gt; - The code for the instance state, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-state-name&lt;/code&gt; - The state of the instance (&lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;running&lt;/code&gt; | &lt;code&gt;shutting-down&lt;/code&gt; | &lt;code&gt;terminated&lt;/code&gt; | &lt;code&gt;stopping&lt;/code&gt; | &lt;code&gt;stopped&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-status.reachability&lt;/code&gt; - Filters on instance status where the name is &lt;code&gt;reachability&lt;/code&gt; (&lt;code&gt;passed&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-status.status&lt;/code&gt; - The status of the instance (&lt;code&gt;ok&lt;/code&gt; | &lt;code&gt;impaired&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt; | &lt;code&gt;not-applicable&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;system-status.reachability&lt;/code&gt; - Filters on system status where the name is &lt;code&gt;reachability&lt;/code&gt; (&lt;code&gt;passed&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;system-status.status&lt;/code&gt; - The system status of the instance (&lt;code&gt;ok&lt;/code&gt; | &lt;code&gt;impaired&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt; | &lt;code&gt;not-applicable&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Filter*&gt; *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/filters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;availability-zone&lt;/code&gt; - The Availability Zone of the instance.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.code&lt;/code&gt; - The code for the scheduled event (&lt;code&gt;instance-reboot&lt;/code&gt; | &lt;code&gt;system-reboot&lt;/code&gt; | &lt;code&gt;system-maintenance&lt;/code&gt; | &lt;code&gt;instance-retirement&lt;/code&gt; | &lt;code&gt;instance-stop&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.description&lt;/code&gt; - A description of the event.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.not-after&lt;/code&gt; - The latest end time for the scheduled event (for example, &lt;code&gt;2014-09-15T17:15:20.000Z&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.not-before&lt;/code&gt; - The earliest start time for the scheduled event (for example, &lt;code&gt;2014-09-15T17:15:20.000Z&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-state-code&lt;/code&gt; - The code for the instance state, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-state-name&lt;/code&gt; - The state of the instance (&lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;running&lt;/code&gt; | &lt;code&gt;shutting-down&lt;/code&gt; | &lt;code&gt;terminated&lt;/code&gt; | &lt;code&gt;stopping&lt;/code&gt; | &lt;code&gt;stopped&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-status.reachability&lt;/code&gt; - Filters on instance status where the name is &lt;code&gt;reachability&lt;/code&gt; (&lt;code&gt;passed&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-status.status&lt;/code&gt; - The status of the instance (&lt;code&gt;ok&lt;/code&gt; | &lt;code&gt;impaired&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt; | &lt;code&gt;not-applicable&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;system-status.reachability&lt;/code&gt; - Filters on system status where the name is &lt;code&gt;reachability&lt;/code&gt; (&lt;code&gt;passed&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;system-status.status&lt;/code&gt; - The system status of the instance (&lt;code&gt;ok&lt;/code&gt; | &lt;code&gt;impaired&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt; | &lt;code&gt;not-applicable&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Filter*&gt; *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeInstanceStatusRequest/filters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more filters.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;availability-zone&lt;/code&gt; - The Availability Zone of the instance.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.code&lt;/code&gt; - The code for the scheduled event (&lt;code&gt;instance-reboot&lt;/code&gt; | &lt;code&gt;system-reboot&lt;/code&gt; | &lt;code&gt;system-maintenance&lt;/code&gt; | &lt;code&gt;instance-retirement&lt;/code&gt; | &lt;code&gt;instance-stop&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.description&lt;/code&gt; - A description of the event.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.not-after&lt;/code&gt; - The latest end time for the scheduled event (for example, &lt;code&gt;2014-09-15T17:15:20.000Z&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;event.not-before&lt;/code&gt; - The earliest start time for the scheduled event (for example, &lt;code&gt;2014-09-15T17:15:20.000Z&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-state-code&lt;/code&gt; - The code for the instance state, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-state-name&lt;/code&gt; - The state of the instance (&lt;code&gt;pending&lt;/code&gt; | &lt;code&gt;running&lt;/code&gt; | &lt;code&gt;shutting-down&lt;/code&gt; | &lt;code&gt;terminated&lt;/code&gt; | &lt;code&gt;stopping&lt;/code&gt; | &lt;code&gt;stopped&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-status.reachability&lt;/code&gt; - Filters on instance status where the name is &lt;code&gt;reachability&lt;/code&gt; (&lt;code&gt;passed&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;instance-status.status&lt;/code&gt; - The status of the instance (&lt;code&gt;ok&lt;/code&gt; | &lt;code&gt;impaired&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt; | &lt;code&gt;not-applicable&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;system-status.reachability&lt;/code&gt; - Filters on system status where the name is &lt;code&gt;reachability&lt;/code&gt; (&lt;code&gt;passed&lt;/code&gt; | &lt;code&gt;failed&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;system-status.status&lt;/code&gt; - The system status of the instance (&lt;code&gt;ok&lt;/code&gt; | &lt;code&gt;impaired&lt;/code&gt; | &lt;code&gt;initializing&lt;/code&gt; | &lt;code&gt;insufficient-data&lt;/code&gt; | &lt;code&gt;not-applicable&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Filter*&gt; *filters</Declaration>
			
			
			<Anchor>//api/name/filters</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/setIncludeAllInstances:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;When &lt;code&gt;true&lt;/code&gt;, includes the health status for all instances. When &lt;code&gt;false&lt;/code&gt;, includes the health status for running instances only.&lt;/p&gt;&lt;p&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *includeAllInstances</Declaration>
			
			
			<Anchor>//api/name/includeAllInstances</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/includeAllInstances</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;When &lt;code&gt;true&lt;/code&gt;, includes the health status for all instances. When &lt;code&gt;false&lt;/code&gt;, includes the health status for running instances only.&lt;/p&gt;&lt;p&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *includeAllInstances</Declaration>
			
			
			<Anchor>//api/name/includeAllInstances</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeInstanceStatusRequest/includeAllInstances</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;When &lt;code&gt;true&lt;/code&gt;, includes the health status for all instances. When &lt;code&gt;false&lt;/code&gt;, includes the health status for running instances only.&lt;/p&gt;&lt;p&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *includeAllInstances</Declaration>
			
			
			<Anchor>//api/name/includeAllInstances</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/setInstanceIds:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more instance IDs.&lt;/p&gt;&lt;p&gt;Default: Describes all your instances.&lt;/p&gt;&lt;p&gt;Constraints: Maximum 100 explicitly specified instance IDs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *instanceIds</Declaration>
			
			
			<Anchor>//api/name/instanceIds</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/instanceIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more instance IDs.&lt;/p&gt;&lt;p&gt;Default: Describes all your instances.&lt;/p&gt;&lt;p&gt;Constraints: Maximum 100 explicitly specified instance IDs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *instanceIds</Declaration>
			
			
			<Anchor>//api/name/instanceIds</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeInstanceStatusRequest/instanceIds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more instance IDs.&lt;/p&gt;&lt;p&gt;Default: Describes all your instances.&lt;/p&gt;&lt;p&gt;Constraints: Maximum 100 explicitly specified instance IDs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *instanceIds</Declaration>
			
			
			<Anchor>//api/name/instanceIds</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/setMaxResults:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned &lt;code&gt;NextToken&lt;/code&gt; value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxResults</Declaration>
			
			
			<Anchor>//api/name/maxResults</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/maxResults</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned &lt;code&gt;NextToken&lt;/code&gt; value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxResults</Declaration>
			
			
			<Anchor>//api/name/maxResults</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeInstanceStatusRequest/maxResults</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned &lt;code&gt;NextToken&lt;/code&gt; value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxResults</Declaration>
			
			
			<Anchor>//api/name/maxResults</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/setNextToken:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The token to retrieve the next page of results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *nextToken</Declaration>
			
			
			<Anchor>//api/name/nextToken</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2DescribeInstanceStatusRequest/nextToken</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The token to retrieve the next page of results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *nextToken</Declaration>
			
			
			<Anchor>//api/name/nextToken</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2DescribeInstanceStatusRequest/nextToken</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The token to retrieve the next page of results.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *nextToken</Declaration>
			
			
			<Anchor>//api/name/nextToken</Anchor>
            <NodeRef refid="597"/>
		</Token>
		
        
        
	</File>
</Tokens>