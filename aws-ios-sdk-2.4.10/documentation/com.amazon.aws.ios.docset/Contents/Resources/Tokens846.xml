<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSEC2ReplaceNetworkAclEntryRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSEC2ReplaceNetworkAclEntryRequest</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Contains the parameters for ReplaceNetworkAclEntry.&lt;/p&gt;
Required parameters: [NetworkAclId, RuleNumber, Protocol, RuleAction, Egress, CidrBlock]</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
            
			
			<NodeRef refid="846"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setCidrBlock:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The network range to allow or deny, in CIDR notation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *cidrBlock</Declaration>
			
			
			<Anchor>//api/name/cidrBlock</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/cidrBlock</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The network range to allow or deny, in CIDR notation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *cidrBlock</Declaration>
			
			
			<Anchor>//api/name/cidrBlock</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/cidrBlock</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The network range to allow or deny, in CIDR notation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *cidrBlock</Declaration>
			
			
			<Anchor>//api/name/cidrBlock</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setDryRun:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/dryRun</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/dryRun</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *dryRun</Declaration>
			
			
			<Anchor>//api/name/dryRun</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setEgress:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to replace the egress rule.&lt;/p&gt;&lt;p&gt;Default: If no value is specified, we replace the ingress rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *egress</Declaration>
			
			
			<Anchor>//api/name/egress</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/egress</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to replace the egress rule.&lt;/p&gt;&lt;p&gt;Default: If no value is specified, we replace the ingress rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *egress</Declaration>
			
			
			<Anchor>//api/name/egress</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/egress</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to replace the egress rule.&lt;/p&gt;&lt;p&gt;Default: If no value is specified, we replace the ingress rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *egress</Declaration>
			
			
			<Anchor>//api/name/egress</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setIcmpTypeCode:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IcmpTypeCode *icmpTypeCode</Declaration>
			
			
			<Anchor>//api/name/icmpTypeCode</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/icmpTypeCode</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IcmpTypeCode *icmpTypeCode</Declaration>
			
			
			<Anchor>//api/name/icmpTypeCode</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/icmpTypeCode</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IcmpTypeCode *icmpTypeCode</Declaration>
			
			
			<Anchor>//api/name/icmpTypeCode</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setNetworkAclId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the ACL.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *networkAclId</Declaration>
			
			
			<Anchor>//api/name/networkAclId</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/networkAclId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the ACL.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *networkAclId</Declaration>
			
			
			<Anchor>//api/name/networkAclId</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/networkAclId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the ACL.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *networkAclId</Declaration>
			
			
			<Anchor>//api/name/networkAclId</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setPortRange:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;TCP or UDP protocols: The range of ports the rule applies to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2PortRange *portRange</Declaration>
			
			
			<Anchor>//api/name/portRange</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/portRange</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;TCP or UDP protocols: The range of ports the rule applies to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2PortRange *portRange</Declaration>
			
			
			<Anchor>//api/name/portRange</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/portRange</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;TCP or UDP protocols: The range of ports the rule applies to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2PortRange *portRange</Declaration>
			
			
			<Anchor>//api/name/portRange</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setProtocols:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IP protocol. You can specify &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt; to mean all protocols.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *protocols</Declaration>
			
			
			<Anchor>//api/name/protocols</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/protocols</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IP protocol. You can specify &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt; to mean all protocols.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *protocols</Declaration>
			
			
			<Anchor>//api/name/protocols</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/protocols</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IP protocol. You can specify &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt; to mean all protocols.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *protocols</Declaration>
			
			
			<Anchor>//api/name/protocols</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setRuleAction:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to allow or deny the traffic that matches the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2RuleAction ruleAction</Declaration>
			
			
			<Anchor>//api/name/ruleAction</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/ruleAction</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to allow or deny the traffic that matches the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2RuleAction ruleAction</Declaration>
			
			
			<Anchor>//api/name/ruleAction</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/ruleAction</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to allow or deny the traffic that matches the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2RuleAction ruleAction</Declaration>
			
			
			<Anchor>//api/name/ruleAction</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/setRuleNumber:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The rule number of the entry to replace.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ruleNumber</Declaration>
			
			
			<Anchor>//api/name/ruleNumber</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2ReplaceNetworkAclEntryRequest/ruleNumber</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The rule number of the entry to replace.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ruleNumber</Declaration>
			
			
			<Anchor>//api/name/ruleNumber</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2ReplaceNetworkAclEntryRequest/ruleNumber</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The rule number of the entry to replace.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ruleNumber</Declaration>
			
			
			<Anchor>//api/name/ruleNumber</Anchor>
            <NodeRef refid="846"/>
		</Token>
		
        
        
	</File>
</Tokens>