<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSMachineLearningGetMLModelOutput.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSMachineLearningGetMLModelOutput</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the output of a &lt;a&gt;GetMLModel&lt;/a&gt; operation, and provides detailed information about a &lt;code&gt;MLModel&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
            
			
			<NodeRef refid="1285"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setCreatedAt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time that the &lt;code&gt;MLModel&lt;/code&gt; was created. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *createdAt</Declaration>
			
			
			<Anchor>//api/name/createdAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/createdAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time that the &lt;code&gt;MLModel&lt;/code&gt; was created. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *createdAt</Declaration>
			
			
			<Anchor>//api/name/createdAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/createdAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time that the &lt;code&gt;MLModel&lt;/code&gt; was created. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *createdAt</Declaration>
			
			
			<Anchor>//api/name/createdAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setCreatedByIamUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The AWS user account from which the &lt;code&gt;MLModel&lt;/code&gt; was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *createdByIamUser</Declaration>
			
			
			<Anchor>//api/name/createdByIamUser</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/createdByIamUser</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The AWS user account from which the &lt;code&gt;MLModel&lt;/code&gt; was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *createdByIamUser</Declaration>
			
			
			<Anchor>//api/name/createdByIamUser</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/createdByIamUser</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The AWS user account from which the &lt;code&gt;MLModel&lt;/code&gt; was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *createdByIamUser</Declaration>
			
			
			<Anchor>//api/name/createdByIamUser</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setEndpointInfo:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current endpoint of the &lt;code&gt;MLModel&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSMachineLearningRealtimeEndpointInfo *endpointInfo</Declaration>
			
			
			<Anchor>//api/name/endpointInfo</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/endpointInfo</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current endpoint of the &lt;code&gt;MLModel&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSMachineLearningRealtimeEndpointInfo *endpointInfo</Declaration>
			
			
			<Anchor>//api/name/endpointInfo</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/endpointInfo</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current endpoint of the &lt;code&gt;MLModel&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSMachineLearningRealtimeEndpointInfo *endpointInfo</Declaration>
			
			
			<Anchor>//api/name/endpointInfo</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setInputDataLocationS3:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The location of the data file or directory in Amazon Simple Storage Service (Amazon S3).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *inputDataLocationS3</Declaration>
			
			
			<Anchor>//api/name/inputDataLocationS3</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/inputDataLocationS3</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The location of the data file or directory in Amazon Simple Storage Service (Amazon S3).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *inputDataLocationS3</Declaration>
			
			
			<Anchor>//api/name/inputDataLocationS3</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/inputDataLocationS3</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The location of the data file or directory in Amazon Simple Storage Service (Amazon S3).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *inputDataLocationS3</Declaration>
			
			
			<Anchor>//api/name/inputDataLocationS3</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setLastUpdatedAt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time of the most recent edit to the &lt;code&gt;MLModel&lt;/code&gt;. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *lastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/lastUpdatedAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/lastUpdatedAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time of the most recent edit to the &lt;code&gt;MLModel&lt;/code&gt;. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *lastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/lastUpdatedAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/lastUpdatedAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time of the most recent edit to the &lt;code&gt;MLModel&lt;/code&gt;. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *lastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/lastUpdatedAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setLogUri:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A link to the file that contains logs of the &lt;code&gt;CreateMLModel&lt;/code&gt; operation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *logUri</Declaration>
			
			
			<Anchor>//api/name/logUri</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/logUri</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A link to the file that contains logs of the &lt;code&gt;CreateMLModel&lt;/code&gt; operation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *logUri</Declaration>
			
			
			<Anchor>//api/name/logUri</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/logUri</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A link to the file that contains logs of the &lt;code&gt;CreateMLModel&lt;/code&gt; operation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *logUri</Declaration>
			
			
			<Anchor>//api/name/logUri</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setMLModelId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The MLModel ID which is same as the &lt;code&gt;MLModelId&lt;/code&gt; in the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *MLModelId</Declaration>
			
			
			<Anchor>//api/name/MLModelId</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/MLModelId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The MLModel ID which is same as the &lt;code&gt;MLModelId&lt;/code&gt; in the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *MLModelId</Declaration>
			
			
			<Anchor>//api/name/MLModelId</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/MLModelId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The MLModel ID which is same as the &lt;code&gt;MLModelId&lt;/code&gt; in the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *MLModelId</Declaration>
			
			
			<Anchor>//api/name/MLModelId</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setMLModelType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Identifies the &lt;code&gt;MLModel&lt;/code&gt; category. The following are the available types: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;REGRESSION -- Produces a numeric result. For example, &quot;What listing price should a house have?&quot;&lt;/li&gt;&lt;li&gt;BINARY -- Produces one of two possible results. For example, &quot;Is this an e-commerce website?&quot;&lt;/li&gt;&lt;li&gt;MULTICLASS -- Produces more than two possible results. For example, &quot;Is this a HIGH, LOW or MEDIUM risk trade?&quot;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSMachineLearningMLModelType MLModelType</Declaration>
			
			
			<Anchor>//api/name/MLModelType</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/MLModelType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Identifies the &lt;code&gt;MLModel&lt;/code&gt; category. The following are the available types: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;REGRESSION -- Produces a numeric result. For example, &quot;What listing price should a house have?&quot;&lt;/li&gt;&lt;li&gt;BINARY -- Produces one of two possible results. For example, &quot;Is this an e-commerce website?&quot;&lt;/li&gt;&lt;li&gt;MULTICLASS -- Produces more than two possible results. For example, &quot;Is this a HIGH, LOW or MEDIUM risk trade?&quot;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSMachineLearningMLModelType MLModelType</Declaration>
			
			
			<Anchor>//api/name/MLModelType</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/MLModelType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Identifies the &lt;code&gt;MLModel&lt;/code&gt; category. The following are the available types: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;REGRESSION -- Produces a numeric result. For example, &quot;What listing price should a house have?&quot;&lt;/li&gt;&lt;li&gt;BINARY -- Produces one of two possible results. For example, &quot;Is this an e-commerce website?&quot;&lt;/li&gt;&lt;li&gt;MULTICLASS -- Produces more than two possible results. For example, &quot;Is this a HIGH, LOW or MEDIUM risk trade?&quot;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSMachineLearningMLModelType MLModelType</Declaration>
			
			
			<Anchor>//api/name/MLModelType</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setMessage:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Description of the most recent details about accessing the &lt;code&gt;MLModel&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/message</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Description of the most recent details about accessing the &lt;code&gt;MLModel&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/message</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Description of the most recent details about accessing the &lt;code&gt;MLModel&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *message</Declaration>
			
			
			<Anchor>//api/name/message</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A user-supplied name or description of the &lt;code&gt;MLModel&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/name</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A user-supplied name or description of the &lt;code&gt;MLModel&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/name</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A user-supplied name or description of the &lt;code&gt;MLModel&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setRecipe:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The recipe to use when training the &lt;code&gt;MLModel&lt;/code&gt;. The &lt;code&gt;Recipe&lt;/code&gt; provides detailed information about the observation data to use during training, as well as manipulations to perform on the observation data during training.&lt;/p&gt;&lt;note&gt;&lt;title&gt;Note&lt;/title&gt;&lt;p&gt;This parameter is provided as part of the verbose format.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *recipe</Declaration>
			
			
			<Anchor>//api/name/recipe</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/recipe</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The recipe to use when training the &lt;code&gt;MLModel&lt;/code&gt;. The &lt;code&gt;Recipe&lt;/code&gt; provides detailed information about the observation data to use during training, as well as manipulations to perform on the observation data during training.&lt;/p&gt;&lt;note&gt;&lt;title&gt;Note&lt;/title&gt;&lt;p&gt;This parameter is provided as part of the verbose format.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *recipe</Declaration>
			
			
			<Anchor>//api/name/recipe</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/recipe</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The recipe to use when training the &lt;code&gt;MLModel&lt;/code&gt;. The &lt;code&gt;Recipe&lt;/code&gt; provides detailed information about the observation data to use during training, as well as manipulations to perform on the observation data during training.&lt;/p&gt;&lt;note&gt;&lt;title&gt;Note&lt;/title&gt;&lt;p&gt;This parameter is provided as part of the verbose format.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *recipe</Declaration>
			
			
			<Anchor>//api/name/recipe</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setSchema:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The schema used by all of the data files referenced by the &lt;code&gt;DataSource&lt;/code&gt;.&lt;/p&gt;&lt;note&gt;&lt;title&gt;Note&lt;/title&gt;&lt;p&gt;This parameter is provided as part of the verbose format.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *schema</Declaration>
			
			
			<Anchor>//api/name/schema</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/schema</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The schema used by all of the data files referenced by the &lt;code&gt;DataSource&lt;/code&gt;.&lt;/p&gt;&lt;note&gt;&lt;title&gt;Note&lt;/title&gt;&lt;p&gt;This parameter is provided as part of the verbose format.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *schema</Declaration>
			
			
			<Anchor>//api/name/schema</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/schema</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The schema used by all of the data files referenced by the &lt;code&gt;DataSource&lt;/code&gt;.&lt;/p&gt;&lt;note&gt;&lt;title&gt;Note&lt;/title&gt;&lt;p&gt;This parameter is provided as part of the verbose format.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *schema</Declaration>
			
			
			<Anchor>//api/name/schema</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setScoreThreshold:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The scoring threshold is used in binary classification &lt;code&gt;MLModel&lt;/code&gt;s, and marks the boundary between a positive prediction and a negative prediction.&lt;/p&gt;&lt;p&gt;Output values greater than or equal to the threshold receive a positive result from the MLModel, such as &lt;code&gt;true&lt;/code&gt;. Output values less than the threshold receive a negative response from the MLModel, such as &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *scoreThreshold</Declaration>
			
			
			<Anchor>//api/name/scoreThreshold</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/scoreThreshold</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The scoring threshold is used in binary classification &lt;code&gt;MLModel&lt;/code&gt;s, and marks the boundary between a positive prediction and a negative prediction.&lt;/p&gt;&lt;p&gt;Output values greater than or equal to the threshold receive a positive result from the MLModel, such as &lt;code&gt;true&lt;/code&gt;. Output values less than the threshold receive a negative response from the MLModel, such as &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *scoreThreshold</Declaration>
			
			
			<Anchor>//api/name/scoreThreshold</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/scoreThreshold</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The scoring threshold is used in binary classification &lt;code&gt;MLModel&lt;/code&gt;s, and marks the boundary between a positive prediction and a negative prediction.&lt;/p&gt;&lt;p&gt;Output values greater than or equal to the threshold receive a positive result from the MLModel, such as &lt;code&gt;true&lt;/code&gt;. Output values less than the threshold receive a negative response from the MLModel, such as &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *scoreThreshold</Declaration>
			
			
			<Anchor>//api/name/scoreThreshold</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setScoreThresholdLastUpdatedAt:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time of the most recent edit to the &lt;code&gt;ScoreThreshold&lt;/code&gt;. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *scoreThresholdLastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/scoreThresholdLastUpdatedAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/scoreThresholdLastUpdatedAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time of the most recent edit to the &lt;code&gt;ScoreThreshold&lt;/code&gt;. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *scoreThresholdLastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/scoreThresholdLastUpdatedAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/scoreThresholdLastUpdatedAt</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time of the most recent edit to the &lt;code&gt;ScoreThreshold&lt;/code&gt;. The time is expressed in epoch time.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *scoreThresholdLastUpdatedAt</Declaration>
			
			
			<Anchor>//api/name/scoreThresholdLastUpdatedAt</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setSizeInBytes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Long integer type that is a 64-bit signed number.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *sizeInBytes</Declaration>
			
			
			<Anchor>//api/name/sizeInBytes</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/sizeInBytes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Long integer type that is a 64-bit signed number.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *sizeInBytes</Declaration>
			
			
			<Anchor>//api/name/sizeInBytes</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/sizeInBytes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Long integer type that is a 64-bit signed number.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *sizeInBytes</Declaration>
			
			
			<Anchor>//api/name/sizeInBytes</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current status of the &lt;code&gt;MLModel&lt;/code&gt;. This element can have one of the following values:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;PENDING&lt;/code&gt; - Amazon Machine Learning (Amazon ML) submitted a request to describe a &lt;code&gt;MLModel&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;INPROGRESS&lt;/code&gt; - The request is processing.&lt;/li&gt;&lt;li&gt;&lt;code&gt;FAILED&lt;/code&gt; - The request did not run to completion. It is not usable.&lt;/li&gt;&lt;li&gt;&lt;code&gt;COMPLETED&lt;/code&gt; - The request completed successfully.&lt;/li&gt;&lt;li&gt;&lt;code&gt;DELETED&lt;/code&gt; - The &lt;code&gt;MLModel&lt;/code&gt; is marked as deleted. It is not usable.&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSMachineLearningEntityStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/status</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current status of the &lt;code&gt;MLModel&lt;/code&gt;. This element can have one of the following values:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;PENDING&lt;/code&gt; - Amazon Machine Learning (Amazon ML) submitted a request to describe a &lt;code&gt;MLModel&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;INPROGRESS&lt;/code&gt; - The request is processing.&lt;/li&gt;&lt;li&gt;&lt;code&gt;FAILED&lt;/code&gt; - The request did not run to completion. It is not usable.&lt;/li&gt;&lt;li&gt;&lt;code&gt;COMPLETED&lt;/code&gt; - The request completed successfully.&lt;/li&gt;&lt;li&gt;&lt;code&gt;DELETED&lt;/code&gt; - The &lt;code&gt;MLModel&lt;/code&gt; is marked as deleted. It is not usable.&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSMachineLearningEntityStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/status</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current status of the &lt;code&gt;MLModel&lt;/code&gt;. This element can have one of the following values:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;PENDING&lt;/code&gt; - Amazon Machine Learning (Amazon ML) submitted a request to describe a &lt;code&gt;MLModel&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;INPROGRESS&lt;/code&gt; - The request is processing.&lt;/li&gt;&lt;li&gt;&lt;code&gt;FAILED&lt;/code&gt; - The request did not run to completion. It is not usable.&lt;/li&gt;&lt;li&gt;&lt;code&gt;COMPLETED&lt;/code&gt; - The request completed successfully.&lt;/li&gt;&lt;li&gt;&lt;code&gt;DELETED&lt;/code&gt; - The &lt;code&gt;MLModel&lt;/code&gt; is marked as deleted. It is not usable.&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSMachineLearningEntityStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setTrainingDataSourceId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the training &lt;code&gt;DataSource&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *trainingDataSourceId</Declaration>
			
			
			<Anchor>//api/name/trainingDataSourceId</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/trainingDataSourceId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the training &lt;code&gt;DataSource&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *trainingDataSourceId</Declaration>
			
			
			<Anchor>//api/name/trainingDataSourceId</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/trainingDataSourceId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the training &lt;code&gt;DataSource&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *trainingDataSourceId</Declaration>
			
			
			<Anchor>//api/name/trainingDataSourceId</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/setTrainingParameters:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of the training parameters in the &lt;code&gt;MLModel&lt;/code&gt;. The list is implemented as a map of key/value pairs.&lt;/p&gt;&lt;p&gt;The following is the current set of training parameters: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.l1RegularizationAmount&lt;/code&gt; - Coefficient regularization L1 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to zero, resulting in a sparse feature set. If you use this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.&lt;/p&gt;&lt;p&gt;The value is a double that ranges from 0 to MAXDOUBLE. The default is not to use L1 normalization. The parameter cannot be used when &lt;code&gt;L2&lt;/code&gt; is specified. Use this parameter sparingly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.l2RegularizationAmount&lt;/code&gt; - Coefficient regularization L2 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to small, nonzero values. If you use this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.&lt;/p&gt;&lt;p&gt;The value is a double that ranges from 0 to MAXDOUBLE. The default is not to use L2 normalization. This parameter cannot be used when &lt;code&gt;L1&lt;/code&gt; is specified. Use this parameter sparingly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.maxPasses&lt;/code&gt; - The number of times that the training process traverses the observations to build the &lt;code&gt;MLModel&lt;/code&gt;. The value is an integer that ranges from 1 to 10000. The default value is 10. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.maxMLModelSizeInBytes&lt;/code&gt; - The maximum allowed size of the model. Depending on the input data, the model size might affect performance. &lt;/p&gt;&lt;p&gt; The value is an integer that ranges from 100000 to 2147483648. The default value is 33554432. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *trainingParameters</Declaration>
			
			
			<Anchor>//api/name/trainingParameters</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMachineLearningGetMLModelOutput/trainingParameters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of the training parameters in the &lt;code&gt;MLModel&lt;/code&gt;. The list is implemented as a map of key/value pairs.&lt;/p&gt;&lt;p&gt;The following is the current set of training parameters: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.l1RegularizationAmount&lt;/code&gt; - Coefficient regularization L1 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to zero, resulting in a sparse feature set. If you use this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.&lt;/p&gt;&lt;p&gt;The value is a double that ranges from 0 to MAXDOUBLE. The default is not to use L1 normalization. The parameter cannot be used when &lt;code&gt;L2&lt;/code&gt; is specified. Use this parameter sparingly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.l2RegularizationAmount&lt;/code&gt; - Coefficient regularization L2 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to small, nonzero values. If you use this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.&lt;/p&gt;&lt;p&gt;The value is a double that ranges from 0 to MAXDOUBLE. The default is not to use L2 normalization. This parameter cannot be used when &lt;code&gt;L1&lt;/code&gt; is specified. Use this parameter sparingly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.maxPasses&lt;/code&gt; - The number of times that the training process traverses the observations to build the &lt;code&gt;MLModel&lt;/code&gt;. The value is an integer that ranges from 1 to 10000. The default value is 10. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.maxMLModelSizeInBytes&lt;/code&gt; - The maximum allowed size of the model. Depending on the input data, the model size might affect performance. &lt;/p&gt;&lt;p&gt; The value is an integer that ranges from 100000 to 2147483648. The default value is 33554432. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *trainingParameters</Declaration>
			
			
			<Anchor>//api/name/trainingParameters</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSMachineLearningGetMLModelOutput/trainingParameters</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of the training parameters in the &lt;code&gt;MLModel&lt;/code&gt;. The list is implemented as a map of key/value pairs.&lt;/p&gt;&lt;p&gt;The following is the current set of training parameters: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.l1RegularizationAmount&lt;/code&gt; - Coefficient regularization L1 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to zero, resulting in a sparse feature set. If you use this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.&lt;/p&gt;&lt;p&gt;The value is a double that ranges from 0 to MAXDOUBLE. The default is not to use L1 normalization. The parameter cannot be used when &lt;code&gt;L2&lt;/code&gt; is specified. Use this parameter sparingly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.l2RegularizationAmount&lt;/code&gt; - Coefficient regularization L2 norm. It controls overfitting the data by penalizing large coefficients. This tends to drive coefficients to small, nonzero values. If you use this parameter, specify a small value, such as 1.0E-04 or 1.0E-08.&lt;/p&gt;&lt;p&gt;The value is a double that ranges from 0 to MAXDOUBLE. The default is not to use L2 normalization. This parameter cannot be used when &lt;code&gt;L1&lt;/code&gt; is specified. Use this parameter sparingly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.maxPasses&lt;/code&gt; - The number of times that the training process traverses the observations to build the &lt;code&gt;MLModel&lt;/code&gt;. The value is an integer that ranges from 1 to 10000. The default value is 10. &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;sgd.maxMLModelSizeInBytes&lt;/code&gt; - The maximum allowed size of the model. Depending on the input data, the model size might affect performance. &lt;/p&gt;&lt;p&gt; The value is an integer that ranges from 100000 to 2147483648. The default value is 33554432. &lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSMachineLearningModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *trainingParameters</Declaration>
			
			
			<Anchor>//api/name/trainingParameters</Anchor>
            <NodeRef refid="1285"/>
		</Token>
		
        
        
	</File>
</Tokens>