<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSEC2Instance.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSEC2Instance</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes an instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
            
			
			<NodeRef refid="751"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setAmiLaunchIndex:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The AMI launch index, which can be used to find this instance in the launch group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *amiLaunchIndex</Declaration>
			
			
			<Anchor>//api/name/amiLaunchIndex</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/amiLaunchIndex</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The AMI launch index, which can be used to find this instance in the launch group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *amiLaunchIndex</Declaration>
			
			
			<Anchor>//api/name/amiLaunchIndex</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/amiLaunchIndex</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The AMI launch index, which can be used to find this instance in the launch group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *amiLaunchIndex</Declaration>
			
			
			<Anchor>//api/name/amiLaunchIndex</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setArchitecture:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The architecture of the image.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2ArchitectureValues architecture</Declaration>
			
			
			<Anchor>//api/name/architecture</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/architecture</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The architecture of the image.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2ArchitectureValues architecture</Declaration>
			
			
			<Anchor>//api/name/architecture</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/architecture</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The architecture of the image.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2ArchitectureValues architecture</Declaration>
			
			
			<Anchor>//api/name/architecture</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setBlockDeviceMappings:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Any block device mapping entries for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceBlockDeviceMapping*&gt; *blockDeviceMappings</Declaration>
			
			
			<Anchor>//api/name/blockDeviceMappings</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/blockDeviceMappings</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Any block device mapping entries for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceBlockDeviceMapping*&gt; *blockDeviceMappings</Declaration>
			
			
			<Anchor>//api/name/blockDeviceMappings</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/blockDeviceMappings</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Any block device mapping entries for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceBlockDeviceMapping*&gt; *blockDeviceMappings</Declaration>
			
			
			<Anchor>//api/name/blockDeviceMappings</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setClientToken:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The idempotency token you provided when you launched the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientToken</Declaration>
			
			
			<Anchor>//api/name/clientToken</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/clientToken</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The idempotency token you provided when you launched the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientToken</Declaration>
			
			
			<Anchor>//api/name/clientToken</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/clientToken</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The idempotency token you provided when you launched the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientToken</Declaration>
			
			
			<Anchor>//api/name/clientToken</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setEbsOptimized:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn&apos;t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ebsOptimized</Declaration>
			
			
			<Anchor>//api/name/ebsOptimized</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/ebsOptimized</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn&apos;t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ebsOptimized</Declaration>
			
			
			<Anchor>//api/name/ebsOptimized</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/ebsOptimized</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn&apos;t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ebsOptimized</Declaration>
			
			
			<Anchor>//api/name/ebsOptimized</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setHypervisor:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The hypervisor type of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2HypervisorType hypervisor</Declaration>
			
			
			<Anchor>//api/name/hypervisor</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/hypervisor</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The hypervisor type of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2HypervisorType hypervisor</Declaration>
			
			
			<Anchor>//api/name/hypervisor</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/hypervisor</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The hypervisor type of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2HypervisorType hypervisor</Declaration>
			
			
			<Anchor>//api/name/hypervisor</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setIamInstanceProfile:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IAM instance profile associated with the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IamInstanceProfile *iamInstanceProfile</Declaration>
			
			
			<Anchor>//api/name/iamInstanceProfile</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/iamInstanceProfile</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IAM instance profile associated with the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IamInstanceProfile *iamInstanceProfile</Declaration>
			
			
			<Anchor>//api/name/iamInstanceProfile</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/iamInstanceProfile</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IAM instance profile associated with the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IamInstanceProfile *iamInstanceProfile</Declaration>
			
			
			<Anchor>//api/name/iamInstanceProfile</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setImageId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AMI used to launch the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *imageId</Declaration>
			
			
			<Anchor>//api/name/imageId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/imageId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AMI used to launch the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *imageId</Declaration>
			
			
			<Anchor>//api/name/imageId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/imageId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AMI used to launch the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *imageId</Declaration>
			
			
			<Anchor>//api/name/imageId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setInstanceId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *instanceId</Declaration>
			
			
			<Anchor>//api/name/instanceId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/instanceId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *instanceId</Declaration>
			
			
			<Anchor>//api/name/instanceId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/instanceId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *instanceId</Declaration>
			
			
			<Anchor>//api/name/instanceId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setInstanceLifecycle:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether this is a Spot instance or a Scheduled Instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceLifecycleType instanceLifecycle</Declaration>
			
			
			<Anchor>//api/name/instanceLifecycle</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/instanceLifecycle</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether this is a Spot instance or a Scheduled Instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceLifecycleType instanceLifecycle</Declaration>
			
			
			<Anchor>//api/name/instanceLifecycle</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/instanceLifecycle</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether this is a Spot instance or a Scheduled Instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceLifecycleType instanceLifecycle</Declaration>
			
			
			<Anchor>//api/name/instanceLifecycle</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setInstanceType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The instance type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceType instanceType</Declaration>
			
			
			<Anchor>//api/name/instanceType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/instanceType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The instance type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceType instanceType</Declaration>
			
			
			<Anchor>//api/name/instanceType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/instanceType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The instance type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceType instanceType</Declaration>
			
			
			<Anchor>//api/name/instanceType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setKernelId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The kernel associated with this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kernelId</Declaration>
			
			
			<Anchor>//api/name/kernelId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/kernelId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The kernel associated with this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kernelId</Declaration>
			
			
			<Anchor>//api/name/kernelId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/kernelId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The kernel associated with this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kernelId</Declaration>
			
			
			<Anchor>//api/name/kernelId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setKeyName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the key pair, if this instance was launched with an associated key pair.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *keyName</Declaration>
			
			
			<Anchor>//api/name/keyName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/keyName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the key pair, if this instance was launched with an associated key pair.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *keyName</Declaration>
			
			
			<Anchor>//api/name/keyName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/keyName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the key pair, if this instance was launched with an associated key pair.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *keyName</Declaration>
			
			
			<Anchor>//api/name/keyName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setLaunchTime:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time the instance was launched.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *launchTime</Declaration>
			
			
			<Anchor>//api/name/launchTime</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/launchTime</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time the instance was launched.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *launchTime</Declaration>
			
			
			<Anchor>//api/name/launchTime</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/launchTime</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The time the instance was launched.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *launchTime</Declaration>
			
			
			<Anchor>//api/name/launchTime</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setMonitoring:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The monitoring information for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2Monitoring *monitoring</Declaration>
			
			
			<Anchor>//api/name/monitoring</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/monitoring</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The monitoring information for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2Monitoring *monitoring</Declaration>
			
			
			<Anchor>//api/name/monitoring</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/monitoring</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The monitoring information for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2Monitoring *monitoring</Declaration>
			
			
			<Anchor>//api/name/monitoring</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setNetworkInterfaces:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] One or more network interfaces for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceNetworkInterface*&gt; *networkInterfaces</Declaration>
			
			
			<Anchor>//api/name/networkInterfaces</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/networkInterfaces</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] One or more network interfaces for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceNetworkInterface*&gt; *networkInterfaces</Declaration>
			
			
			<Anchor>//api/name/networkInterfaces</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/networkInterfaces</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] One or more network interfaces for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceNetworkInterface*&gt; *networkInterfaces</Declaration>
			
			
			<Anchor>//api/name/networkInterfaces</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setPlacement:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The location where the instance launched, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2Placement *placement</Declaration>
			
			
			<Anchor>//api/name/placement</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/placement</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The location where the instance launched, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2Placement *placement</Declaration>
			
			
			<Anchor>//api/name/placement</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/placement</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The location where the instance launched, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2Placement *placement</Declaration>
			
			
			<Anchor>//api/name/placement</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setPlatform:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The value is &lt;code&gt;Windows&lt;/code&gt; for Windows instances; otherwise blank.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2PlatformValues platform</Declaration>
			
			
			<Anchor>//api/name/platform</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/platform</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The value is &lt;code&gt;Windows&lt;/code&gt; for Windows instances; otherwise blank.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2PlatformValues platform</Declaration>
			
			
			<Anchor>//api/name/platform</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/platform</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The value is &lt;code&gt;Windows&lt;/code&gt; for Windows instances; otherwise blank.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2PlatformValues platform</Declaration>
			
			
			<Anchor>//api/name/platform</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setPrivateDnsName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The private DNS name assigned to the instance. This DNS name can only be used inside the Amazon EC2 network. This name is not available until the instance enters the &lt;code&gt;running&lt;/code&gt; state. For EC2-VPC, this name is only available if you&apos;ve enabled DNS hostnames for your VPC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *privateDnsName</Declaration>
			
			
			<Anchor>//api/name/privateDnsName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/privateDnsName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The private DNS name assigned to the instance. This DNS name can only be used inside the Amazon EC2 network. This name is not available until the instance enters the &lt;code&gt;running&lt;/code&gt; state. For EC2-VPC, this name is only available if you&apos;ve enabled DNS hostnames for your VPC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *privateDnsName</Declaration>
			
			
			<Anchor>//api/name/privateDnsName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/privateDnsName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The private DNS name assigned to the instance. This DNS name can only be used inside the Amazon EC2 network. This name is not available until the instance enters the &lt;code&gt;running&lt;/code&gt; state. For EC2-VPC, this name is only available if you&apos;ve enabled DNS hostnames for your VPC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *privateDnsName</Declaration>
			
			
			<Anchor>//api/name/privateDnsName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setPrivateIpAddress:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The private IP address assigned to the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *privateIpAddress</Declaration>
			
			
			<Anchor>//api/name/privateIpAddress</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/privateIpAddress</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The private IP address assigned to the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *privateIpAddress</Declaration>
			
			
			<Anchor>//api/name/privateIpAddress</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/privateIpAddress</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The private IP address assigned to the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *privateIpAddress</Declaration>
			
			
			<Anchor>//api/name/privateIpAddress</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setProductCodes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The product codes attached to this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2ProductCode*&gt; *productCodes</Declaration>
			
			
			<Anchor>//api/name/productCodes</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/productCodes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The product codes attached to this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2ProductCode*&gt; *productCodes</Declaration>
			
			
			<Anchor>//api/name/productCodes</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/productCodes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The product codes attached to this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2ProductCode*&gt; *productCodes</Declaration>
			
			
			<Anchor>//api/name/productCodes</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setPublicDnsName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The public DNS name assigned to the instance. This name is not available until the instance enters the &lt;code&gt;running&lt;/code&gt; state. For EC2-VPC, this name is only available if you&apos;ve enabled DNS hostnames for your VPC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *publicDnsName</Declaration>
			
			
			<Anchor>//api/name/publicDnsName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/publicDnsName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The public DNS name assigned to the instance. This name is not available until the instance enters the &lt;code&gt;running&lt;/code&gt; state. For EC2-VPC, this name is only available if you&apos;ve enabled DNS hostnames for your VPC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *publicDnsName</Declaration>
			
			
			<Anchor>//api/name/publicDnsName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/publicDnsName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The public DNS name assigned to the instance. This name is not available until the instance enters the &lt;code&gt;running&lt;/code&gt; state. For EC2-VPC, this name is only available if you&apos;ve enabled DNS hostnames for your VPC.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *publicDnsName</Declaration>
			
			
			<Anchor>//api/name/publicDnsName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setPublicIpAddress:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The public IP address assigned to the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *publicIpAddress</Declaration>
			
			
			<Anchor>//api/name/publicIpAddress</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/publicIpAddress</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The public IP address assigned to the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *publicIpAddress</Declaration>
			
			
			<Anchor>//api/name/publicIpAddress</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/publicIpAddress</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The public IP address assigned to the instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *publicIpAddress</Declaration>
			
			
			<Anchor>//api/name/publicIpAddress</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setRamdiskId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The RAM disk associated with this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *ramdiskId</Declaration>
			
			
			<Anchor>//api/name/ramdiskId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/ramdiskId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The RAM disk associated with this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *ramdiskId</Declaration>
			
			
			<Anchor>//api/name/ramdiskId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/ramdiskId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The RAM disk associated with this instance, if applicable.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *ramdiskId</Declaration>
			
			
			<Anchor>//api/name/ramdiskId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setRootDeviceName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The root device name (for example, &lt;code&gt;/dev/sda1&lt;/code&gt; or &lt;code&gt;/dev/xvda&lt;/code&gt;).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *rootDeviceName</Declaration>
			
			
			<Anchor>//api/name/rootDeviceName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/rootDeviceName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The root device name (for example, &lt;code&gt;/dev/sda1&lt;/code&gt; or &lt;code&gt;/dev/xvda&lt;/code&gt;).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *rootDeviceName</Declaration>
			
			
			<Anchor>//api/name/rootDeviceName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/rootDeviceName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The root device name (for example, &lt;code&gt;/dev/sda1&lt;/code&gt; or &lt;code&gt;/dev/xvda&lt;/code&gt;).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *rootDeviceName</Declaration>
			
			
			<Anchor>//api/name/rootDeviceName</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setRootDeviceType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2DeviceType rootDeviceType</Declaration>
			
			
			<Anchor>//api/name/rootDeviceType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/rootDeviceType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2DeviceType rootDeviceType</Declaration>
			
			
			<Anchor>//api/name/rootDeviceType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/rootDeviceType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2DeviceType rootDeviceType</Declaration>
			
			
			<Anchor>//api/name/rootDeviceType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setSecurityGroups:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more security groups for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2GroupIdentifier*&gt; *securityGroups</Declaration>
			
			
			<Anchor>//api/name/securityGroups</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/securityGroups</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more security groups for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2GroupIdentifier*&gt; *securityGroups</Declaration>
			
			
			<Anchor>//api/name/securityGroups</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/securityGroups</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more security groups for the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2GroupIdentifier*&gt; *securityGroups</Declaration>
			
			
			<Anchor>//api/name/securityGroups</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setSourceDestCheck:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of &lt;code&gt;true&lt;/code&gt; means checking is enabled, and &lt;code&gt;false&lt;/code&gt; means checking is disabled. The value must be &lt;code&gt;false&lt;/code&gt; for the instance to perform NAT. For more information, see NAT Instances in the &lt;i&gt;Amazon Virtual Private Cloud User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *sourceDestCheck</Declaration>
			
			
			<Anchor>//api/name/sourceDestCheck</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/sourceDestCheck</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of &lt;code&gt;true&lt;/code&gt; means checking is enabled, and &lt;code&gt;false&lt;/code&gt; means checking is disabled. The value must be &lt;code&gt;false&lt;/code&gt; for the instance to perform NAT. For more information, see NAT Instances in the &lt;i&gt;Amazon Virtual Private Cloud User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *sourceDestCheck</Declaration>
			
			
			<Anchor>//api/name/sourceDestCheck</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/sourceDestCheck</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of &lt;code&gt;true&lt;/code&gt; means checking is enabled, and &lt;code&gt;false&lt;/code&gt; means checking is disabled. The value must be &lt;code&gt;false&lt;/code&gt; for the instance to perform NAT. For more information, see NAT Instances in the &lt;i&gt;Amazon Virtual Private Cloud User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *sourceDestCheck</Declaration>
			
			
			<Anchor>//api/name/sourceDestCheck</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setSpotInstanceRequestId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If the request is a Spot instance request, the ID of the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotInstanceRequestId</Declaration>
			
			
			<Anchor>//api/name/spotInstanceRequestId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/spotInstanceRequestId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If the request is a Spot instance request, the ID of the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotInstanceRequestId</Declaration>
			
			
			<Anchor>//api/name/spotInstanceRequestId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/spotInstanceRequestId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If the request is a Spot instance request, the ID of the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotInstanceRequestId</Declaration>
			
			
			<Anchor>//api/name/spotInstanceRequestId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setSriovNetSupport:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether enhanced networking is enabled. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sriovNetSupport</Declaration>
			
			
			<Anchor>//api/name/sriovNetSupport</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/sriovNetSupport</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether enhanced networking is enabled. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sriovNetSupport</Declaration>
			
			
			<Anchor>//api/name/sriovNetSupport</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/sriovNetSupport</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Specifies whether enhanced networking is enabled. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sriovNetSupport</Declaration>
			
			
			<Anchor>//api/name/sriovNetSupport</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setState:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current state of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2InstanceState *state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/state</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current state of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2InstanceState *state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/state</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current state of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2InstanceState *state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setStateReason:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reason for the most recent state transition.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2StateReason *stateReason</Declaration>
			
			
			<Anchor>//api/name/stateReason</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/stateReason</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reason for the most recent state transition.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2StateReason *stateReason</Declaration>
			
			
			<Anchor>//api/name/stateReason</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/stateReason</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reason for the most recent state transition.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2StateReason *stateReason</Declaration>
			
			
			<Anchor>//api/name/stateReason</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setStateTransitionReason:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reason for the most recent state transition. This might be an empty string.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *stateTransitionReason</Declaration>
			
			
			<Anchor>//api/name/stateTransitionReason</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/stateTransitionReason</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reason for the most recent state transition. This might be an empty string.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *stateTransitionReason</Declaration>
			
			
			<Anchor>//api/name/stateTransitionReason</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/stateTransitionReason</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The reason for the most recent state transition. This might be an empty string.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *stateTransitionReason</Declaration>
			
			
			<Anchor>//api/name/stateTransitionReason</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setSubnetId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] The ID of the subnet in which the instance is running.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subnetId</Declaration>
			
			
			<Anchor>//api/name/subnetId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/subnetId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] The ID of the subnet in which the instance is running.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subnetId</Declaration>
			
			
			<Anchor>//api/name/subnetId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/subnetId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] The ID of the subnet in which the instance is running.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subnetId</Declaration>
			
			
			<Anchor>//api/name/subnetId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setTags:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Any tags assigned to the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Tag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/tags</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Any tags assigned to the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Tag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/tags</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Any tags assigned to the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2Tag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setVirtualizationType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The virtualization type of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2VirtualizationType virtualizationType</Declaration>
			
			
			<Anchor>//api/name/virtualizationType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/virtualizationType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The virtualization type of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2VirtualizationType virtualizationType</Declaration>
			
			
			<Anchor>//api/name/virtualizationType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/virtualizationType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The virtualization type of the instance.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2VirtualizationType virtualizationType</Declaration>
			
			
			<Anchor>//api/name/virtualizationType</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/setVpcId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] The ID of the VPC in which the instance is running.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *vpcId</Declaration>
			
			
			<Anchor>//api/name/vpcId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2Instance/vpcId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] The ID of the VPC in which the instance is running.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *vpcId</Declaration>
			
			
			<Anchor>//api/name/vpcId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2Instance/vpcId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;[EC2-VPC] The ID of the VPC in which the instance is running.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *vpcId</Declaration>
			
			
			<Anchor>//api/name/vpcId</Anchor>
            <NodeRef refid="751"/>
		</Token>
		
        
        
	</File>
</Tokens>