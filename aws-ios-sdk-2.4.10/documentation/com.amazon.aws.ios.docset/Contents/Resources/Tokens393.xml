<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSDynamoDBGlobalSecondaryIndexDescription.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSDynamoDBGlobalSecondaryIndexDescription</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the properties of a global secondary index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
            
			
			<NodeRef refid="393"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setBackfilling:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the index is currently backfilling. &lt;i&gt;Backfilling&lt;/i&gt; is the process of reading items from the table and determining whether they can be added to the index. (Not all items will qualify: For example, a partition key cannot have any duplicate values.) If an item can be added to the index, DynamoDB will do so. After all items have been processed, the backfilling operation is complete and &lt;i&gt;Backfilling&lt;/i&gt; is false.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For indexes that were created during a &lt;i&gt;CreateTable&lt;/i&gt; operation, the &lt;i&gt;Backfilling&lt;/i&gt; attribute does not appear in the &lt;i&gt;DescribeTable&lt;/i&gt; output.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *backfilling</Declaration>
			
			
			<Anchor>//api/name/backfilling</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/backfilling</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the index is currently backfilling. &lt;i&gt;Backfilling&lt;/i&gt; is the process of reading items from the table and determining whether they can be added to the index. (Not all items will qualify: For example, a partition key cannot have any duplicate values.) If an item can be added to the index, DynamoDB will do so. After all items have been processed, the backfilling operation is complete and &lt;i&gt;Backfilling&lt;/i&gt; is false.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For indexes that were created during a &lt;i&gt;CreateTable&lt;/i&gt; operation, the &lt;i&gt;Backfilling&lt;/i&gt; attribute does not appear in the &lt;i&gt;DescribeTable&lt;/i&gt; output.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *backfilling</Declaration>
			
			
			<Anchor>//api/name/backfilling</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/backfilling</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the index is currently backfilling. &lt;i&gt;Backfilling&lt;/i&gt; is the process of reading items from the table and determining whether they can be added to the index. (Not all items will qualify: For example, a partition key cannot have any duplicate values.) If an item can be added to the index, DynamoDB will do so. After all items have been processed, the backfilling operation is complete and &lt;i&gt;Backfilling&lt;/i&gt; is false.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For indexes that were created during a &lt;i&gt;CreateTable&lt;/i&gt; operation, the &lt;i&gt;Backfilling&lt;/i&gt; attribute does not appear in the &lt;i&gt;DescribeTable&lt;/i&gt; output.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *backfilling</Declaration>
			
			
			<Anchor>//api/name/backfilling</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setIndexArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) that uniquely identifies the index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexArn</Declaration>
			
			
			<Anchor>//api/name/indexArn</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/indexArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) that uniquely identifies the index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexArn</Declaration>
			
			
			<Anchor>//api/name/indexArn</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/indexArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) that uniquely identifies the index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexArn</Declaration>
			
			
			<Anchor>//api/name/indexArn</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setIndexName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the global secondary index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexName</Declaration>
			
			
			<Anchor>//api/name/indexName</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/indexName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the global secondary index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexName</Declaration>
			
			
			<Anchor>//api/name/indexName</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/indexName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the global secondary index.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexName</Declaration>
			
			
			<Anchor>//api/name/indexName</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setIndexSizeBytes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *indexSizeBytes</Declaration>
			
			
			<Anchor>//api/name/indexSizeBytes</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/indexSizeBytes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *indexSizeBytes</Declaration>
			
			
			<Anchor>//api/name/indexSizeBytes</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/indexSizeBytes</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *indexSizeBytes</Declaration>
			
			
			<Anchor>//api/name/indexSizeBytes</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setIndexStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current state of the global secondary index:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;CREATING&lt;/i&gt; - The index is being created.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;UPDATING&lt;/i&gt; - The index is being updated.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;DELETING&lt;/i&gt; - The index is being deleted.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;ACTIVE&lt;/i&gt; - The index is ready for use.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBIndexStatus indexStatus</Declaration>
			
			
			<Anchor>//api/name/indexStatus</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/indexStatus</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current state of the global secondary index:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;CREATING&lt;/i&gt; - The index is being created.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;UPDATING&lt;/i&gt; - The index is being updated.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;DELETING&lt;/i&gt; - The index is being deleted.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;ACTIVE&lt;/i&gt; - The index is ready for use.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBIndexStatus indexStatus</Declaration>
			
			
			<Anchor>//api/name/indexStatus</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/indexStatus</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The current state of the global secondary index:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;CREATING&lt;/i&gt; - The index is being created.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;UPDATING&lt;/i&gt; - The index is being updated.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;DELETING&lt;/i&gt; - The index is being deleted.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;ACTIVE&lt;/i&gt; - The index is ready for use.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBIndexStatus indexStatus</Declaration>
			
			
			<Anchor>//api/name/indexStatus</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setItemCount:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *itemCount</Declaration>
			
			
			<Anchor>//api/name/itemCount</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/itemCount</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *itemCount</Declaration>
			
			
			<Anchor>//api/name/itemCount</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/itemCount</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *itemCount</Declaration>
			
			
			<Anchor>//api/name/itemCount</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setKeySchema:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;HASH&lt;/code&gt; - partition key&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;RANGE&lt;/code&gt; - sort key&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;note&gt;&lt;p&gt;The partition key of an item is also known as its &lt;i&gt;hash attribute&lt;/i&gt;. The term &quot;hash attribute&quot; derives from DynamoDB&apos; usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.&lt;/p&gt;&lt;p&gt;The sort key of an item is also known as its &lt;i&gt;range attribute&lt;/i&gt;. The term &quot;range attribute&quot; derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSDynamoDBKeySchemaElement*&gt; *keySchema</Declaration>
			
			
			<Anchor>//api/name/keySchema</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/keySchema</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;HASH&lt;/code&gt; - partition key&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;RANGE&lt;/code&gt; - sort key&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;note&gt;&lt;p&gt;The partition key of an item is also known as its &lt;i&gt;hash attribute&lt;/i&gt;. The term &quot;hash attribute&quot; derives from DynamoDB&apos; usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.&lt;/p&gt;&lt;p&gt;The sort key of an item is also known as its &lt;i&gt;range attribute&lt;/i&gt;. The term &quot;range attribute&quot; derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSDynamoDBKeySchemaElement*&gt; *keySchema</Declaration>
			
			
			<Anchor>//api/name/keySchema</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/keySchema</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;HASH&lt;/code&gt; - partition key&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;RANGE&lt;/code&gt; - sort key&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;note&gt;&lt;p&gt;The partition key of an item is also known as its &lt;i&gt;hash attribute&lt;/i&gt;. The term &quot;hash attribute&quot; derives from DynamoDB&apos; usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.&lt;/p&gt;&lt;p&gt;The sort key of an item is also known as its &lt;i&gt;range attribute&lt;/i&gt;. The term &quot;range attribute&quot; derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSDynamoDBKeySchemaElement*&gt; *keySchema</Declaration>
			
			
			<Anchor>//api/name/keySchema</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setProjection:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBProjection *projection</Declaration>
			
			
			<Anchor>//api/name/projection</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/projection</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBProjection *projection</Declaration>
			
			
			<Anchor>//api/name/projection</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/projection</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBProjection *projection</Declaration>
			
			
			<Anchor>//api/name/projection</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/setProvisionedThroughput:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and decreases.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBProvisionedThroughputDescription *provisionedThroughput</Declaration>
			
			
			<Anchor>//api/name/provisionedThroughput</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBGlobalSecondaryIndexDescription/provisionedThroughput</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and decreases.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBProvisionedThroughputDescription *provisionedThroughput</Declaration>
			
			
			<Anchor>//api/name/provisionedThroughput</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBGlobalSecondaryIndexDescription/provisionedThroughput</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and decreases.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSDynamoDBProvisionedThroughputDescription *provisionedThroughput</Declaration>
			
			
			<Anchor>//api/name/provisionedThroughput</Anchor>
            <NodeRef refid="393"/>
		</Token>
		
        
        
	</File>
</Tokens>