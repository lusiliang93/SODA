<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSMobileAnalyticsMonetizationEventBuilder.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSMobileAnalyticsMonetizationEventBuilder</TokenIdentifier>
			<Abstract type="html">Base class for handling the required attributes and metrics for monetization Events. This
class is not meant to be instantiated. Instead, create instances specific to the purchase
you are trying to record. Currently, AWSMobileAnalyticsVirtualMonetizationEventBuilder is used to create
monetization events for virtual purchases, and AWSMobileAnalyticsAppleMonetizationEventBuilder is used
to create monetization events for purchases with Apple&apos;s IAP framework.</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
            
			
			<NodeRef refid="1296"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/build</TokenIdentifier>
			<Abstract type="html">Builds an AWSMobileAnalyticsEvent using the current state of the builder.</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (id&lt;AWSMobileAnalyticsEvent&gt;)build</Declaration>
			
			<ReturnValue><Abstract type="html">an AWSMobileAnalyticsEvent or nil, if the builder is in an invalid state</Abstract></ReturnValue>
			<Anchor>//api/name/build</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/isValid</TokenIdentifier>
			<Abstract type="html">Determines if this builder is in a valid state. This method must be overridden in derived classes.</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (BOOL)isValid</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the Builder is valid, NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/isValid</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/initWithEventClient:</TokenIdentifier>
			<Abstract type="html">Initializes the AWSMobileAnalyticsMonetizationEventBuilder. This class is not meant to be initialized directly. This method should
only be called/overridden by derived builders.</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (id)initWithEventClient:(id&lt;AWSMobileAnalyticsEventClient&gt;)theEventClient</Declaration>
			
			
			<Anchor>//api/name/initWithEventClient:</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/productId</TokenIdentifier>
			<Abstract type="html">The product id that will be used to build the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (NSString *)productId</Declaration>
			
			<ReturnValue><Abstract type="html">The product id</Abstract></ReturnValue>
			<Anchor>//api/name/productId</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/setProductId:</TokenIdentifier>
			<Abstract type="html">Sets the product id to use when building the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (void)setProductId:(NSString *)theProductId</Declaration>
			<Parameters>
				<Parameter>
					<Name>theProductId</Name>
					<Abstract type="html">the product id of the item being purchased</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setProductId:</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/quantity</TokenIdentifier>
			<Abstract type="html">The quantity that will be used to build the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (NSInteger)quantity</Declaration>
			
			<ReturnValue><Abstract type="html">The quantity of items purchased</Abstract></ReturnValue>
			<Anchor>//api/name/quantity</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/setQuantity:</TokenIdentifier>
			<Abstract type="html">Sets the quantity to use when building the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (void)setQuantity:(NSInteger)theQuantity</Declaration>
			<Parameters>
				<Parameter>
					<Name>theQuantity</Name>
					<Abstract type="html">the quantity of the item being purchased</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setQuantity:</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/itemPrice</TokenIdentifier>
			<Abstract type="html">The numerical price of the item being purchased that will be used to build the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (double)itemPrice</Declaration>
			
			<ReturnValue><Abstract type="html">The numerical item price</Abstract></ReturnValue>
			<Anchor>//api/name/itemPrice</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/setItemPrice:</TokenIdentifier>
			<Abstract type="html">Sets the numerical item price to use when building the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (void)setItemPrice:(double)theItemPrice</Declaration>
			<Parameters>
				<Parameter>
					<Name>theItemPrice</Name>
					<Abstract type="html">the price of the item being purchased</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setItemPrice:</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/formattedItemPrice</TokenIdentifier>
			<Abstract type="html">The formatted item price that will be used to build the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (NSString *)formattedItemPrice</Declaration>
			
			<ReturnValue><Abstract type="html">The item price formatted with its currency</Abstract></ReturnValue>
			<Anchor>//api/name/formattedItemPrice</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/setFormattedItemPrice:</TokenIdentifier>
			<Abstract type="html">Sets the formatted item price in its local currency to use when building the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (void)setFormattedItemPrice:(NSString *)theFormattedItemPrice</Declaration>
			<Parameters>
				<Parameter>
					<Name>theFormattedItemPrice</Name>
					<Abstract type="html">the formatted item price in its local currency</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setFormattedItemPrice:</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/transactionId</TokenIdentifier>
			<Abstract type="html">The transaction id that will be used to build the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (NSString *)transactionId</Declaration>
			
			<ReturnValue><Abstract type="html">The transaction id</Abstract></ReturnValue>
			<Anchor>//api/name/transactionId</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/setTransactionId:</TokenIdentifier>
			<Abstract type="html">Sets the transaction id to use when building the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (void)setTransactionId:(NSString *)theTransactionId</Declaration>
			<Parameters>
				<Parameter>
					<Name>theTransactionId</Name>
					<Abstract type="html">the transaction id of the purchase</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setTransactionId:</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/currency</TokenIdentifier>
			<Abstract type="html">The currency that be used to build the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (NSString *)currency</Declaration>
			
			<ReturnValue><Abstract type="html">The currency</Abstract></ReturnValue>
			<Anchor>//api/name/currency</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/setCurrency:</TokenIdentifier>
			<Abstract type="html">Sets the currency of the item price to use when building the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (void)setCurrency:(NSString *)theCurrency</Declaration>
			<Parameters>
				<Parameter>
					<Name>theCurrency</Name>
					<Abstract type="html">the ISO currency code or virtual curreny name of the item price</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCurrency:</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/store</TokenIdentifier>
			<Abstract type="html">The name of the Store where this purchase was made. For example &quot;Apple&quot; for purchases
originating from the Apple IAP Store, or &quot;Virtual&quot; if the purchase was performed in your in-game store.</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (NSString *)store</Declaration>
			
			<ReturnValue><Abstract type="html">The store of the purchase</Abstract></ReturnValue>
			<Anchor>//api/name/store</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSMobileAnalyticsMonetizationEventBuilder/setStore:</TokenIdentifier>
			<Abstract type="html">Sets the name of the Store to use when building the monetization event</Abstract>
			<DeclaredIn>AWSMobileAnalyticsMonetizationEventBuilder.h</DeclaredIn>
			
			<Declaration>- (void)setStore:(NSString *)theStore</Declaration>
			<Parameters>
				<Parameter>
					<Name>theStore</Name>
					<Abstract type="html">the store where the purchase originated from (i.e. &quot;Apple&quot; or &quot;Virtual&quot;)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setStore:</Anchor>
            <NodeRef refid="1296"/>
		</Token>
		
        
        
	</File>
</Tokens>