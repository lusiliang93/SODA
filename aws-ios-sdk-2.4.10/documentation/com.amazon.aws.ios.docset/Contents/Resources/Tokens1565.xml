<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSSESVerifyDomainDkimResponse.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSSESVerifyDomainDkimResponse</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns CNAME records that you must publish to the DNS server of your domain to set up Easy DKIM with Amazon SES.&lt;/p&gt;
Required parameters: [DkimTokens]</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
            
			
			<NodeRef refid="1565"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESVerifyDomainDkimResponse/setDkimTokens:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A set of character strings that represent the domain&apos;s identity. If the identity is an email address, the tokens represent the domain of that address.&lt;/p&gt;&lt;p&gt;Using these tokens, you will need to create DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have updated your DNS records; this detection process may take up to 72 hours. Upon successful detection, Amazon SES will be able to DKIM-sign emails originating from that domain.&lt;/p&gt;&lt;p&gt;For more information about creating DNS records using DKIM tokens, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *dkimTokens</Declaration>
			
			
			<Anchor>//api/name/dkimTokens</Anchor>
            <NodeRef refid="1565"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESVerifyDomainDkimResponse/dkimTokens</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A set of character strings that represent the domain&apos;s identity. If the identity is an email address, the tokens represent the domain of that address.&lt;/p&gt;&lt;p&gt;Using these tokens, you will need to create DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have updated your DNS records; this detection process may take up to 72 hours. Upon successful detection, Amazon SES will be able to DKIM-sign emails originating from that domain.&lt;/p&gt;&lt;p&gt;For more information about creating DNS records using DKIM tokens, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *dkimTokens</Declaration>
			
			
			<Anchor>//api/name/dkimTokens</Anchor>
            <NodeRef refid="1565"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESVerifyDomainDkimResponse/dkimTokens</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A set of character strings that represent the domain&apos;s identity. If the identity is an email address, the tokens represent the domain of that address.&lt;/p&gt;&lt;p&gt;Using these tokens, you will need to create DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have updated your DNS records; this detection process may take up to 72 hours. Upon successful detection, Amazon SES will be able to DKIM-sign emails originating from that domain.&lt;/p&gt;&lt;p&gt;For more information about creating DNS records using DKIM tokens, go to the Amazon SES Developer Guide.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *dkimTokens</Declaration>
			
			
			<Anchor>//api/name/dkimTokens</Anchor>
            <NodeRef refid="1565"/>
		</Token>
		
        
        
	</File>
</Tokens>