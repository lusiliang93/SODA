<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSS3TransferUtility.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSS3TransferUtility</TokenIdentifier>
			<Abstract type="html">A high-level utility for managing background uploads and downloads. The transfers continue even when the app is suspended. You must call + application:handleEventsForBackgroundURLSession:completionHandler: in the - application:handleEventsForBackgroundURLSession:completionHandler: application delegate in order for the background transfer callback to work.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
            
			
			<NodeRef refid="1452"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>@property (readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>@property (readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSS3TransferUtility/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>@property (readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3TransferUtility/defaultS3TransferUtility</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultS3TransferUtility</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultS3TransferUtility</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3TransferUtility/registerS3TransferUtilityWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>+ (void)registerS3TransferUtilityWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerS3TransferUtilityWithConfiguration:forKey:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3TransferUtility/registerS3TransferUtilityWithConfiguration:transferUtilityConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>+ (void)registerS3TransferUtilityWithConfiguration:(AWSServiceConfiguration *)configuration transferUtilityConfiguration:(nullable AWSS3TransferUtilityConfiguration *)transferUtilityConfiguration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>transferUtilityConfiguration</Name>
					<Abstract type="html">An S3 transfer utility configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerS3TransferUtilityWithConfiguration:transferUtilityConfiguration:forKey:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3TransferUtility/S3TransferUtilityForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerS3TransferUtilityWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>+ (instancetype)S3TransferUtilityForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/S3TransferUtilityForKey:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3TransferUtility/removeS3TransferUtilityForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>+ (void)removeS3TransferUtilityForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeS3TransferUtilityForKey:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSS3TransferUtility/interceptApplication:handleEventsForBackgroundURLSession:completionHandler:</TokenIdentifier>
			<Abstract type="html">Tells AWSS3TransferUtility that events related to a URL session are waiting to be processed. This method needs to be called in the - application:handleEventsForBackgroundURLSession:completionHandler: applicatoin delegate for AWSS3TransferUtility to work.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>+ (void)interceptApplication:(UIApplication *)application handleEventsForBackgroundURLSession:(NSString *)identifier completionHandler:(void ( ^ ) ( ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>application</Name>
					<Abstract type="html">The singleton app object.</Abstract>
				</Parameter><Parameter>
					<Name>identifier</Name>
					<Abstract type="html">The identifier of the URL session requiring attention.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when you finish processing the events.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/interceptApplication:handleEventsForBackgroundURLSession:completionHandler:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/uploadData:bucket:key:contentType:expression:completionHander:</TokenIdentifier>
			<Abstract type="html">Saves the NSData to a temporary directory and uploads it to the specified Amazon S3 bucket.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;AWSS3TransferUtilityUploadTask*&gt; *)uploadData:(NSData *)data bucket:(NSString *)bucket key:(NSString *)key contentType:(NSString *)contentType expression:(nullable AWSS3TransferUtilityUploadExpression *)expression completionHander:(nullable AWSS3TransferUtilityUploadCompletionHandlerBlock)completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>data</Name>
					<Abstract type="html">The data to upload.</Abstract>
				</Parameter><Parameter>
					<Name>bucket</Name>
					<Abstract type="html">The Amazon S3 bucket name.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">The Amazon S3 object key name.</Abstract>
				</Parameter><Parameter>
					<Name>contentType</Name>
					<Abstract type="html">Content-Type of the data.</Abstract>
				</Parameter><Parameter>
					<Name>expression</Name>
					<Abstract type="html">The container object to configure the upload request.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion hanlder when the upload completes.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns an instance of AWSTask. On successful initialization, task.result contains an instance of AWSS3TransferUtilityUploadTask.</Abstract></ReturnValue>
			<Anchor>//api/name/uploadData:bucket:key:contentType:expression:completionHander:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/uploadFile:bucket:key:contentType:expression:completionHander:</TokenIdentifier>
			<Abstract type="html">Uploads the file to the specified Amazon S3 bucket.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;AWSS3TransferUtilityUploadTask*&gt; *)uploadFile:(NSURL *)fileURL bucket:(NSString *)bucket key:(NSString *)key contentType:(NSString *)contentType expression:(nullable AWSS3TransferUtilityUploadExpression *)expression completionHander:(nullable AWSS3TransferUtilityUploadCompletionHandlerBlock)completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>fileURL</Name>
					<Abstract type="html">The file URL of the file to upload.</Abstract>
				</Parameter><Parameter>
					<Name>bucket</Name>
					<Abstract type="html">The Amazon S3 bucket name.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">The Amazon S3 object key name.</Abstract>
				</Parameter><Parameter>
					<Name>contentType</Name>
					<Abstract type="html">Content-Type of the file.</Abstract>
				</Parameter><Parameter>
					<Name>expression</Name>
					<Abstract type="html">The container object to configure the upload request.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion hanlder when the upload completes.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns an instance of AWSTask. On successful initialization, task.result contains an instance of AWSS3TransferUtilityUploadTask.</Abstract></ReturnValue>
			<Anchor>//api/name/uploadFile:bucket:key:contentType:expression:completionHander:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/downloadDataFromBucket:key:expression:completionHander:</TokenIdentifier>
			<Abstract type="html">Downloads the specified Amazon S3 object as NSData.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;AWSS3TransferUtilityDownloadTask*&gt; *)downloadDataFromBucket:(NSString *)bucket key:(NSString *)key expression:(nullable AWSS3TransferUtilityDownloadExpression *)expression completionHander:(nullable AWSS3TransferUtilityDownloadCompletionHandlerBlock)completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>bucket</Name>
					<Abstract type="html">The Amazon S3 bucket name.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">The Amazon S3 object key name.</Abstract>
				</Parameter><Parameter>
					<Name>expression</Name>
					<Abstract type="html">The container object to configure the download request.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion hanlder when the download completes.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns an instance of AWSTask. On successful initialization, task.result contains an instance of AWSS3TransferUtilityDownloadTask.</Abstract></ReturnValue>
			<Anchor>//api/name/downloadDataFromBucket:key:expression:completionHander:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/downloadToURL:bucket:key:expression:completionHander:</TokenIdentifier>
			<Abstract type="html">Downloads the specified Amazon S3 object to a file URL.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;AWSS3TransferUtilityDownloadTask*&gt; *)downloadToURL:(NSURL *)fileURL bucket:(NSString *)bucket key:(NSString *)key expression:(nullable AWSS3TransferUtilityDownloadExpression *)expression completionHander:(nullable AWSS3TransferUtilityDownloadCompletionHandlerBlock)completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>fileURL</Name>
					<Abstract type="html">The file URL to download the object to.</Abstract>
				</Parameter><Parameter>
					<Name>bucket</Name>
					<Abstract type="html">The Amazon S3 bucket name.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">The Amazon S3 object key name.</Abstract>
				</Parameter><Parameter>
					<Name>expression</Name>
					<Abstract type="html">The container object to configure the download request.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion hanlder when the download completes.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns an instance of AWSTask. On successful initialization, task.result contains an instance of AWSS3TransferUtilityDownloadTask.</Abstract></ReturnValue>
			<Anchor>//api/name/downloadToURL:bucket:key:expression:completionHander:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/enumerateToAssignBlocksForUploadTask:downloadTask:</TokenIdentifier>
			<Abstract type="html">Assigns progress feedback and completion handler blocks. This method should be called when the app was suspended while the transfer is still happening.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>- (void)enumerateToAssignBlocksForUploadTask:(nullable void ( ^ ) ( AWSS3TransferUtilityUploadTask *uploadTask , _Nullable AWSS3TransferUtilityProgressBlock *_Nullable uploadProgressBlockReference , _Nullable AWSS3TransferUtilityUploadCompletionHandlerBlock *_Nullable completionHandlerReference ))uploadBlocksAssigner downloadTask:(nullable void ( ^ ) ( AWSS3TransferUtilityDownloadTask *downloadTask , _Nullable AWSS3TransferUtilityProgressBlock *_Nullable downloadProgressBlockReference , _Nullable AWSS3TransferUtilityDownloadCompletionHandlerBlock *_Nullable completionHandlerReference ))downloadBlocksAssigner</Declaration>
			<Parameters>
				<Parameter>
					<Name>uploadBlocksAssigner</Name>
					<Abstract type="html">The block for assigning the upload pregree feedback and completion handler blocks.</Abstract>
				</Parameter><Parameter>
					<Name>downloadBlocksAssigner</Name>
					<Abstract type="html">The block for assigning the download pregree feedback and completion handler blocks.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enumerateToAssignBlocksForUploadTask:downloadTask:</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/getAllTasks</TokenIdentifier>
			<Abstract type="html">Retrieves all running tasks.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSArray&lt;__kindofAWSS3TransferUtilityTask*&gt; *&gt; *)getAllTasks</Declaration>
			
			<ReturnValue><Abstract type="html">An array of AWSS3TransferUtilityTask.</Abstract></ReturnValue>
			<Anchor>//api/name/getAllTasks</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/getUploadTasks</TokenIdentifier>
			<Abstract type="html">Retrieves all running upload tasks.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSArray&lt;AWSS3TransferUtilityUploadTask*&gt; *&gt; *)getUploadTasks</Declaration>
			
			<ReturnValue><Abstract type="html">An array of AWSS3TransferUtilityUploadTask.</Abstract></ReturnValue>
			<Anchor>//api/name/getUploadTasks</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSS3TransferUtility/getDownloadTasks</TokenIdentifier>
			<Abstract type="html">Retrieves all running download tasks.</Abstract>
			<DeclaredIn>AWSS3TransferUtility.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSArray&lt;AWSS3TransferUtilityDownloadTask*&gt; *&gt; *)getDownloadTasks</Declaration>
			
			<ReturnValue><Abstract type="html">An array of AWSS3TransferUtilityDownloadTask.</Abstract></ReturnValue>
			<Anchor>//api/name/getDownloadTasks</Anchor>
            <NodeRef refid="1452"/>
		</Token>
		
        
        
	</File>
</Tokens>