<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSEC2SpotFleetRequestConfigData.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSEC2SpotFleetRequestConfigData</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the configuration of a Spot fleet request.&lt;/p&gt;
Required parameters: [SpotPrice, TargetCapacity, IamFleetRole, LaunchSpecifications]</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
            
			
			<NodeRef refid="909"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setAllocationStrategy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates how to allocate the target capacity across the Spot pools specified by the Spot fleet request. The default is &lt;code&gt;lowestPrice&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2AllocationStrategy allocationStrategy</Declaration>
			
			
			<Anchor>//api/name/allocationStrategy</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/allocationStrategy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates how to allocate the target capacity across the Spot pools specified by the Spot fleet request. The default is &lt;code&gt;lowestPrice&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2AllocationStrategy allocationStrategy</Declaration>
			
			
			<Anchor>//api/name/allocationStrategy</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/allocationStrategy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates how to allocate the target capacity across the Spot pools specified by the Spot fleet request. The default is &lt;code&gt;lowestPrice&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2AllocationStrategy allocationStrategy</Declaration>
			
			
			<Anchor>//api/name/allocationStrategy</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setClientToken:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see Ensuring Idempotency.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientToken</Declaration>
			
			
			<Anchor>//api/name/clientToken</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/clientToken</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see Ensuring Idempotency.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientToken</Declaration>
			
			
			<Anchor>//api/name/clientToken</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/clientToken</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see Ensuring Idempotency.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *clientToken</Declaration>
			
			
			<Anchor>//api/name/clientToken</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setExcessCapacityTerminationPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2ExcessCapacityTerminationPolicy excessCapacityTerminationPolicy</Declaration>
			
			
			<Anchor>//api/name/excessCapacityTerminationPolicy</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/excessCapacityTerminationPolicy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2ExcessCapacityTerminationPolicy excessCapacityTerminationPolicy</Declaration>
			
			
			<Anchor>//api/name/excessCapacityTerminationPolicy</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/excessCapacityTerminationPolicy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2ExcessCapacityTerminationPolicy excessCapacityTerminationPolicy</Declaration>
			
			
			<Anchor>//api/name/excessCapacityTerminationPolicy</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setIamFleetRole:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Grants the Spot fleet permission to terminate Spot instances on your behalf when you cancel its Spot fleet request using &lt;a&gt;CancelSpotFleetRequests&lt;/a&gt; or when the Spot fleet request expires, if you set &lt;code&gt;terminateInstancesWithExpiration&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *iamFleetRole</Declaration>
			
			
			<Anchor>//api/name/iamFleetRole</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/iamFleetRole</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Grants the Spot fleet permission to terminate Spot instances on your behalf when you cancel its Spot fleet request using &lt;a&gt;CancelSpotFleetRequests&lt;/a&gt; or when the Spot fleet request expires, if you set &lt;code&gt;terminateInstancesWithExpiration&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *iamFleetRole</Declaration>
			
			
			<Anchor>//api/name/iamFleetRole</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/iamFleetRole</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Grants the Spot fleet permission to terminate Spot instances on your behalf when you cancel its Spot fleet request using &lt;a&gt;CancelSpotFleetRequests&lt;/a&gt; or when the Spot fleet request expires, if you set &lt;code&gt;terminateInstancesWithExpiration&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *iamFleetRole</Declaration>
			
			
			<Anchor>//api/name/iamFleetRole</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setLaunchSpecifications:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Information about the launch specifications for the Spot fleet request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2SpotFleetLaunchSpecification*&gt; *launchSpecifications</Declaration>
			
			
			<Anchor>//api/name/launchSpecifications</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/launchSpecifications</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Information about the launch specifications for the Spot fleet request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2SpotFleetLaunchSpecification*&gt; *launchSpecifications</Declaration>
			
			
			<Anchor>//api/name/launchSpecifications</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/launchSpecifications</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Information about the launch specifications for the Spot fleet request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2SpotFleetLaunchSpecification*&gt; *launchSpecifications</Declaration>
			
			
			<Anchor>//api/name/launchSpecifications</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setSpotPrice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The bid price per unit hour.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotPrice</Declaration>
			
			
			<Anchor>//api/name/spotPrice</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/spotPrice</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The bid price per unit hour.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotPrice</Declaration>
			
			
			<Anchor>//api/name/spotPrice</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/spotPrice</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The bid price per unit hour.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotPrice</Declaration>
			
			
			<Anchor>//api/name/spotPrice</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setTargetCapacity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *targetCapacity</Declaration>
			
			
			<Anchor>//api/name/targetCapacity</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/targetCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *targetCapacity</Declaration>
			
			
			<Anchor>//api/name/targetCapacity</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/targetCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *targetCapacity</Declaration>
			
			
			<Anchor>//api/name/targetCapacity</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setTerminateInstancesWithExpiration:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether running Spot instances should be terminated when the Spot fleet request expires.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *terminateInstancesWithExpiration</Declaration>
			
			
			<Anchor>//api/name/terminateInstancesWithExpiration</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/terminateInstancesWithExpiration</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether running Spot instances should be terminated when the Spot fleet request expires.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *terminateInstancesWithExpiration</Declaration>
			
			
			<Anchor>//api/name/terminateInstancesWithExpiration</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/terminateInstancesWithExpiration</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether running Spot instances should be terminated when the Spot fleet request expires.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *terminateInstancesWithExpiration</Declaration>
			
			
			<Anchor>//api/name/terminateInstancesWithExpiration</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setValidFrom:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The start date and time of the request, in UTC format (for example, &lt;i&gt;YYYY&lt;/i&gt;-&lt;i&gt;MM&lt;/i&gt;-&lt;i&gt;DD&lt;/i&gt;T&lt;i&gt;HH&lt;/i&gt;:&lt;i&gt;MM&lt;/i&gt;:&lt;i&gt;SS&lt;/i&gt;Z). The default is to start fulfilling the request immediately.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *validFrom</Declaration>
			
			
			<Anchor>//api/name/validFrom</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/validFrom</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The start date and time of the request, in UTC format (for example, &lt;i&gt;YYYY&lt;/i&gt;-&lt;i&gt;MM&lt;/i&gt;-&lt;i&gt;DD&lt;/i&gt;T&lt;i&gt;HH&lt;/i&gt;:&lt;i&gt;MM&lt;/i&gt;:&lt;i&gt;SS&lt;/i&gt;Z). The default is to start fulfilling the request immediately.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *validFrom</Declaration>
			
			
			<Anchor>//api/name/validFrom</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/validFrom</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The start date and time of the request, in UTC format (for example, &lt;i&gt;YYYY&lt;/i&gt;-&lt;i&gt;MM&lt;/i&gt;-&lt;i&gt;DD&lt;/i&gt;T&lt;i&gt;HH&lt;/i&gt;:&lt;i&gt;MM&lt;/i&gt;:&lt;i&gt;SS&lt;/i&gt;Z). The default is to start fulfilling the request immediately.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *validFrom</Declaration>
			
			
			<Anchor>//api/name/validFrom</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/setValidUntil:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The end date and time of the request, in UTC format (for example, &lt;i&gt;YYYY&lt;/i&gt;-&lt;i&gt;MM&lt;/i&gt;-&lt;i&gt;DD&lt;/i&gt;T&lt;i&gt;HH&lt;/i&gt;:&lt;i&gt;MM&lt;/i&gt;:&lt;i&gt;SS&lt;/i&gt;Z). At this point, no new Spot instance requests are placed or enabled to fulfill the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *validUntil</Declaration>
			
			
			<Anchor>//api/name/validUntil</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetRequestConfigData/validUntil</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The end date and time of the request, in UTC format (for example, &lt;i&gt;YYYY&lt;/i&gt;-&lt;i&gt;MM&lt;/i&gt;-&lt;i&gt;DD&lt;/i&gt;T&lt;i&gt;HH&lt;/i&gt;:&lt;i&gt;MM&lt;/i&gt;:&lt;i&gt;SS&lt;/i&gt;Z). At this point, no new Spot instance requests are placed or enabled to fulfill the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *validUntil</Declaration>
			
			
			<Anchor>//api/name/validUntil</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetRequestConfigData/validUntil</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The end date and time of the request, in UTC format (for example, &lt;i&gt;YYYY&lt;/i&gt;-&lt;i&gt;MM&lt;/i&gt;-&lt;i&gt;DD&lt;/i&gt;T&lt;i&gt;HH&lt;/i&gt;:&lt;i&gt;MM&lt;/i&gt;:&lt;i&gt;SS&lt;/i&gt;Z). At this point, no new Spot instance requests are placed or enabled to fulfill the request.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDate *validUntil</Declaration>
			
			
			<Anchor>//api/name/validUntil</Anchor>
            <NodeRef refid="909"/>
		</Token>
		
        
        
	</File>
</Tokens>