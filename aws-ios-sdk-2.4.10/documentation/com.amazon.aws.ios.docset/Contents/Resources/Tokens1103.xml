<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSIoTData.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSIoTData</TokenIdentifier>
			<Abstract type="html">&lt;fullname&gt;AWS IoT&lt;/fullname&gt;&lt;p&gt;AWS IoT-Data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete thing shadows. A thing shadow is a persistent representation of your things and their state in the AWS cloud.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
            
			
			<NodeRef refid="1103"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTData/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSIoTData/defaultIoTData</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultIoTData</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultIoTData</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSIoTData/registerIoTDataWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
			<Declaration>+ (void)registerIoTDataWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerIoTDataWithConfiguration:forKey:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSIoTData/IoTDataForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerIoTDataWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)IoTDataForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/IoTDataForKey:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSIoTData/removeIoTDataForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
			<Declaration>+ (void)removeIoTDataForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeIoTDataForKey:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/deleteThingShadow:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the thing shadow for the specified thing.&lt;/p&gt;&lt;p&gt;For more information, see DeleteThingShadow in the &lt;i&gt;AWS IoT Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataDeleteThingShadowRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataDeleteThingShadowResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDataDeleteThingShadowResponse*&gt; *)deleteThingShadow:(AWSIoTDataDeleteThingShadowRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteThingShadow service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDataDeleteThingShadowResponse. On failed execution, task.error may contain an NSError with AWSIoTDataErrorDomain domain and the following error code: AWSIoTDataErrorResourceNotFound, AWSIoTDataErrorInvalidRequest, AWSIoTDataErrorThrottling, AWSIoTDataErrorUnauthorized, AWSIoTDataErrorServiceUnavailable, AWSIoTDataErrorInternalFailure, AWSIoTDataErrorMethodNotAllowed, AWSIoTDataErrorUnsupportedDocumentEncoding.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteThingShadow:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/deleteThingShadow:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the thing shadow for the specified thing.&lt;/p&gt;&lt;p&gt;For more information, see DeleteThingShadow in the &lt;i&gt;AWS IoT Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataDeleteThingShadowRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataDeleteThingShadowResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteThingShadow:(AWSIoTDataDeleteThingShadowRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDataDeleteThingShadowResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteThingShadow service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTDataErrorDomain domain and the following error code: AWSIoTDataErrorResourceNotFound, AWSIoTDataErrorInvalidRequest, AWSIoTDataErrorThrottling, AWSIoTDataErrorUnauthorized, AWSIoTDataErrorServiceUnavailable, AWSIoTDataErrorInternalFailure, AWSIoTDataErrorMethodNotAllowed, AWSIoTDataErrorUnsupportedDocumentEncoding.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteThingShadow:completionHandler:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/getThingShadow:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the thing shadow for the specified thing.&lt;/p&gt;&lt;p&gt;For more information, see GetThingShadow in the &lt;i&gt;AWS IoT Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataGetThingShadowRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataGetThingShadowResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDataGetThingShadowResponse*&gt; *)getThingShadow:(AWSIoTDataGetThingShadowRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetThingShadow service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDataGetThingShadowResponse. On failed execution, task.error may contain an NSError with AWSIoTDataErrorDomain domain and the following error code: AWSIoTDataErrorInvalidRequest, AWSIoTDataErrorResourceNotFound, AWSIoTDataErrorThrottling, AWSIoTDataErrorUnauthorized, AWSIoTDataErrorServiceUnavailable, AWSIoTDataErrorInternalFailure, AWSIoTDataErrorMethodNotAllowed, AWSIoTDataErrorUnsupportedDocumentEncoding.</Abstract></ReturnValue>
			<Anchor>//api/name/getThingShadow:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/getThingShadow:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the thing shadow for the specified thing.&lt;/p&gt;&lt;p&gt;For more information, see GetThingShadow in the &lt;i&gt;AWS IoT Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataGetThingShadowRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataGetThingShadowResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getThingShadow:(AWSIoTDataGetThingShadowRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDataGetThingShadowResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetThingShadow service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTDataErrorDomain domain and the following error code: AWSIoTDataErrorInvalidRequest, AWSIoTDataErrorResourceNotFound, AWSIoTDataErrorThrottling, AWSIoTDataErrorUnauthorized, AWSIoTDataErrorServiceUnavailable, AWSIoTDataErrorInternalFailure, AWSIoTDataErrorMethodNotAllowed, AWSIoTDataErrorUnsupportedDocumentEncoding.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getThingShadow:completionHandler:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/publish:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Publishes state information.&lt;/p&gt;&lt;p&gt;For more information, see HTTP Protocol in the &lt;i&gt;AWS IoT Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataPublishRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)publish:(AWSIoTDataPublishRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the Publish service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSIoTDataErrorDomain domain and the following error code: AWSIoTDataErrorInternalFailure, AWSIoTDataErrorInvalidRequest, AWSIoTDataErrorUnauthorized, AWSIoTDataErrorMethodNotAllowed.</Abstract></ReturnValue>
			<Anchor>//api/name/publish:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/publish:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Publishes state information.&lt;/p&gt;&lt;p&gt;For more information, see HTTP Protocol in the &lt;i&gt;AWS IoT Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataPublishRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)publish:(AWSIoTDataPublishRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the Publish service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTDataErrorDomain domain and the following error code: AWSIoTDataErrorInternalFailure, AWSIoTDataErrorInvalidRequest, AWSIoTDataErrorUnauthorized, AWSIoTDataErrorMethodNotAllowed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/publish:completionHandler:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/updateThingShadow:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the thing shadow for the specified thing.&lt;/p&gt;&lt;p&gt;For more information, see UpdateThingShadow in the &lt;i&gt;AWS IoT Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataUpdateThingShadowRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataUpdateThingShadowResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSIoTDataUpdateThingShadowResponse*&gt; *)updateThingShadow:(AWSIoTDataUpdateThingShadowRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateThingShadow service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSIoTDataUpdateThingShadowResponse. On failed execution, task.error may contain an NSError with AWSIoTDataErrorDomain domain and the following error code: AWSIoTDataErrorConflict, AWSIoTDataErrorRequestEntityTooLarge, AWSIoTDataErrorInvalidRequest, AWSIoTDataErrorThrottling, AWSIoTDataErrorUnauthorized, AWSIoTDataErrorServiceUnavailable, AWSIoTDataErrorInternalFailure, AWSIoTDataErrorMethodNotAllowed, AWSIoTDataErrorUnsupportedDocumentEncoding.</Abstract></ReturnValue>
			<Anchor>//api/name/updateThingShadow:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTData/updateThingShadow:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the thing shadow for the specified thing.&lt;/p&gt;&lt;p&gt;For more information, see UpdateThingShadow in the &lt;i&gt;AWS IoT Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTDataService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataUpdateThingShadowRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSIoTDataUpdateThingShadowResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateThingShadow:(AWSIoTDataUpdateThingShadowRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSIoTDataUpdateThingShadowResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateThingShadow service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSIoTDataErrorDomain domain and the following error code: AWSIoTDataErrorConflict, AWSIoTDataErrorRequestEntityTooLarge, AWSIoTDataErrorInvalidRequest, AWSIoTDataErrorThrottling, AWSIoTDataErrorUnauthorized, AWSIoTDataErrorServiceUnavailable, AWSIoTDataErrorInternalFailure, AWSIoTDataErrorMethodNotAllowed, AWSIoTDataErrorUnsupportedDocumentEncoding.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateThingShadow:completionHandler:</Anchor>
            <NodeRef refid="1103"/>
		</Token>
		
        
        
	</File>
</Tokens>