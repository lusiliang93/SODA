<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSLambdaUpdateFunctionConfigurationRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSLambdaUpdateFunctionConfigurationRequest</TokenIdentifier>
			<Abstract type="html">&lt;p/&gt;
Required parameters: [FunctionName]</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
            
			
			<NodeRef refid="1279"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/setDetail:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A short user-defined function description. AWS Lambda does not use this value. Assign a meaningful description as you see fit.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/detail</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A short user-defined function description. AWS Lambda does not use this value. Assign a meaningful description as you see fit.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaUpdateFunctionConfigurationRequest/detail</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A short user-defined function description. AWS Lambda does not use this value. Assign a meaningful description as you see fit.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *detail</Declaration>
			
			
			<Anchor>//api/name/detail</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/setFunctionName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Lambda function.&lt;/p&gt;&lt;p&gt; You can specify a function name (for example, &lt;code&gt;Thumbnail&lt;/code&gt;) or you can specify Amazon Resource Name (ARN) of the function (for example, &lt;code&gt;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&lt;/code&gt;). AWS Lambda also allows you to specify a partial ARN (for example, &lt;code&gt;account-id:Thumbnail&lt;/code&gt;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/functionName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Lambda function.&lt;/p&gt;&lt;p&gt; You can specify a function name (for example, &lt;code&gt;Thumbnail&lt;/code&gt;) or you can specify Amazon Resource Name (ARN) of the function (for example, &lt;code&gt;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&lt;/code&gt;). AWS Lambda also allows you to specify a partial ARN (for example, &lt;code&gt;account-id:Thumbnail&lt;/code&gt;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaUpdateFunctionConfigurationRequest/functionName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the Lambda function.&lt;/p&gt;&lt;p&gt; You can specify a function name (for example, &lt;code&gt;Thumbnail&lt;/code&gt;) or you can specify Amazon Resource Name (ARN) of the function (for example, &lt;code&gt;arn:aws:lambda:us-west-2:account-id:function:ThumbNail&lt;/code&gt;). AWS Lambda also allows you to specify a partial ARN (for example, &lt;code&gt;account-id:Thumbnail&lt;/code&gt;). Note that the length constraint applies only to the ARN. If you specify only the function name, it is limited to 64 character in length. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *functionName</Declaration>
			
			
			<Anchor>//api/name/functionName</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/setHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The function that Lambda calls to begin executing your function. For Node.js, it is the &lt;code&gt;module-name.export&lt;/code&gt; value in your function. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *handler</Declaration>
			
			
			<Anchor>//api/name/handler</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/handler</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The function that Lambda calls to begin executing your function. For Node.js, it is the &lt;code&gt;module-name.export&lt;/code&gt; value in your function. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *handler</Declaration>
			
			
			<Anchor>//api/name/handler</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaUpdateFunctionConfigurationRequest/handler</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The function that Lambda calls to begin executing your function. For Node.js, it is the &lt;code&gt;module-name.export&lt;/code&gt; value in your function. &lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *handler</Declaration>
			
			
			<Anchor>//api/name/handler</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/setMemorySize:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of memory, in MB, your Lambda function is given. AWS Lambda uses this memory size to infer the amount of CPU allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *memorySize</Declaration>
			
			
			<Anchor>//api/name/memorySize</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/memorySize</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of memory, in MB, your Lambda function is given. AWS Lambda uses this memory size to infer the amount of CPU allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *memorySize</Declaration>
			
			
			<Anchor>//api/name/memorySize</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaUpdateFunctionConfigurationRequest/memorySize</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of memory, in MB, your Lambda function is given. AWS Lambda uses this memory size to infer the amount of CPU allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *memorySize</Declaration>
			
			
			<Anchor>//api/name/memorySize</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/setRole:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the IAM role that Lambda will assume when it executes your function.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *role</Declaration>
			
			
			<Anchor>//api/name/role</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/role</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the IAM role that Lambda will assume when it executes your function.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *role</Declaration>
			
			
			<Anchor>//api/name/role</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaUpdateFunctionConfigurationRequest/role</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Name (ARN) of the IAM role that Lambda will assume when it executes your function.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *role</Declaration>
			
			
			<Anchor>//api/name/role</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/setRuntime:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The runtime environment for the Lambda function.&lt;/p&gt;&lt;p&gt;To use the Node.js runtime v4.3, set the value to &quot;nodejs4.3&quot;. To use earlier runtime (v0.10.42), set the value to &quot;nodejs&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSLambdaRuntime runtime</Declaration>
			
			
			<Anchor>//api/name/runtime</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/runtime</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The runtime environment for the Lambda function.&lt;/p&gt;&lt;p&gt;To use the Node.js runtime v4.3, set the value to &quot;nodejs4.3&quot;. To use earlier runtime (v0.10.42), set the value to &quot;nodejs&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSLambdaRuntime runtime</Declaration>
			
			
			<Anchor>//api/name/runtime</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaUpdateFunctionConfigurationRequest/runtime</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The runtime environment for the Lambda function.&lt;/p&gt;&lt;p&gt;To use the Node.js runtime v4.3, set the value to &quot;nodejs4.3&quot;. To use earlier runtime (v0.10.42), set the value to &quot;nodejs&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSLambdaRuntime runtime</Declaration>
			
			
			<Anchor>//api/name/runtime</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/setTimeout:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The function execution time at which AWS Lambda should terminate the function. Because the execution time has cost implications, we recommend you set this value based on your expected execution time. The default is 3 seconds.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *timeout</Declaration>
			
			
			<Anchor>//api/name/timeout</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/timeout</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The function execution time at which AWS Lambda should terminate the function. Because the execution time has cost implications, we recommend you set this value based on your expected execution time. The default is 3 seconds.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *timeout</Declaration>
			
			
			<Anchor>//api/name/timeout</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaUpdateFunctionConfigurationRequest/timeout</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The function execution time at which AWS Lambda should terminate the function. Because the execution time has cost implications, we recommend you set this value based on your expected execution time. The default is 3 seconds.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *timeout</Declaration>
			
			
			<Anchor>//api/name/timeout</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/setVpcConfig:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If your Lambda function accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSLambdaVpcConfig *vpcConfig</Declaration>
			
			
			<Anchor>//api/name/vpcConfig</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSLambdaUpdateFunctionConfigurationRequest/vpcConfig</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If your Lambda function accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSLambdaVpcConfig *vpcConfig</Declaration>
			
			
			<Anchor>//api/name/vpcConfig</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSLambdaUpdateFunctionConfigurationRequest/vpcConfig</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;If your Lambda function accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSLambdaModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSLambdaVpcConfig *vpcConfig</Declaration>
			
			
			<Anchor>//api/name/vpcConfig</Anchor>
            <NodeRef refid="1279"/>
		</Token>
		
        
        
	</File>
</Tokens>