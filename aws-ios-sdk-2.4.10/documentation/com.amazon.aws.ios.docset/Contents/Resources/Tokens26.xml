<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSAutoScalingCreateAutoScalingGroupType.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSAutoScalingCreateAutoScalingGroupType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Contains the parameters for CreateAutoScalingGroup.&lt;/p&gt;
Required parameters: [AutoScalingGroupName, MinSize, MaxSize]</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
            
			
			<NodeRef refid="26"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setAutoScalingGroupName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the group. This name must be unique within the scope of your AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *autoScalingGroupName</Declaration>
			
			
			<Anchor>//api/name/autoScalingGroupName</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/autoScalingGroupName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the group. This name must be unique within the scope of your AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *autoScalingGroupName</Declaration>
			
			
			<Anchor>//api/name/autoScalingGroupName</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/autoScalingGroupName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the group. This name must be unique within the scope of your AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *autoScalingGroupName</Declaration>
			
			
			<Anchor>//api/name/autoScalingGroupName</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setAvailabilityZones:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *availabilityZones</Declaration>
			
			
			<Anchor>//api/name/availabilityZones</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/availabilityZones</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *availabilityZones</Declaration>
			
			
			<Anchor>//api/name/availabilityZones</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/availabilityZones</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more Availability Zones for the group. This parameter is optional if you specify one or more subnets.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *availabilityZones</Declaration>
			
			
			<Anchor>//api/name/availabilityZones</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setDefaultCooldown:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default is 300.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Cooldowns in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *defaultCooldown</Declaration>
			
			
			<Anchor>//api/name/defaultCooldown</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/defaultCooldown</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default is 300.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Cooldowns in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *defaultCooldown</Declaration>
			
			
			<Anchor>//api/name/defaultCooldown</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/defaultCooldown</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default is 300.&lt;/p&gt;&lt;p&gt;For more information, see Auto Scaling Cooldowns in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *defaultCooldown</Declaration>
			
			
			<Anchor>//api/name/defaultCooldown</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setDesiredCapacity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of EC2 instances that should be running in the group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *desiredCapacity</Declaration>
			
			
			<Anchor>//api/name/desiredCapacity</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/desiredCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of EC2 instances that should be running in the group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *desiredCapacity</Declaration>
			
			
			<Anchor>//api/name/desiredCapacity</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/desiredCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of EC2 instances that should be running in the group. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *desiredCapacity</Declaration>
			
			
			<Anchor>//api/name/desiredCapacity</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setHealthCheckGracePeriod:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of time, in seconds, that Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default is 0.&lt;/p&gt;&lt;p&gt;This parameter is required if you are adding an &lt;code&gt;ELB&lt;/code&gt; health check.&lt;/p&gt;&lt;p&gt;For more information, see Health Checks in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *healthCheckGracePeriod</Declaration>
			
			
			<Anchor>//api/name/healthCheckGracePeriod</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/healthCheckGracePeriod</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of time, in seconds, that Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default is 0.&lt;/p&gt;&lt;p&gt;This parameter is required if you are adding an &lt;code&gt;ELB&lt;/code&gt; health check.&lt;/p&gt;&lt;p&gt;For more information, see Health Checks in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *healthCheckGracePeriod</Declaration>
			
			
			<Anchor>//api/name/healthCheckGracePeriod</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/healthCheckGracePeriod</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The amount of time, in seconds, that Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default is 0.&lt;/p&gt;&lt;p&gt;This parameter is required if you are adding an &lt;code&gt;ELB&lt;/code&gt; health check.&lt;/p&gt;&lt;p&gt;For more information, see Health Checks in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *healthCheckGracePeriod</Declaration>
			
			
			<Anchor>//api/name/healthCheckGracePeriod</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setHealthCheckType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The service to use for the health checks. The valid values are &lt;code&gt;EC2&lt;/code&gt; and &lt;code&gt;ELB&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;By default, health checks use Amazon EC2 instance status checks to determine the health of an instance. For more information, see Health Checks in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *healthCheckType</Declaration>
			
			
			<Anchor>//api/name/healthCheckType</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/healthCheckType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The service to use for the health checks. The valid values are &lt;code&gt;EC2&lt;/code&gt; and &lt;code&gt;ELB&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;By default, health checks use Amazon EC2 instance status checks to determine the health of an instance. For more information, see Health Checks in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *healthCheckType</Declaration>
			
			
			<Anchor>//api/name/healthCheckType</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/healthCheckType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The service to use for the health checks. The valid values are &lt;code&gt;EC2&lt;/code&gt; and &lt;code&gt;ELB&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;By default, health checks use Amazon EC2 instance status checks to determine the health of an instance. For more information, see Health Checks in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *healthCheckType</Declaration>
			
			
			<Anchor>//api/name/healthCheckType</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setInstanceId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the instance used to create a launch configuration for the group. Alternatively, specify a launch configuration instead of an EC2 instance.&lt;/p&gt;&lt;p&gt;When you specify an ID of an instance, Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, with the exception of the block device mapping.&lt;/p&gt;&lt;p&gt;For more information, see Create an Auto Scaling Group Using an EC2 Instance in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *instanceId</Declaration>
			
			
			<Anchor>//api/name/instanceId</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/instanceId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the instance used to create a launch configuration for the group. Alternatively, specify a launch configuration instead of an EC2 instance.&lt;/p&gt;&lt;p&gt;When you specify an ID of an instance, Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, with the exception of the block device mapping.&lt;/p&gt;&lt;p&gt;For more information, see Create an Auto Scaling Group Using an EC2 Instance in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *instanceId</Declaration>
			
			
			<Anchor>//api/name/instanceId</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/instanceId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the instance used to create a launch configuration for the group. Alternatively, specify a launch configuration instead of an EC2 instance.&lt;/p&gt;&lt;p&gt;When you specify an ID of an instance, Auto Scaling creates a new launch configuration and associates it with the group. This launch configuration derives its attributes from the specified instance, with the exception of the block device mapping.&lt;/p&gt;&lt;p&gt;For more information, see Create an Auto Scaling Group Using an EC2 Instance in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *instanceId</Declaration>
			
			
			<Anchor>//api/name/instanceId</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setLaunchConfigurationName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the launch configuration. Alternatively, specify an EC2 instance instead of a launch configuration.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *launchConfigurationName</Declaration>
			
			
			<Anchor>//api/name/launchConfigurationName</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/launchConfigurationName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the launch configuration. Alternatively, specify an EC2 instance instead of a launch configuration.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *launchConfigurationName</Declaration>
			
			
			<Anchor>//api/name/launchConfigurationName</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/launchConfigurationName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the launch configuration. Alternatively, specify an EC2 instance instead of a launch configuration.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *launchConfigurationName</Declaration>
			
			
			<Anchor>//api/name/launchConfigurationName</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setLoadBalancerNames:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more Classic load balancers. To specify an Application load balancer, use &lt;code&gt;TargetGroupARNs&lt;/code&gt; instead.&lt;/p&gt;&lt;p&gt;For more information, see Using a Load Balancer With an Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *loadBalancerNames</Declaration>
			
			
			<Anchor>//api/name/loadBalancerNames</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/loadBalancerNames</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more Classic load balancers. To specify an Application load balancer, use &lt;code&gt;TargetGroupARNs&lt;/code&gt; instead.&lt;/p&gt;&lt;p&gt;For more information, see Using a Load Balancer With an Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *loadBalancerNames</Declaration>
			
			
			<Anchor>//api/name/loadBalancerNames</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/loadBalancerNames</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more Classic load balancers. To specify an Application load balancer, use &lt;code&gt;TargetGroupARNs&lt;/code&gt; instead.&lt;/p&gt;&lt;p&gt;For more information, see Using a Load Balancer With an Auto Scaling Group in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *loadBalancerNames</Declaration>
			
			
			<Anchor>//api/name/loadBalancerNames</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setMaxSize:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxSize</Declaration>
			
			
			<Anchor>//api/name/maxSize</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/maxSize</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxSize</Declaration>
			
			
			<Anchor>//api/name/maxSize</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/maxSize</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *maxSize</Declaration>
			
			
			<Anchor>//api/name/maxSize</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setMinSize:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The minimum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *minSize</Declaration>
			
			
			<Anchor>//api/name/minSize</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/minSize</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The minimum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *minSize</Declaration>
			
			
			<Anchor>//api/name/minSize</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/minSize</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The minimum size of the group.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *minSize</Declaration>
			
			
			<Anchor>//api/name/minSize</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setLatestInstancesProtectedFromScaleIn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether newly launched instances are protected from termination by Auto Scaling when scaling in.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *latestInstancesProtectedFromScaleIn</Declaration>
			
			
			<Anchor>//api/name/latestInstancesProtectedFromScaleIn</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/latestInstancesProtectedFromScaleIn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether newly launched instances are protected from termination by Auto Scaling when scaling in.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *latestInstancesProtectedFromScaleIn</Declaration>
			
			
			<Anchor>//api/name/latestInstancesProtectedFromScaleIn</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/latestInstancesProtectedFromScaleIn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether newly launched instances are protected from termination by Auto Scaling when scaling in.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *latestInstancesProtectedFromScaleIn</Declaration>
			
			
			<Anchor>//api/name/latestInstancesProtectedFromScaleIn</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setPlacementGroup:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the placement group into which you&apos;ll launch your instances, if any. For more information, see Placement Groups in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *placementGroup</Declaration>
			
			
			<Anchor>//api/name/placementGroup</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/placementGroup</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the placement group into which you&apos;ll launch your instances, if any. For more information, see Placement Groups in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *placementGroup</Declaration>
			
			
			<Anchor>//api/name/placementGroup</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/placementGroup</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the placement group into which you&apos;ll launch your instances, if any. For more information, see Placement Groups in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *placementGroup</Declaration>
			
			
			<Anchor>//api/name/placementGroup</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setTags:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more tags.&lt;/p&gt;&lt;p&gt;For more information, see Tagging Auto Scaling Groups and Instances in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSAutoScalingTag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/tags</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more tags.&lt;/p&gt;&lt;p&gt;For more information, see Tagging Auto Scaling Groups and Instances in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSAutoScalingTag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/tags</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more tags.&lt;/p&gt;&lt;p&gt;For more information, see Tagging Auto Scaling Groups and Instances in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSAutoScalingTag*&gt; *tags</Declaration>
			
			
			<Anchor>//api/name/tags</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setTargetGroupARNs:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Names (ARN) of the target groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *targetGroupARNs</Declaration>
			
			
			<Anchor>//api/name/targetGroupARNs</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/targetGroupARNs</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Names (ARN) of the target groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *targetGroupARNs</Declaration>
			
			
			<Anchor>//api/name/targetGroupARNs</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/targetGroupARNs</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Amazon Resource Names (ARN) of the target groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *targetGroupARNs</Declaration>
			
			
			<Anchor>//api/name/targetGroupARNs</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setTerminationPolicies:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.&lt;/p&gt;&lt;p&gt;For more information, see Controlling Which Instances Auto Scaling Terminates During Scale In in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *terminationPolicies</Declaration>
			
			
			<Anchor>//api/name/terminationPolicies</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/terminationPolicies</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.&lt;/p&gt;&lt;p&gt;For more information, see Controlling Which Instances Auto Scaling Terminates During Scale In in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *terminationPolicies</Declaration>
			
			
			<Anchor>//api/name/terminationPolicies</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/terminationPolicies</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more termination policies used to select the instance to terminate. These policies are executed in the order that they are listed.&lt;/p&gt;&lt;p&gt;For more information, see Controlling Which Instances Auto Scaling Terminates During Scale In in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *terminationPolicies</Declaration>
			
			
			<Anchor>//api/name/terminationPolicies</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/setVPCZoneIdentifier:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A comma-separated list of subnet identifiers for your virtual private cloud (VPC).&lt;/p&gt;&lt;p&gt;If you specify subnets and Availability Zones with this call, ensure that the subnets&apos; Availability Zones match the Availability Zones specified.&lt;/p&gt;&lt;p&gt;For more information, see Launching Auto Scaling Instances in a VPC in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *VPCZoneIdentifier</Declaration>
			
			
			<Anchor>//api/name/VPCZoneIdentifier</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAutoScalingCreateAutoScalingGroupType/VPCZoneIdentifier</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A comma-separated list of subnet identifiers for your virtual private cloud (VPC).&lt;/p&gt;&lt;p&gt;If you specify subnets and Availability Zones with this call, ensure that the subnets&apos; Availability Zones match the Availability Zones specified.&lt;/p&gt;&lt;p&gt;For more information, see Launching Auto Scaling Instances in a VPC in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *VPCZoneIdentifier</Declaration>
			
			
			<Anchor>//api/name/VPCZoneIdentifier</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAutoScalingCreateAutoScalingGroupType/VPCZoneIdentifier</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A comma-separated list of subnet identifiers for your virtual private cloud (VPC).&lt;/p&gt;&lt;p&gt;If you specify subnets and Availability Zones with this call, ensure that the subnets&apos; Availability Zones match the Availability Zones specified.&lt;/p&gt;&lt;p&gt;For more information, see Launching Auto Scaling Instances in a VPC in the &lt;i&gt;Auto Scaling User Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSAutoScalingModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *VPCZoneIdentifier</Declaration>
			
			
			<Anchor>//api/name/VPCZoneIdentifier</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
        
        
	</File>
</Tokens>