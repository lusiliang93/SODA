<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSIoTUpdateCertificateRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSIoTUpdateCertificateRequest</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The input for the UpdateCertificate operation.&lt;/p&gt;
Required parameters: [certificateId, newStatus]</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
            
			
			<NodeRef refid="1197"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTUpdateCertificateRequest/setCertificateId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *certificateId</Declaration>
			
			
			<Anchor>//api/name/certificateId</Anchor>
            <NodeRef refid="1197"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTUpdateCertificateRequest/certificateId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *certificateId</Declaration>
			
			
			<Anchor>//api/name/certificateId</Anchor>
            <NodeRef refid="1197"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTUpdateCertificateRequest/certificateId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the certificate.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *certificateId</Declaration>
			
			
			<Anchor>//api/name/certificateId</Anchor>
            <NodeRef refid="1197"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTUpdateCertificateRequest/setLatestStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The new status.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Setting the status to PENDINGTRANSFER will result in an exception being thrown. PENDINGTRANSFER is a status used internally by AWS IoT. It is not intended for developer use.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTCertificateStatus latestStatus</Declaration>
			
			
			<Anchor>//api/name/latestStatus</Anchor>
            <NodeRef refid="1197"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSIoTUpdateCertificateRequest/latestStatus</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The new status.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Setting the status to PENDINGTRANSFER will result in an exception being thrown. PENDINGTRANSFER is a status used internally by AWS IoT. It is not intended for developer use.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTCertificateStatus latestStatus</Declaration>
			
			
			<Anchor>//api/name/latestStatus</Anchor>
            <NodeRef refid="1197"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSIoTUpdateCertificateRequest/latestStatus</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The new status.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Setting the status to PENDINGTRANSFER will result in an exception being thrown. PENDINGTRANSFER is a status used internally by AWS IoT. It is not intended for developer use.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSIoTModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSIoTCertificateStatus latestStatus</Declaration>
			
			
			<Anchor>//api/name/latestStatus</Anchor>
            <NodeRef refid="1197"/>
		</Token>
		
        
        
	</File>
</Tokens>