<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSCognitoIdentityUserPool.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityUserPool</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
            
			
			<NodeRef refid="314"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/setIdentityProviderName:</TokenIdentifier>
			<Abstract type="html">The name of the identity provider. e.g. graph.facebook.com.</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *identityProviderName</Declaration>
			
			
			<Anchor>//api/name/identityProviderName</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/identityProviderName</TokenIdentifier>
			<Abstract type="html">The name of the identity provider. e.g. graph.facebook.com.</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *identityProviderName</Declaration>
			
			
			<Anchor>//api/name/identityProviderName</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityUserPool/identityProviderName</TokenIdentifier>
			<Abstract type="html">The name of the identity provider. e.g. graph.facebook.com.</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *identityProviderName</Declaration>
			
			
			<Anchor>//api/name/identityProviderName</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/setDelegate:</TokenIdentifier>
			<Abstract type="html">Set this delegate to interactively prompt users for authentication challenges when necessary</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) id&lt;AWSCognitoIdentityInteractiveAuthenticationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/delegate</TokenIdentifier>
			<Abstract type="html">Set this delegate to interactively prompt users for authentication challenges when necessary</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) id&lt;AWSCognitoIdentityInteractiveAuthenticationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityUserPool/delegate</TokenIdentifier>
			<Abstract type="html">Set this delegate to interactively prompt users for authentication challenges when necessary</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) id&lt;AWSCognitoIdentityInteractiveAuthenticationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/signUp:password:userAttributes:validationData:</TokenIdentifier>
			<Abstract type="html">Sign up a new user</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityUserPoolSignUpResponse*&gt; *)signUp:(NSString *)username password:(NSString *)password userAttributes:(nullable NSArray&lt;AWSCognitoIdentityUserAttributeType*&gt; *)userAttributes validationData:(nullable NSArray&lt;AWSCognitoIdentityUserAttributeType*&gt; *)validationData</Declaration>
			
			
			<Anchor>//api/name/signUp:password:userAttributes:validationData:</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/currentUser</TokenIdentifier>
			<Abstract type="html">Return the user who last authenticated.  Username may be nil if current user is unknown.</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>- (nullable AWSCognitoIdentityUser *)currentUser</Declaration>
			
			<ReturnValue><Abstract type="html">The last authenticated user</Abstract></ReturnValue>
			<Anchor>//api/name/currentUser</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/getUser</TokenIdentifier>
			<Abstract type="html">Return the user without a username, when username is unknown.</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>- (AWSCognitoIdentityUser *)getUser</Declaration>
			
			
			<Anchor>//api/name/getUser</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/getUser:</TokenIdentifier>
			<Abstract type="html">Return the user with a specific username</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>- (AWSCognitoIdentityUser *)getUser:(NSString *)username</Declaration>
			
			
			<Anchor>//api/name/getUser:</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/clearLastKnownUser</TokenIdentifier>
			<Abstract type="html">Clear the last known user only without signing out of their user session</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>- (void)clearLastKnownUser</Declaration>
			
			
			<Anchor>//api/name/clearLastKnownUser</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/clearAll</TokenIdentifier>
			<Abstract type="html">Clear everything from keychain, including last known user and user sessions for all users.</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.h</DeclaredIn>
			
			<Declaration>- (void)clearAll</Declaration>
			
			
			<Anchor>//api/name/clearAll</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/token</TokenIdentifier>
			<Abstract type="html">Returns the token associated with this provider. If the token is cached and invalid, should refresh and return the valid token.</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.m</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSString*&gt; *)token</Declaration>
			
			
			<Anchor>//api/name/token</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityUserPool/logins</TokenIdentifier>
			<Abstract type="html">Each entry in logins represents a single login with an identity provider. The key is the domain of the login provider (e.g. &apos;graph.facebook.com&apos;) and the value is the OAuth/OpenId Connect token that results from an authentication with that login provider.</Abstract>
			<DeclaredIn>AWSCognitoIdentityUserPool.m</DeclaredIn>
			
			<Declaration>- (AWSTask&lt;NSDictionary&lt;NSString*,NSString*&gt; *&gt; *)logins</Declaration>
			
			
			<Anchor>//api/name/logins</Anchor>
            <NodeRef refid="314"/>
		</Token>
		
        
        
	</File>
</Tokens>