<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSAbstractKinesisRecorder.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSAbstractKinesisRecorder</TokenIdentifier>
			<Abstract type="html">AWSAbstractKinesisRecorder is an abstract class. You should not instantiate this class directly. Instead use its concrete subclasses AWSKinesisRecorder and AWSFirehoseRecorder.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
            
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/setDiskBytesUsed:</TokenIdentifier>
			<Abstract type="html">The number of bytes currently used to store AWSKinesisPutRecordInput objects on disk.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) NSUInteger diskBytesUsed</Declaration>
			
			
			<Anchor>//api/name/diskBytesUsed</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/diskBytesUsed</TokenIdentifier>
			<Abstract type="html">The number of bytes currently used to store AWSKinesisPutRecordInput objects on disk.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) NSUInteger diskBytesUsed</Declaration>
			
			
			<Anchor>//api/name/diskBytesUsed</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAbstractKinesisRecorder/diskBytesUsed</TokenIdentifier>
			<Abstract type="html">The number of bytes currently used to store AWSKinesisPutRecordInput objects on disk.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) NSUInteger diskBytesUsed</Declaration>
			
			
			<Anchor>//api/name/diskBytesUsed</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/setNotificationByteThreshold:</TokenIdentifier>
			<Abstract type="html">The threshold of disk bytes for notification. When exceeded, saveRecord:streamName: posts AWSKinesisRecorderByteThresholdReachedNotification. The default is 0 meaning it will not post the notification.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger notificationByteThreshold</Declaration>
			
			
			<Anchor>//api/name/notificationByteThreshold</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/notificationByteThreshold</TokenIdentifier>
			<Abstract type="html">The threshold of disk bytes for notification. When exceeded, saveRecord:streamName: posts AWSKinesisRecorderByteThresholdReachedNotification. The default is 0 meaning it will not post the notification.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger notificationByteThreshold</Declaration>
			
			
			<Anchor>//api/name/notificationByteThreshold</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAbstractKinesisRecorder/notificationByteThreshold</TokenIdentifier>
			<Abstract type="html">The threshold of disk bytes for notification. When exceeded, saveRecord:streamName: posts AWSKinesisRecorderByteThresholdReachedNotification. The default is 0 meaning it will not post the notification.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger notificationByteThreshold</Declaration>
			
			
			<Anchor>//api/name/notificationByteThreshold</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/setDiskByteLimit:</TokenIdentifier>
			<Abstract type="html">The limit of the disk cache size in bytes. When exceeded, older requests will be discarded. Setting this value to 0.0 meaning no practical limit. The default value is 5MB.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger diskByteLimit</Declaration>
			
			
			<Anchor>//api/name/diskByteLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/diskByteLimit</TokenIdentifier>
			<Abstract type="html">The limit of the disk cache size in bytes. When exceeded, older requests will be discarded. Setting this value to 0.0 meaning no practical limit. The default value is 5MB.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger diskByteLimit</Declaration>
			
			
			<Anchor>//api/name/diskByteLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAbstractKinesisRecorder/diskByteLimit</TokenIdentifier>
			<Abstract type="html">The limit of the disk cache size in bytes. When exceeded, older requests will be discarded. Setting this value to 0.0 meaning no practical limit. The default value is 5MB.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger diskByteLimit</Declaration>
			
			
			<Anchor>//api/name/diskByteLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/setDiskAgeLimit:</TokenIdentifier>
			<Abstract type="html">The age limit of the cached requests. When exceeded, requests older than the specified age will be discarded. Setting this value to 0 meaning no practical limit. The default is no age limit.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval diskAgeLimit</Declaration>
			
			
			<Anchor>//api/name/diskAgeLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/diskAgeLimit</TokenIdentifier>
			<Abstract type="html">The age limit of the cached requests. When exceeded, requests older than the specified age will be discarded. Setting this value to 0 meaning no practical limit. The default is no age limit.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval diskAgeLimit</Declaration>
			
			
			<Anchor>//api/name/diskAgeLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAbstractKinesisRecorder/diskAgeLimit</TokenIdentifier>
			<Abstract type="html">The age limit of the cached requests. When exceeded, requests older than the specified age will be discarded. Setting this value to 0 meaning no practical limit. The default is no age limit.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSTimeInterval diskAgeLimit</Declaration>
			
			
			<Anchor>//api/name/diskAgeLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/setBatchRecordsByteLimit:</TokenIdentifier>
			<Abstract type="html">The maxium batch data size in bytes. The default value is 512KB. The maximum is 4MB.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger batchRecordsByteLimit</Declaration>
			
			
			<Anchor>//api/name/batchRecordsByteLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/batchRecordsByteLimit</TokenIdentifier>
			<Abstract type="html">The maxium batch data size in bytes. The default value is 512KB. The maximum is 4MB.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger batchRecordsByteLimit</Declaration>
			
			
			<Anchor>//api/name/batchRecordsByteLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSAbstractKinesisRecorder/batchRecordsByteLimit</TokenIdentifier>
			<Abstract type="html">The maxium batch data size in bytes. The default value is 512KB. The maximum is 4MB.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSUInteger batchRecordsByteLimit</Declaration>
			
			
			<Anchor>//api/name/batchRecordsByteLimit</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/saveRecord:streamName:</TokenIdentifier>
			<Abstract type="html">Saves a record to local storage to be sent later. The record will be submitted to the streamName provided with a randomly generated partition key to ensure equal distribution across shards.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)saveRecord:(NSData *)data streamName:(NSString *)streamName</Declaration>
			<Parameters>
				<Parameter>
					<Name>data</Name>
					<Abstract type="html">The data to send to Amazon Kinesis. It needs to be smaller than 256KB.</Abstract>
				</Parameter><Parameter>
					<Name>streamName</Name>
					<Abstract type="html">The stream name for Amazon Kinesis.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">AWSTask - task.result is always nil.</Abstract></ReturnValue>
			<Anchor>//api/name/saveRecord:streamName:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/submitAllRecords</TokenIdentifier>
			<Abstract type="html">Submits all locally saved requests to Amazon Kinesis. Requests that are successfully sent will be deleted from the device. Requests that fail due to the device being offline will stop the submission process and be kept. Requests that fail due to other reasons (such as the request being invalid) will be deleted.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)submitAllRecords</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result is always nil.</Abstract></ReturnValue>
			<Anchor>//api/name/submitAllRecords</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSAbstractKinesisRecorder/removeAllRecords</TokenIdentifier>
			<Abstract type="html">Removes all requests saved to disk.</Abstract>
			<DeclaredIn>AWSAbstractKinesisRecorder.h</DeclaredIn>
			
			<Declaration>- (AWSTask *)removeAllRecords</Declaration>
			
			<ReturnValue><Abstract type="html">AWSTask - task.result is always nil.</Abstract></ReturnValue>
			<Anchor>//api/name/removeAllRecords</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
        
        
	</File>
</Tokens>