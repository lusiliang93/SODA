<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSKSReachability.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSKSReachability</TokenIdentifier>
			<Abstract type="html">Monitors network connectivity.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
            
			
			<NodeRef refid="1200"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKSReachability/reachabilityToHost:</TokenIdentifier>
			<Abstract type="html">Reachability to a specific host. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>+ (AWSKSReachability *)reachabilityToHost:(NSString *)hostname</Declaration>
			<Parameters>
				<Parameter>
					<Name>hostname</Name>
					<Abstract type="html">The name or IP address of the host to monitor. If nil or
empty string, check reachability to the internet in general.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/reachabilityToHost:</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKSReachability/reachabilityToLocalNetwork</TokenIdentifier>
			<Abstract type="html">Reachability to the local (wired or wifi) network. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>+ (AWSKSReachability *)reachabilityToLocalNetwork</Declaration>
			
			
			<Anchor>//api/name/reachabilityToLocalNetwork</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSKSReachability/reachabilityToInternet</TokenIdentifier>
			<Abstract type="html">Reachability to the internet. Returns nil if an initialization error occurs.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>+ (AWSKSReachability *)reachabilityToInternet</Declaration>
			
			
			<Anchor>//api/name/reachabilityToInternet</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/setHostname:</TokenIdentifier>
			<Abstract type="html">The host we are monitoring reachability to, if any.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *hostname</Declaration>
			
			
			<Anchor>//api/name/hostname</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/hostname</TokenIdentifier>
			<Abstract type="html">The host we are monitoring reachability to, if any.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *hostname</Declaration>
			
			
			<Anchor>//api/name/hostname</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKSReachability/hostname</TokenIdentifier>
			<Abstract type="html">The host we are monitoring reachability to, if any.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, retain) NSString *hostname</Declaration>
			
			
			<Anchor>//api/name/hostname</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/setOnInitializationComplete:</TokenIdentifier>
			<Abstract type="html">If non-nil, called when the KSReachability object has finished initializing.
If initialization has already completed, calls on the next main thread run loop.
This block will only be called once, and then discarded (released).
Block will be invoked on the main thread.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readwrite, copy) AWSKSReachabilityCallback onInitializationComplete</Declaration>
			
			
			<Anchor>//api/name/onInitializationComplete</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/onInitializationComplete</TokenIdentifier>
			<Abstract type="html">If non-nil, called when the KSReachability object has finished initializing.
If initialization has already completed, calls on the next main thread run loop.
This block will only be called once, and then discarded (released).
Block will be invoked on the main thread.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readwrite, copy) AWSKSReachabilityCallback onInitializationComplete</Declaration>
			
			
			<Anchor>//api/name/onInitializationComplete</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKSReachability/onInitializationComplete</TokenIdentifier>
			<Abstract type="html">If non-nil, called when the KSReachability object has finished initializing.
If initialization has already completed, calls on the next main thread run loop.
This block will only be called once, and then discarded (released).
Block will be invoked on the main thread.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readwrite, copy) AWSKSReachabilityCallback onInitializationComplete</Declaration>
			
			
			<Anchor>//api/name/onInitializationComplete</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/setOnReachabilityChanged:</TokenIdentifier>
			<Abstract type="html">If non-nil, called whenever reachability flags change.
Block will be invoked on the main thread.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readwrite, copy) AWSKSReachabilityCallback onReachabilityChanged</Declaration>
			
			
			<Anchor>//api/name/onReachabilityChanged</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/onReachabilityChanged</TokenIdentifier>
			<Abstract type="html">If non-nil, called whenever reachability flags change.
Block will be invoked on the main thread.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readwrite, copy) AWSKSReachabilityCallback onReachabilityChanged</Declaration>
			
			
			<Anchor>//api/name/onReachabilityChanged</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKSReachability/onReachabilityChanged</TokenIdentifier>
			<Abstract type="html">If non-nil, called whenever reachability flags change.
Block will be invoked on the main thread.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readwrite, copy) AWSKSReachabilityCallback onReachabilityChanged</Declaration>
			
			
			<Anchor>//api/name/onReachabilityChanged</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/setNotificationName:</TokenIdentifier>
			<Abstract type="html">The notification to send when reachability changes (nil = don&apos;t send).
Default = nil</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, retain) NSString *notificationName</Declaration>
			
			
			<Anchor>//api/name/notificationName</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/notificationName</TokenIdentifier>
			<Abstract type="html">The notification to send when reachability changes (nil = don&apos;t send).
Default = nil</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, retain) NSString *notificationName</Declaration>
			
			
			<Anchor>//api/name/notificationName</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKSReachability/notificationName</TokenIdentifier>
			<Abstract type="html">The notification to send when reachability changes (nil = don&apos;t send).
Default = nil</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite, retain) NSString *notificationName</Declaration>
			
			
			<Anchor>//api/name/notificationName</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/setFlags:</TokenIdentifier>
			<Abstract type="html">The current reachability flags.
This property will always report 0 while &quot;initialized&quot; property = NO.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) SCNetworkReachabilityFlags flags</Declaration>
			
			
			<Anchor>//api/name/flags</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/flags</TokenIdentifier>
			<Abstract type="html">The current reachability flags.
This property will always report 0 while &quot;initialized&quot; property = NO.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) SCNetworkReachabilityFlags flags</Declaration>
			
			
			<Anchor>//api/name/flags</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKSReachability/flags</TokenIdentifier>
			<Abstract type="html">The current reachability flags.
This property will always report 0 while &quot;initialized&quot; property = NO.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) SCNetworkReachabilityFlags flags</Declaration>
			
			
			<Anchor>//api/name/flags</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/setReachable:</TokenIdentifier>
			<Abstract type="html">Whether the host is reachable or not.
This property will always report NO while &quot;initialized&quot; property = NO.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) BOOL reachable</Declaration>
			
			
			<Anchor>//api/name/reachable</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/reachable</TokenIdentifier>
			<Abstract type="html">Whether the host is reachable or not.
This property will always report NO while &quot;initialized&quot; property = NO.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) BOOL reachable</Declaration>
			
			
			<Anchor>//api/name/reachable</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKSReachability/reachable</TokenIdentifier>
			<Abstract type="html">Whether the host is reachable or not.
This property will always report NO while &quot;initialized&quot; property = NO.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, assign) BOOL reachable</Declaration>
			
			
			<Anchor>//api/name/reachable</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/setInitialized:</TokenIdentifier>
			<Abstract type="html">If YES, this object&apos;s status properties are valid.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly, assign) BOOL initialized</Declaration>
			
			
			<Anchor>//api/name/initialized</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSKSReachability/initialized</TokenIdentifier>
			<Abstract type="html">If YES, this object&apos;s status properties are valid.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly, assign) BOOL initialized</Declaration>
			
			
			<Anchor>//api/name/initialized</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSKSReachability/initialized</TokenIdentifier>
			<Abstract type="html">If YES, this object&apos;s status properties are valid.</Abstract>
			<DeclaredIn>AWSKSReachability.h</DeclaredIn>
			
			<Declaration>@property (atomic, readonly, assign) BOOL initialized</Declaration>
			
			
			<Anchor>//api/name/initialized</Anchor>
            <NodeRef refid="1200"/>
		</Token>
		
        
        
	</File>
</Tokens>