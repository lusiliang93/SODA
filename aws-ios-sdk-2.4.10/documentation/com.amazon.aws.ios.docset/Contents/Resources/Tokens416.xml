<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSDynamoDBScanInput.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSDynamoDBScanInput</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents the input of a &lt;i&gt;Scan&lt;/i&gt; operation.&lt;/p&gt;
Required parameters: [TableName]</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
            
			
			<NodeRef refid="416"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setAttributesToGet:</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;ProjectionExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;p&gt;This parameter allows you to retrieve attributes of type List or Map; however, it cannot retrieve individual elements within a List or a Map.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;The names of one or more attributes to retrieve. If no attribute names are provided, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;Note that &lt;i&gt;AttributesToGet&lt;/i&gt; has no effect on provisioned throughput consumption. DynamoDB determines capacity units consumed based on item size, not on the amount of data that is returned to an application.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/attributesToGet</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;ProjectionExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;p&gt;This parameter allows you to retrieve attributes of type List or Map; however, it cannot retrieve individual elements within a List or a Map.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;The names of one or more attributes to retrieve. If no attribute names are provided, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;Note that &lt;i&gt;AttributesToGet&lt;/i&gt; has no effect on provisioned throughput consumption. DynamoDB determines capacity units consumed based on item size, not on the amount of data that is returned to an application.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/attributesToGet</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;ProjectionExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;p&gt;This parameter allows you to retrieve attributes of type List or Map; however, it cannot retrieve individual elements within a List or a Map.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;The names of one or more attributes to retrieve. If no attribute names are provided, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;Note that &lt;i&gt;AttributesToGet&lt;/i&gt; has no effect on provisioned throughput consumption. DynamoDB determines capacity units consumed based on item size, not on the amount of data that is returned to an application.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *attributesToGet</Declaration>
			
			
			<Anchor>//api/name/attributesToGet</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setConditionalOperator:</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;FilterExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;A logical operator to apply to the conditions in a &lt;i&gt;ScanFilter&lt;/i&gt; map:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;AND&lt;/code&gt; - If all of the conditions evaluate to true, then the entire map evaluates to true.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;OR&lt;/code&gt; - If at least one of the conditions evaluate to true, then the entire map evaluates to true.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you omit &lt;i&gt;ConditionalOperator&lt;/i&gt;, then &lt;code&gt;AND&lt;/code&gt; is the default.&lt;/p&gt;&lt;p&gt;The operation will succeed only if the entire map evaluates to true.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter does not support attributes of type List or Map.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBConditionalOperator conditionalOperator</Declaration>
			
			
			<Anchor>//api/name/conditionalOperator</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/conditionalOperator</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;FilterExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;A logical operator to apply to the conditions in a &lt;i&gt;ScanFilter&lt;/i&gt; map:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;AND&lt;/code&gt; - If all of the conditions evaluate to true, then the entire map evaluates to true.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;OR&lt;/code&gt; - If at least one of the conditions evaluate to true, then the entire map evaluates to true.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you omit &lt;i&gt;ConditionalOperator&lt;/i&gt;, then &lt;code&gt;AND&lt;/code&gt; is the default.&lt;/p&gt;&lt;p&gt;The operation will succeed only if the entire map evaluates to true.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter does not support attributes of type List or Map.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBConditionalOperator conditionalOperator</Declaration>
			
			
			<Anchor>//api/name/conditionalOperator</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/conditionalOperator</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;FilterExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;A logical operator to apply to the conditions in a &lt;i&gt;ScanFilter&lt;/i&gt; map:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;AND&lt;/code&gt; - If all of the conditions evaluate to true, then the entire map evaluates to true.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;OR&lt;/code&gt; - If at least one of the conditions evaluate to true, then the entire map evaluates to true.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you omit &lt;i&gt;ConditionalOperator&lt;/i&gt;, then &lt;code&gt;AND&lt;/code&gt; is the default.&lt;/p&gt;&lt;p&gt;The operation will succeed only if the entire map evaluates to true.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter does not support attributes of type List or Map.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBConditionalOperator conditionalOperator</Declaration>
			
			
			<Anchor>//api/name/conditionalOperator</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setConsistentRead:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A Boolean value that determines the read consistency model during the scan:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;false&lt;/code&gt;, then the data returned from &lt;i&gt;Scan&lt;/i&gt; might not contain the results from other recently completed write operations (PutItem, UpdateItem or DeleteItem).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;true&lt;/code&gt;, then all of the write operations that completed before the &lt;i&gt;Scan&lt;/i&gt; began are guaranteed to be contained in the &lt;i&gt;Scan&lt;/i&gt; response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The default setting for &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The &lt;i&gt;ConsistentRead&lt;/i&gt; parameter is not supported on global secondary indexes. If you scan a global secondary index with &lt;i&gt;ConsistentRead&lt;/i&gt; set to true, you will receive a &lt;i&gt;ValidationException&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/consistentRead</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A Boolean value that determines the read consistency model during the scan:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;false&lt;/code&gt;, then the data returned from &lt;i&gt;Scan&lt;/i&gt; might not contain the results from other recently completed write operations (PutItem, UpdateItem or DeleteItem).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;true&lt;/code&gt;, then all of the write operations that completed before the &lt;i&gt;Scan&lt;/i&gt; began are guaranteed to be contained in the &lt;i&gt;Scan&lt;/i&gt; response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The default setting for &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The &lt;i&gt;ConsistentRead&lt;/i&gt; parameter is not supported on global secondary indexes. If you scan a global secondary index with &lt;i&gt;ConsistentRead&lt;/i&gt; set to true, you will receive a &lt;i&gt;ValidationException&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/consistentRead</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A Boolean value that determines the read consistency model during the scan:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;false&lt;/code&gt;, then the data returned from &lt;i&gt;Scan&lt;/i&gt; might not contain the results from other recently completed write operations (PutItem, UpdateItem or DeleteItem).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;true&lt;/code&gt;, then all of the write operations that completed before the &lt;i&gt;Scan&lt;/i&gt; began are guaranteed to be contained in the &lt;i&gt;Scan&lt;/i&gt; response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The default setting for &lt;i&gt;ConsistentRead&lt;/i&gt; is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The &lt;i&gt;ConsistentRead&lt;/i&gt; parameter is not supported on global secondary indexes. If you scan a global secondary index with &lt;i&gt;ConsistentRead&lt;/i&gt; set to true, you will receive a &lt;i&gt;ValidationException&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *consistentRead</Declaration>
			
			
			<Anchor>//api/name/consistentRead</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setExclusiveStartKey:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The primary key of the first item that this operation will evaluate. Use the value that was returned for &lt;i&gt;LastEvaluatedKey&lt;/i&gt; in the previous operation.&lt;/p&gt;&lt;p&gt;The data type for &lt;i&gt;ExclusiveStartKey&lt;/i&gt; must be String, Number or Binary. No set data types are allowed.&lt;/p&gt;&lt;p&gt;In a parallel scan, a &lt;i&gt;Scan&lt;/i&gt; request that includes &lt;i&gt;ExclusiveStartKey&lt;/i&gt; must specify the same segment whose previous &lt;i&gt;Scan&lt;/i&gt; returned the corresponding value of &lt;i&gt;LastEvaluatedKey&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *exclusiveStartKey</Declaration>
			
			
			<Anchor>//api/name/exclusiveStartKey</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/exclusiveStartKey</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The primary key of the first item that this operation will evaluate. Use the value that was returned for &lt;i&gt;LastEvaluatedKey&lt;/i&gt; in the previous operation.&lt;/p&gt;&lt;p&gt;The data type for &lt;i&gt;ExclusiveStartKey&lt;/i&gt; must be String, Number or Binary. No set data types are allowed.&lt;/p&gt;&lt;p&gt;In a parallel scan, a &lt;i&gt;Scan&lt;/i&gt; request that includes &lt;i&gt;ExclusiveStartKey&lt;/i&gt; must specify the same segment whose previous &lt;i&gt;Scan&lt;/i&gt; returned the corresponding value of &lt;i&gt;LastEvaluatedKey&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *exclusiveStartKey</Declaration>
			
			
			<Anchor>//api/name/exclusiveStartKey</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/exclusiveStartKey</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The primary key of the first item that this operation will evaluate. Use the value that was returned for &lt;i&gt;LastEvaluatedKey&lt;/i&gt; in the previous operation.&lt;/p&gt;&lt;p&gt;The data type for &lt;i&gt;ExclusiveStartKey&lt;/i&gt; must be String, Number or Binary. No set data types are allowed.&lt;/p&gt;&lt;p&gt;In a parallel scan, a &lt;i&gt;Scan&lt;/i&gt; request that includes &lt;i&gt;ExclusiveStartKey&lt;/i&gt; must specify the same segment whose previous &lt;i&gt;Scan&lt;/i&gt; returned the corresponding value of &lt;i&gt;LastEvaluatedKey&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *exclusiveStartKey</Declaration>
			
			
			<Anchor>//api/name/exclusiveStartKey</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setExpressionAttributeNames:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for attribute names in an expression. The following are some use cases for using &lt;i&gt;ExpressionAttributeNames&lt;/i&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To access an attribute whose name conflicts with a DynamoDB reserved word.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following attribute name:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Percentile&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/expressionAttributeNames</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for attribute names in an expression. The following are some use cases for using &lt;i&gt;ExpressionAttributeNames&lt;/i&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To access an attribute whose name conflicts with a DynamoDB reserved word.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following attribute name:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Percentile&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/expressionAttributeNames</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more substitution tokens for attribute names in an expression. The following are some use cases for using &lt;i&gt;ExpressionAttributeNames&lt;/i&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;To access an attribute whose name conflicts with a DynamoDB reserved word.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To create a placeholder for repeating occurrences of an attribute name in an expression.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;To prevent special characters in an attribute name from being misinterpreted in an expression.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Use the &lt;b&gt;#&lt;/b&gt; character in an expression to dereference an attribute name. For example, consider the following attribute name:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Percentile&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*NSString*&gt; *expressionAttributeNames</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeNames</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setExpressionAttributeValues:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more values that can be substituted in an expression.&lt;/p&gt;&lt;p&gt;Use the &lt;b&gt;:&lt;/b&gt; (colon) character in an expression to dereference an attribute value. For example, suppose that you wanted to check whether the value of the &lt;i&gt;ProductStatus&lt;/i&gt; attribute was one of the following: &lt;/p&gt;&lt;p&gt;&lt;code&gt;Available | Backordered | Discontinued&lt;/code&gt;&lt;/p&gt;&lt;p&gt;You would first need to specify &lt;i&gt;ExpressionAttributeValues&lt;/i&gt; as follows:&lt;/p&gt;&lt;p&gt;&lt;code&gt;{ &quot;:avail&quot;:{&quot;S&quot;:&quot;Available&quot;}, &quot;:back&quot;:{&quot;S&quot;:&quot;Backordered&quot;}, &quot;:disc&quot;:{&quot;S&quot;:&quot;Discontinued&quot;} }&lt;/code&gt;&lt;/p&gt;&lt;p&gt;You could then use these values in an expression, such as this:&lt;/p&gt;&lt;p&gt;&lt;code&gt;ProductStatus IN (:avail, :back, :disc)&lt;/code&gt;&lt;/p&gt;&lt;p&gt;For more information on expression attribute values, see Specifying Conditions in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *expressionAttributeValues</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeValues</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/expressionAttributeValues</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more values that can be substituted in an expression.&lt;/p&gt;&lt;p&gt;Use the &lt;b&gt;:&lt;/b&gt; (colon) character in an expression to dereference an attribute value. For example, suppose that you wanted to check whether the value of the &lt;i&gt;ProductStatus&lt;/i&gt; attribute was one of the following: &lt;/p&gt;&lt;p&gt;&lt;code&gt;Available | Backordered | Discontinued&lt;/code&gt;&lt;/p&gt;&lt;p&gt;You would first need to specify &lt;i&gt;ExpressionAttributeValues&lt;/i&gt; as follows:&lt;/p&gt;&lt;p&gt;&lt;code&gt;{ &quot;:avail&quot;:{&quot;S&quot;:&quot;Available&quot;}, &quot;:back&quot;:{&quot;S&quot;:&quot;Backordered&quot;}, &quot;:disc&quot;:{&quot;S&quot;:&quot;Discontinued&quot;} }&lt;/code&gt;&lt;/p&gt;&lt;p&gt;You could then use these values in an expression, such as this:&lt;/p&gt;&lt;p&gt;&lt;code&gt;ProductStatus IN (:avail, :back, :disc)&lt;/code&gt;&lt;/p&gt;&lt;p&gt;For more information on expression attribute values, see Specifying Conditions in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *expressionAttributeValues</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeValues</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/expressionAttributeValues</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more values that can be substituted in an expression.&lt;/p&gt;&lt;p&gt;Use the &lt;b&gt;:&lt;/b&gt; (colon) character in an expression to dereference an attribute value. For example, suppose that you wanted to check whether the value of the &lt;i&gt;ProductStatus&lt;/i&gt; attribute was one of the following: &lt;/p&gt;&lt;p&gt;&lt;code&gt;Available | Backordered | Discontinued&lt;/code&gt;&lt;/p&gt;&lt;p&gt;You would first need to specify &lt;i&gt;ExpressionAttributeValues&lt;/i&gt; as follows:&lt;/p&gt;&lt;p&gt;&lt;code&gt;{ &quot;:avail&quot;:{&quot;S&quot;:&quot;Available&quot;}, &quot;:back&quot;:{&quot;S&quot;:&quot;Backordered&quot;}, &quot;:disc&quot;:{&quot;S&quot;:&quot;Discontinued&quot;} }&lt;/code&gt;&lt;/p&gt;&lt;p&gt;You could then use these values in an expression, such as this:&lt;/p&gt;&lt;p&gt;&lt;code&gt;ProductStatus IN (:avail, :back, :disc)&lt;/code&gt;&lt;/p&gt;&lt;p&gt;For more information on expression attribute values, see Specifying Conditions in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBAttributeValue*&gt; *expressionAttributeValues</Declaration>
			
			
			<Anchor>//api/name/expressionAttributeValues</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setFilterExpression:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that contains conditions that DynamoDB applies after the &lt;i&gt;Scan&lt;/i&gt; operation, but before the data is returned to you. Items that do not satisfy the &lt;i&gt;FilterExpression&lt;/i&gt; criteria are not returned.&lt;/p&gt;&lt;note&gt;&lt;p&gt;A &lt;i&gt;FilterExpression&lt;/i&gt; is applied after the items have already been read; the process of filtering does not consume any additional read capacity units.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For more information, see Filter Expressions in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;note&gt;&lt;p&gt;&lt;i&gt;FilterExpression&lt;/i&gt; replaces the legacy &lt;i&gt;ScanFilter&lt;/i&gt; and &lt;i&gt;ConditionalOperator&lt;/i&gt; parameters.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *filterExpression</Declaration>
			
			
			<Anchor>//api/name/filterExpression</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/filterExpression</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that contains conditions that DynamoDB applies after the &lt;i&gt;Scan&lt;/i&gt; operation, but before the data is returned to you. Items that do not satisfy the &lt;i&gt;FilterExpression&lt;/i&gt; criteria are not returned.&lt;/p&gt;&lt;note&gt;&lt;p&gt;A &lt;i&gt;FilterExpression&lt;/i&gt; is applied after the items have already been read; the process of filtering does not consume any additional read capacity units.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For more information, see Filter Expressions in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;note&gt;&lt;p&gt;&lt;i&gt;FilterExpression&lt;/i&gt; replaces the legacy &lt;i&gt;ScanFilter&lt;/i&gt; and &lt;i&gt;ConditionalOperator&lt;/i&gt; parameters.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *filterExpression</Declaration>
			
			
			<Anchor>//api/name/filterExpression</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/filterExpression</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that contains conditions that DynamoDB applies after the &lt;i&gt;Scan&lt;/i&gt; operation, but before the data is returned to you. Items that do not satisfy the &lt;i&gt;FilterExpression&lt;/i&gt; criteria are not returned.&lt;/p&gt;&lt;note&gt;&lt;p&gt;A &lt;i&gt;FilterExpression&lt;/i&gt; is applied after the items have already been read; the process of filtering does not consume any additional read capacity units.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For more information, see Filter Expressions in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;note&gt;&lt;p&gt;&lt;i&gt;FilterExpression&lt;/i&gt; replaces the legacy &lt;i&gt;ScanFilter&lt;/i&gt; and &lt;i&gt;ConditionalOperator&lt;/i&gt; parameters.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *filterExpression</Declaration>
			
			
			<Anchor>//api/name/filterExpression</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setIndexName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of a secondary index to scan. This index can be any local secondary index or global secondary index. Note that if you use the &lt;code&gt;IndexName&lt;/code&gt; parameter, you must also provide &lt;code&gt;TableName&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexName</Declaration>
			
			
			<Anchor>//api/name/indexName</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/indexName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of a secondary index to scan. This index can be any local secondary index or global secondary index. Note that if you use the &lt;code&gt;IndexName&lt;/code&gt; parameter, you must also provide &lt;code&gt;TableName&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexName</Declaration>
			
			
			<Anchor>//api/name/indexName</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/indexName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of a secondary index to scan. This index can be any local secondary index or global secondary index. Note that if you use the &lt;code&gt;IndexName&lt;/code&gt; parameter, you must also provide &lt;code&gt;TableName&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *indexName</Declaration>
			
			
			<Anchor>//api/name/indexName</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setLimit:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum number of items to evaluate (not necessarily the number of matching items). If DynamoDB processes the number of items up to the limit while processing the results, it stops the operation and returns the matching values up to that point, and a key in &lt;i&gt;LastEvaluatedKey&lt;/i&gt; to apply in a subsequent operation, so that you can pick up where you left off. Also, if the processed data set size exceeds 1 MB before DynamoDB reaches this limit, it stops the operation and returns the matching values up to the limit, and a key in &lt;i&gt;LastEvaluatedKey&lt;/i&gt; to apply in a subsequent operation to continue the operation. For more information, see Query and Scan in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *limit</Declaration>
			
			
			<Anchor>//api/name/limit</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/limit</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum number of items to evaluate (not necessarily the number of matching items). If DynamoDB processes the number of items up to the limit while processing the results, it stops the operation and returns the matching values up to that point, and a key in &lt;i&gt;LastEvaluatedKey&lt;/i&gt; to apply in a subsequent operation, so that you can pick up where you left off. Also, if the processed data set size exceeds 1 MB before DynamoDB reaches this limit, it stops the operation and returns the matching values up to the limit, and a key in &lt;i&gt;LastEvaluatedKey&lt;/i&gt; to apply in a subsequent operation to continue the operation. For more information, see Query and Scan in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *limit</Declaration>
			
			
			<Anchor>//api/name/limit</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/limit</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The maximum number of items to evaluate (not necessarily the number of matching items). If DynamoDB processes the number of items up to the limit while processing the results, it stops the operation and returns the matching values up to that point, and a key in &lt;i&gt;LastEvaluatedKey&lt;/i&gt; to apply in a subsequent operation, so that you can pick up where you left off. Also, if the processed data set size exceeds 1 MB before DynamoDB reaches this limit, it stops the operation and returns the matching values up to the limit, and a key in &lt;i&gt;LastEvaluatedKey&lt;/i&gt; to apply in a subsequent operation to continue the operation. For more information, see Query and Scan in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *limit</Declaration>
			
			
			<Anchor>//api/name/limit</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setProjectionExpression:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that identifies one or more attributes to retrieve from the specified table or index. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;For more information, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;note&gt;&lt;p&gt;&lt;i&gt;ProjectionExpression&lt;/i&gt; replaces the legacy &lt;i&gt;AttributesToGet&lt;/i&gt; parameter.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/projectionExpression</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that identifies one or more attributes to retrieve from the specified table or index. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;For more information, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;note&gt;&lt;p&gt;&lt;i&gt;ProjectionExpression&lt;/i&gt; replaces the legacy &lt;i&gt;AttributesToGet&lt;/i&gt; parameter.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/projectionExpression</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A string that identifies one or more attributes to retrieve from the specified table or index. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.&lt;/p&gt;&lt;p&gt;If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.&lt;/p&gt;&lt;p&gt;For more information, see Accessing Item Attributes in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;note&gt;&lt;p&gt;&lt;i&gt;ProjectionExpression&lt;/i&gt; replaces the legacy &lt;i&gt;AttributesToGet&lt;/i&gt; parameter.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *projectionExpression</Declaration>
			
			
			<Anchor>//api/name/projectionExpression</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setReturnConsumedCapacity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the level of detail about provisioned throughput consumption that is returned in the response:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;INDEXES&lt;/i&gt; - The response includes the aggregate &lt;i&gt;ConsumedCapacity&lt;/i&gt; for the operation, together with &lt;i&gt;ConsumedCapacity&lt;/i&gt; for each table and secondary index that was accessed.&lt;/p&gt;&lt;p&gt;Note that some operations, such as &lt;i&gt;GetItem&lt;/i&gt; and &lt;i&gt;BatchGetItem&lt;/i&gt;, do not access any indexes at all. In these cases, specifying &lt;i&gt;INDEXES&lt;/i&gt; will only return &lt;i&gt;ConsumedCapacity&lt;/i&gt; information for table(s).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;TOTAL&lt;/i&gt; - The response includes only the aggregate &lt;i&gt;ConsumedCapacity&lt;/i&gt; for the operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;NONE&lt;/i&gt; - No &lt;i&gt;ConsumedCapacity&lt;/i&gt; details are included in the response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBReturnConsumedCapacity returnConsumedCapacity</Declaration>
			
			
			<Anchor>//api/name/returnConsumedCapacity</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/returnConsumedCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the level of detail about provisioned throughput consumption that is returned in the response:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;INDEXES&lt;/i&gt; - The response includes the aggregate &lt;i&gt;ConsumedCapacity&lt;/i&gt; for the operation, together with &lt;i&gt;ConsumedCapacity&lt;/i&gt; for each table and secondary index that was accessed.&lt;/p&gt;&lt;p&gt;Note that some operations, such as &lt;i&gt;GetItem&lt;/i&gt; and &lt;i&gt;BatchGetItem&lt;/i&gt;, do not access any indexes at all. In these cases, specifying &lt;i&gt;INDEXES&lt;/i&gt; will only return &lt;i&gt;ConsumedCapacity&lt;/i&gt; information for table(s).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;TOTAL&lt;/i&gt; - The response includes only the aggregate &lt;i&gt;ConsumedCapacity&lt;/i&gt; for the operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;NONE&lt;/i&gt; - No &lt;i&gt;ConsumedCapacity&lt;/i&gt; details are included in the response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBReturnConsumedCapacity returnConsumedCapacity</Declaration>
			
			
			<Anchor>//api/name/returnConsumedCapacity</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/returnConsumedCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Determines the level of detail about provisioned throughput consumption that is returned in the response:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;INDEXES&lt;/i&gt; - The response includes the aggregate &lt;i&gt;ConsumedCapacity&lt;/i&gt; for the operation, together with &lt;i&gt;ConsumedCapacity&lt;/i&gt; for each table and secondary index that was accessed.&lt;/p&gt;&lt;p&gt;Note that some operations, such as &lt;i&gt;GetItem&lt;/i&gt; and &lt;i&gt;BatchGetItem&lt;/i&gt;, do not access any indexes at all. In these cases, specifying &lt;i&gt;INDEXES&lt;/i&gt; will only return &lt;i&gt;ConsumedCapacity&lt;/i&gt; information for table(s).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;TOTAL&lt;/i&gt; - The response includes only the aggregate &lt;i&gt;ConsumedCapacity&lt;/i&gt; for the operation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;NONE&lt;/i&gt; - No &lt;i&gt;ConsumedCapacity&lt;/i&gt; details are included in the response.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBReturnConsumedCapacity returnConsumedCapacity</Declaration>
			
			
			<Anchor>//api/name/returnConsumedCapacity</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setScanFilter:</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;FilterExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;A condition that evaluates the scan results and returns only the desired values.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter does not support attributes of type List or Map.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;If you specify more than one condition in the &lt;i&gt;ScanFilter&lt;/i&gt; map, then by default all of the conditions must evaluate to true. In other words, the conditions are ANDed together. (You can use the &lt;i&gt;ConditionalOperator&lt;/i&gt; parameter to OR the conditions instead. If you do this, then at least one of the conditions must evaluate to true, rather than all of them.)&lt;/p&gt;&lt;p&gt;Each &lt;i&gt;ScanFilter&lt;/i&gt; element consists of an attribute name to compare, along with the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeValueList&lt;/i&gt; - One or more values to evaluate against the supplied attribute. The number of values in the list depends on the operator specified in &lt;i&gt;ComparisonOperator&lt;/i&gt; .&lt;/p&gt;&lt;p&gt;For type Number, value comparisons are numeric.&lt;/p&gt;&lt;p&gt;String value comparisons for greater than, equals, or less than are based on ASCII character code values. For example, &lt;code&gt;a&lt;/code&gt; is greater than &lt;code&gt;A&lt;/code&gt;, and &lt;code&gt;a&lt;/code&gt; is greater than &lt;code&gt;B&lt;/code&gt;. For a list of code values, see Condition.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBCondition*&gt; *scanFilter</Declaration>
			
			
			<Anchor>//api/name/scanFilter</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/scanFilter</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;FilterExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;A condition that evaluates the scan results and returns only the desired values.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter does not support attributes of type List or Map.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;If you specify more than one condition in the &lt;i&gt;ScanFilter&lt;/i&gt; map, then by default all of the conditions must evaluate to true. In other words, the conditions are ANDed together. (You can use the &lt;i&gt;ConditionalOperator&lt;/i&gt; parameter to OR the conditions instead. If you do this, then at least one of the conditions must evaluate to true, rather than all of them.)&lt;/p&gt;&lt;p&gt;Each &lt;i&gt;ScanFilter&lt;/i&gt; element consists of an attribute name to compare, along with the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeValueList&lt;/i&gt; - One or more values to evaluate against the supplied attribute. The number of values in the list depends on the operator specified in &lt;i&gt;ComparisonOperator&lt;/i&gt; .&lt;/p&gt;&lt;p&gt;For type Number, value comparisons are numeric.&lt;/p&gt;&lt;p&gt;String value comparisons for greater than, equals, or less than are based on ASCII character code values. For example, &lt;code&gt;a&lt;/code&gt; is greater than &lt;code&gt;A&lt;/code&gt;, and &lt;code&gt;a&lt;/code&gt; is greater than &lt;code&gt;B&lt;/code&gt;. For a list of code values, see Condition.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBCondition*&gt; *scanFilter</Declaration>
			
			
			<Anchor>//api/name/scanFilter</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/scanFilter</TokenIdentifier>
			<Abstract type="html">&lt;important&gt;&lt;p&gt;This is a legacy parameter, for backward compatibility. New applications should use &lt;i&gt;FilterExpression&lt;/i&gt; instead. Do not combine legacy parameters and expression parameters in a single API call; otherwise, DynamoDB will return a &lt;i&gt;ValidationException&lt;/i&gt; exception.&lt;/p&gt;&lt;/important&gt;&lt;p&gt;A condition that evaluates the scan results and returns only the desired values.&lt;/p&gt;&lt;note&gt;&lt;p&gt;This parameter does not support attributes of type List or Map.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;If you specify more than one condition in the &lt;i&gt;ScanFilter&lt;/i&gt; map, then by default all of the conditions must evaluate to true. In other words, the conditions are ANDed together. (You can use the &lt;i&gt;ConditionalOperator&lt;/i&gt; parameter to OR the conditions instead. If you do this, then at least one of the conditions must evaluate to true, rather than all of them.)&lt;/p&gt;&lt;p&gt;Each &lt;i&gt;ScanFilter&lt;/i&gt; element consists of an attribute name to compare, along with the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;i&gt;AttributeValueList&lt;/i&gt; - One or more values to evaluate against the supplied attribute. The number of values in the list depends on the operator specified in &lt;i&gt;ComparisonOperator&lt;/i&gt; .&lt;/p&gt;&lt;p&gt;For type Number, value comparisons are numeric.&lt;/p&gt;&lt;p&gt;String value comparisons for greater than, equals, or less than are based on ASCII character code values. For example, &lt;code&gt;a&lt;/code&gt; is greater than &lt;code&gt;A&lt;/code&gt;, and &lt;code&gt;a&lt;/code&gt; is greater than &lt;code&gt;B&lt;/code&gt;. For a list of code values, see Condition.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary&lt;NSString*AWSDynamoDBCondition*&gt; *scanFilter</Declaration>
			
			
			<Anchor>//api/name/scanFilter</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setSegment:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;For a parallel &lt;i&gt;Scan&lt;/i&gt; request, &lt;i&gt;Segment&lt;/i&gt; identifies an individual segment to be scanned by an application worker.&lt;/p&gt;&lt;p&gt;Segment IDs are zero-based, so the first segment is always 0. For example, if you want to use four application threads to scan a table or an index, then the first thread specifies a &lt;i&gt;Segment&lt;/i&gt; value of 0, the second thread specifies 1, and so on.&lt;/p&gt;&lt;p&gt;The value of &lt;i&gt;LastEvaluatedKey&lt;/i&gt; returned from a parallel &lt;i&gt;Scan&lt;/i&gt; request must be used as &lt;i&gt;ExclusiveStartKey&lt;/i&gt; with the same segment ID in a subsequent &lt;i&gt;Scan&lt;/i&gt; operation.&lt;/p&gt;&lt;p&gt;The value for &lt;i&gt;Segment&lt;/i&gt; must be greater than or equal to 0, and less than the value provided for &lt;i&gt;TotalSegments&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;If you provide &lt;i&gt;Segment&lt;/i&gt;, you must also provide &lt;i&gt;TotalSegments&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *segment</Declaration>
			
			
			<Anchor>//api/name/segment</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/segment</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;For a parallel &lt;i&gt;Scan&lt;/i&gt; request, &lt;i&gt;Segment&lt;/i&gt; identifies an individual segment to be scanned by an application worker.&lt;/p&gt;&lt;p&gt;Segment IDs are zero-based, so the first segment is always 0. For example, if you want to use four application threads to scan a table or an index, then the first thread specifies a &lt;i&gt;Segment&lt;/i&gt; value of 0, the second thread specifies 1, and so on.&lt;/p&gt;&lt;p&gt;The value of &lt;i&gt;LastEvaluatedKey&lt;/i&gt; returned from a parallel &lt;i&gt;Scan&lt;/i&gt; request must be used as &lt;i&gt;ExclusiveStartKey&lt;/i&gt; with the same segment ID in a subsequent &lt;i&gt;Scan&lt;/i&gt; operation.&lt;/p&gt;&lt;p&gt;The value for &lt;i&gt;Segment&lt;/i&gt; must be greater than or equal to 0, and less than the value provided for &lt;i&gt;TotalSegments&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;If you provide &lt;i&gt;Segment&lt;/i&gt;, you must also provide &lt;i&gt;TotalSegments&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *segment</Declaration>
			
			
			<Anchor>//api/name/segment</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/segment</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;For a parallel &lt;i&gt;Scan&lt;/i&gt; request, &lt;i&gt;Segment&lt;/i&gt; identifies an individual segment to be scanned by an application worker.&lt;/p&gt;&lt;p&gt;Segment IDs are zero-based, so the first segment is always 0. For example, if you want to use four application threads to scan a table or an index, then the first thread specifies a &lt;i&gt;Segment&lt;/i&gt; value of 0, the second thread specifies 1, and so on.&lt;/p&gt;&lt;p&gt;The value of &lt;i&gt;LastEvaluatedKey&lt;/i&gt; returned from a parallel &lt;i&gt;Scan&lt;/i&gt; request must be used as &lt;i&gt;ExclusiveStartKey&lt;/i&gt; with the same segment ID in a subsequent &lt;i&gt;Scan&lt;/i&gt; operation.&lt;/p&gt;&lt;p&gt;The value for &lt;i&gt;Segment&lt;/i&gt; must be greater than or equal to 0, and less than the value provided for &lt;i&gt;TotalSegments&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;If you provide &lt;i&gt;Segment&lt;/i&gt;, you must also provide &lt;i&gt;TotalSegments&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *segment</Declaration>
			
			
			<Anchor>//api/name/segment</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setSelect:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The attributes to be returned in the result. You can retrieve all item attributes, specific item attributes, or the count of matching items.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ALLATTRIBUTES&lt;/code&gt; - Returns all of the item attributes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ALLPROJECTEDATTRIBUTES&lt;/code&gt; - Allowed only when querying an index. Retrieves all attributes that have been projected into the index. If the index is configured to project all attributes, this return value is equivalent to specifying &lt;code&gt;ALLATTRIBUTES&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;COUNT&lt;/code&gt; - Returns the number of matching items, rather than the matching items themselves.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;SPECIFICATTRIBUTES&lt;/code&gt; - Returns only the attributes listed in &lt;i&gt;AttributesToGet&lt;/i&gt;. This return value is equivalent to specifying &lt;i&gt;AttributesToGet&lt;/i&gt; without specifying any value for &lt;i&gt;Select&lt;/i&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If neither &lt;i&gt;Select&lt;/i&gt; nor &lt;i&gt;AttributesToGet&lt;/i&gt; are specified, DynamoDB defaults to &lt;code&gt;ALLATTRIBUTES&lt;/code&gt;. You cannot use both &lt;i&gt;AttributesToGet&lt;/i&gt; and &lt;i&gt;Select&lt;/i&gt; together in a single request, unless the value for &lt;i&gt;Select&lt;/i&gt; is &lt;code&gt;SPECIFIC_ATTRIBUTES&lt;/code&gt;. (This usage is equivalent to specifying &lt;i&gt;AttributesToGet&lt;/i&gt; without any value for &lt;i&gt;Select&lt;/i&gt;.)&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBSelect select</Declaration>
			
			
			<Anchor>//api/name/select</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/select</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The attributes to be returned in the result. You can retrieve all item attributes, specific item attributes, or the count of matching items.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ALLATTRIBUTES&lt;/code&gt; - Returns all of the item attributes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ALLPROJECTEDATTRIBUTES&lt;/code&gt; - Allowed only when querying an index. Retrieves all attributes that have been projected into the index. If the index is configured to project all attributes, this return value is equivalent to specifying &lt;code&gt;ALLATTRIBUTES&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;COUNT&lt;/code&gt; - Returns the number of matching items, rather than the matching items themselves.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;SPECIFICATTRIBUTES&lt;/code&gt; - Returns only the attributes listed in &lt;i&gt;AttributesToGet&lt;/i&gt;. This return value is equivalent to specifying &lt;i&gt;AttributesToGet&lt;/i&gt; without specifying any value for &lt;i&gt;Select&lt;/i&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If neither &lt;i&gt;Select&lt;/i&gt; nor &lt;i&gt;AttributesToGet&lt;/i&gt; are specified, DynamoDB defaults to &lt;code&gt;ALLATTRIBUTES&lt;/code&gt;. You cannot use both &lt;i&gt;AttributesToGet&lt;/i&gt; and &lt;i&gt;Select&lt;/i&gt; together in a single request, unless the value for &lt;i&gt;Select&lt;/i&gt; is &lt;code&gt;SPECIFIC_ATTRIBUTES&lt;/code&gt;. (This usage is equivalent to specifying &lt;i&gt;AttributesToGet&lt;/i&gt; without any value for &lt;i&gt;Select&lt;/i&gt;.)&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBSelect select</Declaration>
			
			
			<Anchor>//api/name/select</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/select</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The attributes to be returned in the result. You can retrieve all item attributes, specific item attributes, or the count of matching items.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ALLATTRIBUTES&lt;/code&gt; - Returns all of the item attributes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ALLPROJECTEDATTRIBUTES&lt;/code&gt; - Allowed only when querying an index. Retrieves all attributes that have been projected into the index. If the index is configured to project all attributes, this return value is equivalent to specifying &lt;code&gt;ALLATTRIBUTES&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;COUNT&lt;/code&gt; - Returns the number of matching items, rather than the matching items themselves.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;SPECIFICATTRIBUTES&lt;/code&gt; - Returns only the attributes listed in &lt;i&gt;AttributesToGet&lt;/i&gt;. This return value is equivalent to specifying &lt;i&gt;AttributesToGet&lt;/i&gt; without specifying any value for &lt;i&gt;Select&lt;/i&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If neither &lt;i&gt;Select&lt;/i&gt; nor &lt;i&gt;AttributesToGet&lt;/i&gt; are specified, DynamoDB defaults to &lt;code&gt;ALLATTRIBUTES&lt;/code&gt;. You cannot use both &lt;i&gt;AttributesToGet&lt;/i&gt; and &lt;i&gt;Select&lt;/i&gt; together in a single request, unless the value for &lt;i&gt;Select&lt;/i&gt; is &lt;code&gt;SPECIFIC_ATTRIBUTES&lt;/code&gt;. (This usage is equivalent to specifying &lt;i&gt;AttributesToGet&lt;/i&gt; without any value for &lt;i&gt;Select&lt;/i&gt;.)&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSDynamoDBSelect select</Declaration>
			
			
			<Anchor>//api/name/select</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setTableName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the table containing the requested items; or, if you provide &lt;code&gt;IndexName&lt;/code&gt;, the name of the table to which that index belongs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *tableName</Declaration>
			
			
			<Anchor>//api/name/tableName</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/tableName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the table containing the requested items; or, if you provide &lt;code&gt;IndexName&lt;/code&gt;, the name of the table to which that index belongs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *tableName</Declaration>
			
			
			<Anchor>//api/name/tableName</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/tableName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the table containing the requested items; or, if you provide &lt;code&gt;IndexName&lt;/code&gt;, the name of the table to which that index belongs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *tableName</Declaration>
			
			
			<Anchor>//api/name/tableName</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/setTotalSegments:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;For a parallel &lt;i&gt;Scan&lt;/i&gt; request, &lt;i&gt;TotalSegments&lt;/i&gt; represents the total number of segments into which the &lt;i&gt;Scan&lt;/i&gt; operation will be divided. The value of &lt;i&gt;TotalSegments&lt;/i&gt; corresponds to the number of application workers that will perform the parallel scan. For example, if you want to use four application threads to scan a table or an index, specify a &lt;i&gt;TotalSegments&lt;/i&gt; value of 4.&lt;/p&gt;&lt;p&gt;The value for &lt;i&gt;TotalSegments&lt;/i&gt; must be greater than or equal to 1, and less than or equal to 1000000. If you specify a &lt;i&gt;TotalSegments&lt;/i&gt; value of 1, the &lt;i&gt;Scan&lt;/i&gt; operation will be sequential rather than parallel.&lt;/p&gt;&lt;p&gt;If you specify &lt;i&gt;TotalSegments&lt;/i&gt;, you must also specify &lt;i&gt;Segment&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *totalSegments</Declaration>
			
			
			<Anchor>//api/name/totalSegments</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSDynamoDBScanInput/totalSegments</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;For a parallel &lt;i&gt;Scan&lt;/i&gt; request, &lt;i&gt;TotalSegments&lt;/i&gt; represents the total number of segments into which the &lt;i&gt;Scan&lt;/i&gt; operation will be divided. The value of &lt;i&gt;TotalSegments&lt;/i&gt; corresponds to the number of application workers that will perform the parallel scan. For example, if you want to use four application threads to scan a table or an index, specify a &lt;i&gt;TotalSegments&lt;/i&gt; value of 4.&lt;/p&gt;&lt;p&gt;The value for &lt;i&gt;TotalSegments&lt;/i&gt; must be greater than or equal to 1, and less than or equal to 1000000. If you specify a &lt;i&gt;TotalSegments&lt;/i&gt; value of 1, the &lt;i&gt;Scan&lt;/i&gt; operation will be sequential rather than parallel.&lt;/p&gt;&lt;p&gt;If you specify &lt;i&gt;TotalSegments&lt;/i&gt;, you must also specify &lt;i&gt;Segment&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *totalSegments</Declaration>
			
			
			<Anchor>//api/name/totalSegments</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSDynamoDBScanInput/totalSegments</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;For a parallel &lt;i&gt;Scan&lt;/i&gt; request, &lt;i&gt;TotalSegments&lt;/i&gt; represents the total number of segments into which the &lt;i&gt;Scan&lt;/i&gt; operation will be divided. The value of &lt;i&gt;TotalSegments&lt;/i&gt; corresponds to the number of application workers that will perform the parallel scan. For example, if you want to use four application threads to scan a table or an index, specify a &lt;i&gt;TotalSegments&lt;/i&gt; value of 4.&lt;/p&gt;&lt;p&gt;The value for &lt;i&gt;TotalSegments&lt;/i&gt; must be greater than or equal to 1, and less than or equal to 1000000. If you specify a &lt;i&gt;TotalSegments&lt;/i&gt; value of 1, the &lt;i&gt;Scan&lt;/i&gt; operation will be sequential rather than parallel.&lt;/p&gt;&lt;p&gt;If you specify &lt;i&gt;TotalSegments&lt;/i&gt;, you must also specify &lt;i&gt;Segment&lt;/i&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSDynamoDBModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *totalSegments</Declaration>
			
			
			<Anchor>//api/name/totalSegments</Anchor>
            <NodeRef refid="416"/>
		</Token>
		
        
        
	</File>
</Tokens>