<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSEC2NetworkAclEntry.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSEC2NetworkAclEntry</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes an entry in a network ACL.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
            
			
			<NodeRef refid="810"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/setCidrBlock:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The network range to allow or deny, in CIDR notation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *cidrBlock</Declaration>
			
			
			<Anchor>//api/name/cidrBlock</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/cidrBlock</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The network range to allow or deny, in CIDR notation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *cidrBlock</Declaration>
			
			
			<Anchor>//api/name/cidrBlock</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2NetworkAclEntry/cidrBlock</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The network range to allow or deny, in CIDR notation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *cidrBlock</Declaration>
			
			
			<Anchor>//api/name/cidrBlock</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/setEgress:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *egress</Declaration>
			
			
			<Anchor>//api/name/egress</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/egress</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *egress</Declaration>
			
			
			<Anchor>//api/name/egress</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2NetworkAclEntry/egress</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *egress</Declaration>
			
			
			<Anchor>//api/name/egress</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/setIcmpTypeCode:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;ICMP protocol: The ICMP type and code.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IcmpTypeCode *icmpTypeCode</Declaration>
			
			
			<Anchor>//api/name/icmpTypeCode</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/icmpTypeCode</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;ICMP protocol: The ICMP type and code.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IcmpTypeCode *icmpTypeCode</Declaration>
			
			
			<Anchor>//api/name/icmpTypeCode</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2NetworkAclEntry/icmpTypeCode</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;ICMP protocol: The ICMP type and code.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IcmpTypeCode *icmpTypeCode</Declaration>
			
			
			<Anchor>//api/name/icmpTypeCode</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/setPortRange:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;TCP or UDP protocols: The range of ports the rule applies to.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2PortRange *portRange</Declaration>
			
			
			<Anchor>//api/name/portRange</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/portRange</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;TCP or UDP protocols: The range of ports the rule applies to.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2PortRange *portRange</Declaration>
			
			
			<Anchor>//api/name/portRange</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2NetworkAclEntry/portRange</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;TCP or UDP protocols: The range of ports the rule applies to.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2PortRange *portRange</Declaration>
			
			
			<Anchor>//api/name/portRange</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/setProtocols:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The protocol. A value of &lt;code&gt;-1&lt;/code&gt; means all protocols.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *protocols</Declaration>
			
			
			<Anchor>//api/name/protocols</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/protocols</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The protocol. A value of &lt;code&gt;-1&lt;/code&gt; means all protocols.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *protocols</Declaration>
			
			
			<Anchor>//api/name/protocols</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2NetworkAclEntry/protocols</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The protocol. A value of &lt;code&gt;-1&lt;/code&gt; means all protocols.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *protocols</Declaration>
			
			
			<Anchor>//api/name/protocols</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/setRuleAction:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to allow or deny the traffic that matches the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2RuleAction ruleAction</Declaration>
			
			
			<Anchor>//api/name/ruleAction</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/ruleAction</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to allow or deny the traffic that matches the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2RuleAction ruleAction</Declaration>
			
			
			<Anchor>//api/name/ruleAction</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2NetworkAclEntry/ruleAction</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether to allow or deny the traffic that matches the rule.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2RuleAction ruleAction</Declaration>
			
			
			<Anchor>//api/name/ruleAction</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/setRuleNumber:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The rule number for the entry. ACL entries are processed in ascending order by rule number.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ruleNumber</Declaration>
			
			
			<Anchor>//api/name/ruleNumber</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2NetworkAclEntry/ruleNumber</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The rule number for the entry. ACL entries are processed in ascending order by rule number.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ruleNumber</Declaration>
			
			
			<Anchor>//api/name/ruleNumber</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2NetworkAclEntry/ruleNumber</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The rule number for the entry. ACL entries are processed in ascending order by rule number.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ruleNumber</Declaration>
			
			
			<Anchor>//api/name/ruleNumber</Anchor>
            <NodeRef refid="810"/>
		</Token>
		
        
        
	</File>
</Tokens>