<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSEC2SpotFleetLaunchSpecification.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSEC2SpotFleetLaunchSpecification</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the launch specification for one or more Spot instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
            
			
			<NodeRef refid="906"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setAddressingType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *addressingType</Declaration>
			
			
			<Anchor>//api/name/addressingType</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/addressingType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *addressingType</Declaration>
			
			
			<Anchor>//api/name/addressingType</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/addressingType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deprecated.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *addressingType</Declaration>
			
			
			<Anchor>//api/name/addressingType</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setBlockDeviceMappings:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more block device mapping entries.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2BlockDeviceMapping*&gt; *blockDeviceMappings</Declaration>
			
			
			<Anchor>//api/name/blockDeviceMappings</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/blockDeviceMappings</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more block device mapping entries.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2BlockDeviceMapping*&gt; *blockDeviceMappings</Declaration>
			
			
			<Anchor>//api/name/blockDeviceMappings</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/blockDeviceMappings</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more block device mapping entries.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2BlockDeviceMapping*&gt; *blockDeviceMappings</Declaration>
			
			
			<Anchor>//api/name/blockDeviceMappings</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setEbsOptimized:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn&apos;t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.&lt;/p&gt;&lt;p&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ebsOptimized</Declaration>
			
			
			<Anchor>//api/name/ebsOptimized</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/ebsOptimized</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn&apos;t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.&lt;/p&gt;&lt;p&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ebsOptimized</Declaration>
			
			
			<Anchor>//api/name/ebsOptimized</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/ebsOptimized</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn&apos;t available with all instance types. Additional usage charges apply when using an EBS Optimized instance.&lt;/p&gt;&lt;p&gt;Default: &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *ebsOptimized</Declaration>
			
			
			<Anchor>//api/name/ebsOptimized</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setIamInstanceProfile:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IAM instance profile.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IamInstanceProfileSpecification *iamInstanceProfile</Declaration>
			
			
			<Anchor>//api/name/iamInstanceProfile</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/iamInstanceProfile</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IAM instance profile.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IamInstanceProfileSpecification *iamInstanceProfile</Declaration>
			
			
			<Anchor>//api/name/iamInstanceProfile</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/iamInstanceProfile</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The IAM instance profile.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2IamInstanceProfileSpecification *iamInstanceProfile</Declaration>
			
			
			<Anchor>//api/name/iamInstanceProfile</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setImageId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AMI.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *imageId</Declaration>
			
			
			<Anchor>//api/name/imageId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/imageId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AMI.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *imageId</Declaration>
			
			
			<Anchor>//api/name/imageId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/imageId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the AMI.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *imageId</Declaration>
			
			
			<Anchor>//api/name/imageId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setInstanceType:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The instance type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceType instanceType</Declaration>
			
			
			<Anchor>//api/name/instanceType</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/instanceType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The instance type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceType instanceType</Declaration>
			
			
			<Anchor>//api/name/instanceType</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/instanceType</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The instance type.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) AWSEC2InstanceType instanceType</Declaration>
			
			
			<Anchor>//api/name/instanceType</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setKernelId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the kernel.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kernelId</Declaration>
			
			
			<Anchor>//api/name/kernelId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/kernelId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the kernel.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kernelId</Declaration>
			
			
			<Anchor>//api/name/kernelId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/kernelId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the kernel.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *kernelId</Declaration>
			
			
			<Anchor>//api/name/kernelId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setKeyName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the key pair.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *keyName</Declaration>
			
			
			<Anchor>//api/name/keyName</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/keyName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the key pair.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *keyName</Declaration>
			
			
			<Anchor>//api/name/keyName</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/keyName</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the key pair.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *keyName</Declaration>
			
			
			<Anchor>//api/name/keyName</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setMonitoring:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enable or disable monitoring for the instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2SpotFleetMonitoring *monitoring</Declaration>
			
			
			<Anchor>//api/name/monitoring</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/monitoring</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enable or disable monitoring for the instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2SpotFleetMonitoring *monitoring</Declaration>
			
			
			<Anchor>//api/name/monitoring</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/monitoring</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enable or disable monitoring for the instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2SpotFleetMonitoring *monitoring</Declaration>
			
			
			<Anchor>//api/name/monitoring</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setNetworkInterfaces:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more network interfaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceNetworkInterfaceSpecification*&gt; *networkInterfaces</Declaration>
			
			
			<Anchor>//api/name/networkInterfaces</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/networkInterfaces</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more network interfaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceNetworkInterfaceSpecification*&gt; *networkInterfaces</Declaration>
			
			
			<Anchor>//api/name/networkInterfaces</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/networkInterfaces</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more network interfaces.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2InstanceNetworkInterfaceSpecification*&gt; *networkInterfaces</Declaration>
			
			
			<Anchor>//api/name/networkInterfaces</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setPlacement:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The placement information.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2SpotPlacement *placement</Declaration>
			
			
			<Anchor>//api/name/placement</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/placement</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The placement information.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2SpotPlacement *placement</Declaration>
			
			
			<Anchor>//api/name/placement</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/placement</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The placement information.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSEC2SpotPlacement *placement</Declaration>
			
			
			<Anchor>//api/name/placement</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setRamdiskId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the RAM disk.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *ramdiskId</Declaration>
			
			
			<Anchor>//api/name/ramdiskId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/ramdiskId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the RAM disk.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *ramdiskId</Declaration>
			
			
			<Anchor>//api/name/ramdiskId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/ramdiskId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the RAM disk.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *ramdiskId</Declaration>
			
			
			<Anchor>//api/name/ramdiskId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setSecurityGroups:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2GroupIdentifier*&gt; *securityGroups</Declaration>
			
			
			<Anchor>//api/name/securityGroups</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/securityGroups</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2GroupIdentifier*&gt; *securityGroups</Declaration>
			
			
			<Anchor>//api/name/securityGroups</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/securityGroups</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;AWSEC2GroupIdentifier*&gt; *securityGroups</Declaration>
			
			
			<Anchor>//api/name/securityGroups</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setSpotPrice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The bid price per unit hour for the specified instance type. If this value is not specified, the default is the Spot bid price specified for the fleet. To determine the bid price per unit hour, divide the Spot bid price by the value of &lt;code&gt;WeightedCapacity&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotPrice</Declaration>
			
			
			<Anchor>//api/name/spotPrice</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/spotPrice</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The bid price per unit hour for the specified instance type. If this value is not specified, the default is the Spot bid price specified for the fleet. To determine the bid price per unit hour, divide the Spot bid price by the value of &lt;code&gt;WeightedCapacity&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotPrice</Declaration>
			
			
			<Anchor>//api/name/spotPrice</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/spotPrice</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The bid price per unit hour for the specified instance type. If this value is not specified, the default is the Spot bid price specified for the fleet. To determine the bid price per unit hour, divide the Spot bid price by the value of &lt;code&gt;WeightedCapacity&lt;/code&gt;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *spotPrice</Declaration>
			
			
			<Anchor>//api/name/spotPrice</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setSubnetId:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the subnet in which to launch the instances. To specify multiple subnets, separate them using commas; for example, &quot;subnet-a61dafcf, subnet-65ea5f08&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subnetId</Declaration>
			
			
			<Anchor>//api/name/subnetId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/subnetId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the subnet in which to launch the instances. To specify multiple subnets, separate them using commas; for example, &quot;subnet-a61dafcf, subnet-65ea5f08&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subnetId</Declaration>
			
			
			<Anchor>//api/name/subnetId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/subnetId</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The ID of the subnet in which to launch the instances. To specify multiple subnets, separate them using commas; for example, &quot;subnet-a61dafcf, subnet-65ea5f08&quot;.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *subnetId</Declaration>
			
			
			<Anchor>//api/name/subnetId</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setUserData:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Base64-encoded MIME user data to make available to the instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userData</Declaration>
			
			
			<Anchor>//api/name/userData</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/userData</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Base64-encoded MIME user data to make available to the instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userData</Declaration>
			
			
			<Anchor>//api/name/userData</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/userData</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The Base64-encoded MIME user data to make available to the instances.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userData</Declaration>
			
			
			<Anchor>//api/name/userData</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/setWeightedCapacity:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms (instances or a performance characteristic such as vCPUs, memory, or I/O).&lt;/p&gt;&lt;p&gt;If the target capacity divided by this value is not a whole number, we round the number of instances to the next whole number. If this value is not specified, the default is 1.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *weightedCapacity</Declaration>
			
			
			<Anchor>//api/name/weightedCapacity</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSEC2SpotFleetLaunchSpecification/weightedCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms (instances or a performance characteristic such as vCPUs, memory, or I/O).&lt;/p&gt;&lt;p&gt;If the target capacity divided by this value is not a whole number, we round the number of instances to the next whole number. If this value is not specified, the default is 1.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *weightedCapacity</Declaration>
			
			
			<Anchor>//api/name/weightedCapacity</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSEC2SpotFleetLaunchSpecification/weightedCapacity</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms (instances or a performance characteristic such as vCPUs, memory, or I/O).&lt;/p&gt;&lt;p&gt;If the target capacity divided by this value is not a whole number, we round the number of instances to the next whole number. If this value is not specified, the default is 1.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSEC2Model.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *weightedCapacity</Declaration>
			
			
			<Anchor>//api/name/weightedCapacity</Anchor>
            <NodeRef refid="906"/>
		</Token>
		
        
        
	</File>
</Tokens>