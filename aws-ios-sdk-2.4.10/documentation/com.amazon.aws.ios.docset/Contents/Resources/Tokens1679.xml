<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSSTSGetFederationTokenRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSSTSGetFederationTokenRequest</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
            
			
			<NodeRef refid="1679"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSGetFederationTokenRequest/setDurationSeconds:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained using AWS account (root) credentials are restricted to a maximum of 3600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using AWS account (root) credentials defaults to one hour.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSGetFederationTokenRequest/durationSeconds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained using AWS account (root) credentials are restricted to a maximum of 3600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using AWS account (root) credentials defaults to one hour.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSTSGetFederationTokenRequest/durationSeconds</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129600 seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained using AWS account (root) credentials are restricted to a maximum of 3600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using AWS account (root) credentials defaults to one hour.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSGetFederationTokenRequest/setName:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the federated user. The name is used as an identifier for the temporary security credentials (such as &lt;code&gt;Bob&lt;/code&gt;). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy.&lt;/p&gt;&lt;p&gt;The format for this parameter, as described by its regex pattern, is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSGetFederationTokenRequest/name</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the federated user. The name is used as an identifier for the temporary security credentials (such as &lt;code&gt;Bob&lt;/code&gt;). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy.&lt;/p&gt;&lt;p&gt;The format for this parameter, as described by its regex pattern, is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSTSGetFederationTokenRequest/name</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The name of the federated user. The name is used as an identifier for the temporary security credentials (such as &lt;code&gt;Bob&lt;/code&gt;). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy.&lt;/p&gt;&lt;p&gt;The format for this parameter, as described by its regex pattern, is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSGetFederationTokenRequest/setPolicy:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An IAM policy in JSON format that is passed with the &lt;code&gt;GetFederationToken&lt;/code&gt; call and evaluated along with the policy or policies that are attached to the IAM user whose credentials are used to call &lt;code&gt;GetFederationToken&lt;/code&gt;. The passed policy is used to scope down the permissions that are available to the IAM user, by allowing only a subset of the permissions that are granted to the IAM user. The passed policy cannot grant more permissions than those granted to the IAM user. The final permissions for the federated user are the most restrictive set based on the intersection of the passed policy and the IAM user policy.&lt;/p&gt;&lt;p&gt;If you do not pass a policy, the resulting temporary security credentials have no effective permissions. The only exception is when the temporary security credentials are used to access a resource that has a resource-based policy that specifically allows the federated user to access the resource.&lt;/p&gt;&lt;p&gt;The format for this parameter, as described by its regex pattern, is a string of characters up to 2048 characters in length. The characters can be any ASCII character from the space character to the end of the valid character list (\u0020-\u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters.&lt;/p&gt;&lt;note&gt;&lt;p&gt;The policy plain text must be 2048 bytes or shorter. However, an internal conversion compresses it into a packed binary format with a separate limit. The PackedPolicySize response element indicates by percentage how close to the upper size limit the policy is, with 100% equaling the maximum allowed size.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For more information about how permissions work, see Permissions for GetFederationToken.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSTSGetFederationTokenRequest/policy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An IAM policy in JSON format that is passed with the &lt;code&gt;GetFederationToken&lt;/code&gt; call and evaluated along with the policy or policies that are attached to the IAM user whose credentials are used to call &lt;code&gt;GetFederationToken&lt;/code&gt;. The passed policy is used to scope down the permissions that are available to the IAM user, by allowing only a subset of the permissions that are granted to the IAM user. The passed policy cannot grant more permissions than those granted to the IAM user. The final permissions for the federated user are the most restrictive set based on the intersection of the passed policy and the IAM user policy.&lt;/p&gt;&lt;p&gt;If you do not pass a policy, the resulting temporary security credentials have no effective permissions. The only exception is when the temporary security credentials are used to access a resource that has a resource-based policy that specifically allows the federated user to access the resource.&lt;/p&gt;&lt;p&gt;The format for this parameter, as described by its regex pattern, is a string of characters up to 2048 characters in length. The characters can be any ASCII character from the space character to the end of the valid character list (\u0020-\u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters.&lt;/p&gt;&lt;note&gt;&lt;p&gt;The policy plain text must be 2048 bytes or shorter. However, an internal conversion compresses it into a packed binary format with a separate limit. The PackedPolicySize response element indicates by percentage how close to the upper size limit the policy is, with 100% equaling the maximum allowed size.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For more information about how permissions work, see Permissions for GetFederationToken.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSTSGetFederationTokenRequest/policy</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;An IAM policy in JSON format that is passed with the &lt;code&gt;GetFederationToken&lt;/code&gt; call and evaluated along with the policy or policies that are attached to the IAM user whose credentials are used to call &lt;code&gt;GetFederationToken&lt;/code&gt;. The passed policy is used to scope down the permissions that are available to the IAM user, by allowing only a subset of the permissions that are granted to the IAM user. The passed policy cannot grant more permissions than those granted to the IAM user. The final permissions for the federated user are the most restrictive set based on the intersection of the passed policy and the IAM user policy.&lt;/p&gt;&lt;p&gt;If you do not pass a policy, the resulting temporary security credentials have no effective permissions. The only exception is when the temporary security credentials are used to access a resource that has a resource-based policy that specifically allows the federated user to access the resource.&lt;/p&gt;&lt;p&gt;The format for this parameter, as described by its regex pattern, is a string of characters up to 2048 characters in length. The characters can be any ASCII character from the space character to the end of the valid character list (\u0020-\u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters.&lt;/p&gt;&lt;note&gt;&lt;p&gt;The policy plain text must be 2048 bytes or shorter. However, an internal conversion compresses it into a packed binary format with a separate limit. The PackedPolicySize response element indicates by percentage how close to the upper size limit the policy is, with 100% equaling the maximum allowed size.&lt;/p&gt;&lt;/note&gt;&lt;p&gt;For more information about how permissions work, see Permissions for GetFederationToken.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSTSModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *policy</Declaration>
			
			
			<Anchor>//api/name/policy</Anchor>
            <NodeRef refid="1679"/>
		</Token>
		
        
        
	</File>
</Tokens>