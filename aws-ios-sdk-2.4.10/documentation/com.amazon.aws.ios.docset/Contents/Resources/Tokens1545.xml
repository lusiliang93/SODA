<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSSESSendRawEmailRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSSESSendRawEmailRequest</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Represents a request to send a single raw email using Amazon SES. For more information, see the Amazon SES Developer Guide.&lt;/p&gt;
Required parameters: [RawMessage]</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
            
			
			<NodeRef refid="1545"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/setDestinations:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *destinations</Declaration>
			
			
			<Anchor>//api/name/destinations</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/destinations</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *destinations</Declaration>
			
			
			<Anchor>//api/name/destinations</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendRawEmailRequest/destinations</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSArray&lt;NSString*&gt; *destinations</Declaration>
			
			
			<Anchor>//api/name/destinations</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/setFromArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to specify a particular &quot;From&quot; address in the header of the raw email.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-FROM-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;FromArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;FromArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *fromArn</Declaration>
			
			
			<Anchor>//api/name/fromArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/fromArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to specify a particular &quot;From&quot; address in the header of the raw email.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-FROM-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;FromArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;FromArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *fromArn</Declaration>
			
			
			<Anchor>//api/name/fromArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendRawEmailRequest/fromArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to specify a particular &quot;From&quot; address in the header of the raw email.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-FROM-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;FromArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;FromArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *fromArn</Declaration>
			
			
			<Anchor>//api/name/fromArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/setRawMessage:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The raw text of the message. The client is responsible for ensuring the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Message must contain a header and a body, separated by a blank line.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;All required header fields must be present.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each part of a multipart MIME message must be formatted properly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;MIME content types must be among those supported by Amazon SES. For more information, go to the Amazon SES Developer Guide.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Must be base64-encoded.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESRawMessage *rawMessage</Declaration>
			
			
			<Anchor>//api/name/rawMessage</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/rawMessage</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The raw text of the message. The client is responsible for ensuring the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Message must contain a header and a body, separated by a blank line.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;All required header fields must be present.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each part of a multipart MIME message must be formatted properly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;MIME content types must be among those supported by Amazon SES. For more information, go to the Amazon SES Developer Guide.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Must be base64-encoded.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESRawMessage *rawMessage</Declaration>
			
			
			<Anchor>//api/name/rawMessage</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendRawEmailRequest/rawMessage</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The raw text of the message. The client is responsible for ensuring the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Message must contain a header and a body, separated by a blank line.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;All required header fields must be present.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Each part of a multipart MIME message must be formatted properly.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;MIME content types must be among those supported by Amazon SES. For more information, go to the Amazon SES Developer Guide.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Must be base64-encoded.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) AWSSESRawMessage *rawMessage</Declaration>
			
			
			<Anchor>//api/name/rawMessage</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/setReturnPathArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the &lt;code&gt;ReturnPath&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;For example, if the owner of &lt;code&gt;example.com&lt;/code&gt; (which has ARN &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;) attaches a policy to it that authorizes you to use &lt;code&gt;feedback@example.com&lt;/code&gt;, then you would specify the &lt;code&gt;ReturnPathArn&lt;/code&gt; to be &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;, and the &lt;code&gt;ReturnPath&lt;/code&gt; to be &lt;code&gt;feedback@example.com&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-RETURN-PATH-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;ReturnPathArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;ReturnPathArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *returnPathArn</Declaration>
			
			
			<Anchor>//api/name/returnPathArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/returnPathArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the &lt;code&gt;ReturnPath&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;For example, if the owner of &lt;code&gt;example.com&lt;/code&gt; (which has ARN &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;) attaches a policy to it that authorizes you to use &lt;code&gt;feedback@example.com&lt;/code&gt;, then you would specify the &lt;code&gt;ReturnPathArn&lt;/code&gt; to be &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;, and the &lt;code&gt;ReturnPath&lt;/code&gt; to be &lt;code&gt;feedback@example.com&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-RETURN-PATH-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;ReturnPathArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;ReturnPathArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *returnPathArn</Declaration>
			
			
			<Anchor>//api/name/returnPathArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendRawEmailRequest/returnPathArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the &lt;code&gt;ReturnPath&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;For example, if the owner of &lt;code&gt;example.com&lt;/code&gt; (which has ARN &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;) attaches a policy to it that authorizes you to use &lt;code&gt;feedback@example.com&lt;/code&gt;, then you would specify the &lt;code&gt;ReturnPathArn&lt;/code&gt; to be &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;, and the &lt;code&gt;ReturnPath&lt;/code&gt; to be &lt;code&gt;feedback@example.com&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-RETURN-PATH-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;ReturnPathArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;ReturnPathArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *returnPathArn</Declaration>
			
			
			<Anchor>//api/name/returnPathArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/setSource:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The identity&apos;s email address. If you do not provide a value for this parameter, you must specify a &quot;From&quot; address in the raw text of the message. (You can also specify both.)&lt;/p&gt;&lt;p&gt; By default, the string must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: &lt;code&gt;=?charset?encoding?encoded-text?=&lt;/code&gt;. For more information, see RFC 2047. &lt;/p&gt;&lt;note&gt;&lt;p&gt;If you specify the &lt;code&gt;Source&lt;/code&gt; parameter and have feedback forwarding enabled, then bounces and complaints will be sent to this email address. This takes precedence over any &lt;i&gt;Return-Path&lt;/i&gt; header that you might include in the raw text of the message.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *source</Declaration>
			
			
			<Anchor>//api/name/source</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/source</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The identity&apos;s email address. If you do not provide a value for this parameter, you must specify a &quot;From&quot; address in the raw text of the message. (You can also specify both.)&lt;/p&gt;&lt;p&gt; By default, the string must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: &lt;code&gt;=?charset?encoding?encoded-text?=&lt;/code&gt;. For more information, see RFC 2047. &lt;/p&gt;&lt;note&gt;&lt;p&gt;If you specify the &lt;code&gt;Source&lt;/code&gt; parameter and have feedback forwarding enabled, then bounces and complaints will be sent to this email address. This takes precedence over any &lt;i&gt;Return-Path&lt;/i&gt; header that you might include in the raw text of the message.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *source</Declaration>
			
			
			<Anchor>//api/name/source</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendRawEmailRequest/source</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;The identity&apos;s email address. If you do not provide a value for this parameter, you must specify a &quot;From&quot; address in the raw text of the message. (You can also specify both.)&lt;/p&gt;&lt;p&gt; By default, the string must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: &lt;code&gt;=?charset?encoding?encoded-text?=&lt;/code&gt;. For more information, see RFC 2047. &lt;/p&gt;&lt;note&gt;&lt;p&gt;If you specify the &lt;code&gt;Source&lt;/code&gt; parameter and have feedback forwarding enabled, then bounces and complaints will be sent to this email address. This takes precedence over any &lt;i&gt;Return-Path&lt;/i&gt; header that you might include in the raw text of the message.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *source</Declaration>
			
			
			<Anchor>//api/name/source</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/setSourceArn:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the &lt;code&gt;Source&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;For example, if the owner of &lt;code&gt;example.com&lt;/code&gt; (which has ARN &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;) attaches a policy to it that authorizes you to send from &lt;code&gt;user@example.com&lt;/code&gt;, then you would specify the &lt;code&gt;SourceArn&lt;/code&gt; to be &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;, and the &lt;code&gt;Source&lt;/code&gt; to be &lt;code&gt;user@example.com&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-SOURCE-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;SourceArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;SourceArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sourceArn</Declaration>
			
			
			<Anchor>//api/name/sourceArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSSESSendRawEmailRequest/sourceArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the &lt;code&gt;Source&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;For example, if the owner of &lt;code&gt;example.com&lt;/code&gt; (which has ARN &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;) attaches a policy to it that authorizes you to send from &lt;code&gt;user@example.com&lt;/code&gt;, then you would specify the &lt;code&gt;SourceArn&lt;/code&gt; to be &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;, and the &lt;code&gt;Source&lt;/code&gt; to be &lt;code&gt;user@example.com&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-SOURCE-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;SourceArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;SourceArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sourceArn</Declaration>
			
			
			<Anchor>//api/name/sourceArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSSESSendRawEmailRequest/sourceArn</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the &lt;code&gt;Source&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;For example, if the owner of &lt;code&gt;example.com&lt;/code&gt; (which has ARN &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;) attaches a policy to it that authorizes you to send from &lt;code&gt;user@example.com&lt;/code&gt;, then you would specify the &lt;code&gt;SourceArn&lt;/code&gt; to be &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;, and the &lt;code&gt;Source&lt;/code&gt; to be &lt;code&gt;user@example.com&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Instead of using this parameter, you can use the X-header &lt;code&gt;X-SES-SOURCE-ARN&lt;/code&gt; in the raw message of the email. If you use both the &lt;code&gt;SourceArn&lt;/code&gt; parameter and the corresponding X-header, Amazon SES uses the value of the &lt;code&gt;SourceArn&lt;/code&gt; parameter.&lt;/p&gt;&lt;note&gt;&lt;p&gt;For information about when to use this parameter, see the description of &lt;code&gt;SendRawEmail&lt;/code&gt; in this guide, or see the Amazon SES Developer Guide.&lt;/p&gt;&lt;/note&gt;</Abstract>
			<DeclaredIn>AWSSESModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *sourceArn</Declaration>
			
			
			<Anchor>//api/name/sourceArn</Anchor>
            <NodeRef refid="1545"/>
		</Token>
		
        
        
	</File>
</Tokens>