<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/AWSCognitoIdentityProvider.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProvider</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Using the Amazon Cognito Your User Pools API, you can create a user pool to manage directories and users. You can authenticate a user to obtain tokens related to user identity and access policies.&lt;/p&gt;&lt;p&gt;This API reference provides information about user pools in Amazon Cognito Your User Pools.&lt;/p&gt;&lt;p&gt;For more information, see the Amazon Cognito Documentation.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
            
			
			<NodeRef refid="178"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setConfiguration:</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/AWSCognitoIdentityProvider/configuration</TokenIdentifier>
			<Abstract type="html">The service configuration used to instantiate this service client.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AWSServiceConfiguration *configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSCognitoIdentityProvider/defaultCognitoIdentityProvider</TokenIdentifier>
			<Abstract type="html">Returns the singleton service client. If the singleton object does not exist, the SDK instantiates the default service client with defaultServiceConfiguration from [AWSServiceManager defaultServiceManager]. The reference to this object is maintained by the SDK, and you do not need to retain it manually.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)defaultCognitoIdentityProvider</Declaration>
			
			<ReturnValue><Abstract type="html">The default service client.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultCognitoIdentityProvider</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSCognitoIdentityProvider/registerCognitoIdentityProviderWithConfiguration:forKey:</TokenIdentifier>
			<Abstract type="html">Creates a service client with the given service configuration and registers it for the key.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>+ (void)registerCognitoIdentityProviderWithConfiguration:(AWSServiceConfiguration *)configuration forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>configuration</Name>
					<Abstract type="html">A service configuration object.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerCognitoIdentityProviderWithConfiguration:forKey:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSCognitoIdentityProvider/CognitoIdentityProviderForKey:</TokenIdentifier>
			<Abstract type="html">Retrieves the service client associated with the key. You need to call + registerCognitoIdentityProviderWithConfiguration:forKey: before invoking this method.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>+ (instancetype)CognitoIdentityProviderForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of the service client.</Abstract></ReturnValue>
			<Anchor>//api/name/CognitoIdentityProviderForKey:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/AWSCognitoIdentityProvider/removeCognitoIdentityProviderForKey:</TokenIdentifier>
			<Abstract type="html">Removes the service client associated with the key and release it.</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
			<Declaration>+ (void)removeCognitoIdentityProviderForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">A string to identify the service client.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeCognitoIdentityProviderForKey:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/addCustomAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds additional user attributes to the user pool schema.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAddCustomAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAddCustomAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAddCustomAttributesResponse*&gt; *)addCustomAttributes:(AWSCognitoIdentityProviderAddCustomAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AddCustomAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAddCustomAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/addCustomAttributes:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/addCustomAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Adds additional user attributes to the user pool schema.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAddCustomAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAddCustomAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)addCustomAttributes:(AWSCognitoIdentityProviderAddCustomAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAddCustomAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AddCustomAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addCustomAttributes:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminConfirmSignUp:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms user registration as an admin without using a confirmation code. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminConfirmSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminConfirmSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminConfirmSignUpResponse*&gt; *)adminConfirmSignUp:(AWSCognitoIdentityProviderAdminConfirmSignUpRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminConfirmSignUp service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminConfirmSignUpResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminConfirmSignUp:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminConfirmSignUp:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms user registration as an admin without using a confirmation code. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminConfirmSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminConfirmSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminConfirmSignUp:(AWSCognitoIdentityProviderAdminConfirmSignUpRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminConfirmSignUpResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminConfirmSignUp service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminConfirmSignUp:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminCreateUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new user in the specified user pool and sends a welcome message via email or phone (SMS). This message is based on a template that you configured in your call to CreateUserPool or UpdateUserPool. This template includes your custom sign-up instructions and placeholders for user name and temporary password.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminCreateUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminCreateUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminCreateUserResponse*&gt; *)adminCreateUser:(AWSCognitoIdentityProviderAdminCreateUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminCreateUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminCreateUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnsupportedUserState, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminCreateUser:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminCreateUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new user in the specified user pool and sends a welcome message via email or phone (SMS). This message is based on a template that you configured in your call to CreateUserPool or UpdateUserPool. This template includes your custom sign-up instructions and placeholders for user name and temporary password.&lt;/p&gt;&lt;p&gt;Requires developer credentials.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminCreateUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminCreateUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminCreateUser:(AWSCognitoIdentityProviderAdminCreateUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminCreateUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminCreateUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnsupportedUserState, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminCreateUser:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDeleteUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a user as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)adminDeleteUser:(AWSCognitoIdentityProviderAdminDeleteUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDeleteUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminDeleteUser:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDeleteUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes a user as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminDeleteUser:(AWSCognitoIdentityProviderAdminDeleteUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDeleteUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminDeleteUser:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDeleteUserAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the user attributes in a user pool as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse*&gt; *)adminDeleteUserAttributes:(AWSCognitoIdentityProviderAdminDeleteUserAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminDeleteUserAttributes:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDeleteUserAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the user attributes in a user pool as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminDeleteUserAttributes:(AWSCognitoIdentityProviderAdminDeleteUserAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminDeleteUserAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDeleteUserAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminDeleteUserAttributes:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDisableUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables the specified user as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminDisableUserResponse*&gt; *)adminDisableUser:(AWSCognitoIdentityProviderAdminDisableUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDisableUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminDisableUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminDisableUser:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminDisableUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Disables the specified user as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminDisableUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminDisableUser:(AWSCognitoIdentityProviderAdminDisableUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminDisableUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminDisableUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminDisableUser:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminEnableUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables the specified user as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminEnableUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminEnableUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminEnableUserResponse*&gt; *)adminEnableUser:(AWSCognitoIdentityProviderAdminEnableUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminEnableUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminEnableUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminEnableUser:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminEnableUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Enables the specified user as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminEnableUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminEnableUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminEnableUser:(AWSCognitoIdentityProviderAdminEnableUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminEnableUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminEnableUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminEnableUser:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminForgetDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Forgets the device, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminForgetDeviceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)adminForgetDevice:(AWSCognitoIdentityProviderAdminForgetDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminForgetDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminForgetDevice:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminForgetDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Forgets the device, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminForgetDeviceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminForgetDevice:(AWSCognitoIdentityProviderAdminForgetDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminForgetDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminForgetDevice:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminGetDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the device, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminGetDeviceResponse*&gt; *)adminGetDevice:(AWSCognitoIdentityProviderAdminGetDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminGetDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminGetDeviceResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/adminGetDevice:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminGetDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the device, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminGetDevice:(AWSCognitoIdentityProviderAdminGetDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminGetDeviceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminGetDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminGetDevice:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminGetUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the specified user by user name in a user pool as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminGetUserResponse*&gt; *)adminGetUser:(AWSCognitoIdentityProviderAdminGetUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminGetUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminGetUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminGetUser:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminGetUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the specified user by user name in a user pool as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminGetUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminGetUser:(AWSCognitoIdentityProviderAdminGetUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminGetUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminGetUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminGetUser:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminInitiateAuth:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authentication flow, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminInitiateAuthResponse*&gt; *)adminInitiateAuth:(AWSCognitoIdentityProviderAdminInitiateAuthRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminInitiateAuth service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminInitiateAuthResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed.</Abstract></ReturnValue>
			<Anchor>//api/name/adminInitiateAuth:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminInitiateAuth:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authentication flow, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminInitiateAuthResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminInitiateAuth:(AWSCognitoIdentityProviderAdminInitiateAuthRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminInitiateAuthResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminInitiateAuth service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminInitiateAuth:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminListDevices:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists devices, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListDevicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListDevicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminListDevicesResponse*&gt; *)adminListDevices:(AWSCognitoIdentityProviderAdminListDevicesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminListDevices service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminListDevicesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/adminListDevices:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminListDevices:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists devices, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListDevicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminListDevicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminListDevices:(AWSCognitoIdentityProviderAdminListDevicesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminListDevicesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminListDevices service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminListDevices:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminResetUserPassword:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resets the specified user&apos;s password in a user pool as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;When a developer calls this API, the current password is invalidated, so it must be changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException exception back and should direct the user down the flow to reset the password, which is the same as the forgot password flow. In addition, if the user pool has phone verification selected and a verified phone number exists for the user, or if email verification is selected and a verified email exists for the user, calling this API will also result in sending a message to the end user with the code to change their password.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminResetUserPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminResetUserPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminResetUserPasswordResponse*&gt; *)adminResetUserPassword:(AWSCognitoIdentityProviderAdminResetUserPasswordRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminResetUserPassword service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminResetUserPasswordResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminResetUserPassword:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminResetUserPassword:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resets the specified user&apos;s password in a user pool as an administrator. Works on any user.&lt;/p&gt;&lt;p&gt;When a developer calls this API, the current password is invalidated, so it must be changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException exception back and should direct the user down the flow to reset the password, which is the same as the forgot password flow. In addition, if the user pool has phone verification selected and a verified phone number exists for the user, or if email verification is selected and a verified email exists for the user, calling this API will also result in sending a message to the end user with the code to change their password.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminResetUserPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminResetUserPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminResetUserPassword:(AWSCognitoIdentityProviderAdminResetUserPasswordRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminResetUserPasswordResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminResetUserPassword service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminResetUserPassword:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminRespondToAuthChallenge:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Responds to an authentication challenge, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRespondToAuthChallengeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse*&gt; *)adminRespondToAuthChallenge:(AWSCognitoIdentityProviderAdminRespondToAuthChallengeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed.</Abstract></ReturnValue>
			<Anchor>//api/name/adminRespondToAuthChallenge:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminRespondToAuthChallenge:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Responds to an authentication challenge, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRespondToAuthChallengeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminRespondToAuthChallenge:(AWSCognitoIdentityProviderAdminRespondToAuthChallengeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminRespondToAuthChallengeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminRespondToAuthChallenge service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminRespondToAuthChallenge:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminSetUserSettings:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets all the user settings for a specified user name. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserSettingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserSettingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminSetUserSettingsResponse*&gt; *)adminSetUserSettings:(AWSCognitoIdentityProviderAdminSetUserSettingsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminSetUserSettings service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminSetUserSettingsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminSetUserSettings:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminSetUserSettings:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets all the user settings for a specified user name. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserSettingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminSetUserSettingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminSetUserSettings:(AWSCognitoIdentityProviderAdminSetUserSettingsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminSetUserSettingsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminSetUserSettings service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminSetUserSettings:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateDeviceStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the device status as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateDeviceStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse*&gt; *)adminUpdateDeviceStatus:(AWSCognitoIdentityProviderAdminUpdateDeviceStatusRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminUpdateDeviceStatus:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateDeviceStatus:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the device status as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateDeviceStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminUpdateDeviceStatus:(AWSCognitoIdentityProviderAdminUpdateDeviceStatusRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminUpdateDeviceStatusResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateDeviceStatus service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminUpdateDeviceStatus:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateUserAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified user&apos;s attributes, including developer attributes, as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse*&gt; *)adminUpdateUserAttributes:(AWSCognitoIdentityProviderAdminUpdateUserAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminUpdateUserAttributes:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUpdateUserAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified user&apos;s attributes, including developer attributes, as an administrator. Works on any user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminUpdateUserAttributes:(AWSCognitoIdentityProviderAdminUpdateUserAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminUpdateUserAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUpdateUserAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminUpdateUserAttributes:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUserGlobalSignOut:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Signs out users from all devices, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUserGlobalSignOutRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse*&gt; *)adminUserGlobalSignOut:(AWSCognitoIdentityProviderAdminUserGlobalSignOutRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/adminUserGlobalSignOut:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/adminUserGlobalSignOut:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Signs out users from all devices, as an administrator.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUserGlobalSignOutRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)adminUserGlobalSignOut:(AWSCognitoIdentityProviderAdminUserGlobalSignOutRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderAdminUserGlobalSignOutResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the AdminUserGlobalSignOut service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/adminUserGlobalSignOut:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/changePassword:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Changes the password for a specified user in a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderChangePasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderChangePasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderChangePasswordResponse*&gt; *)changePassword:(AWSCognitoIdentityProviderChangePasswordRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ChangePassword service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderChangePasswordResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/changePassword:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/changePassword:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Changes the password for a specified user in a user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderChangePasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderChangePasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)changePassword:(AWSCognitoIdentityProviderChangePasswordRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderChangePasswordResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ChangePassword service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/changePassword:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms tracking of the device. This API call is the call that beings device tracking.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderConfirmDeviceResponse*&gt; *)confirmDevice:(AWSCognitoIdentityProviderConfirmDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderConfirmDeviceResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/confirmDevice:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms tracking of the device. This API call is the call that beings device tracking.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)confirmDevice:(AWSCognitoIdentityProviderConfirmDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderConfirmDeviceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/confirmDevice:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmForgotPassword:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to enter a code provided when they reset their password to update their password.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmForgotPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmForgotPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderConfirmForgotPasswordResponse*&gt; *)confirmForgotPassword:(AWSCognitoIdentityProviderConfirmForgotPasswordRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmForgotPassword service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderConfirmForgotPasswordResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/confirmForgotPassword:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmForgotPassword:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to enter a code provided when they reset their password to update their password.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmForgotPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmForgotPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)confirmForgotPassword:(AWSCognitoIdentityProviderConfirmForgotPasswordRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderConfirmForgotPasswordResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmForgotPassword service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/confirmForgotPassword:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmSignUp:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms registration of a user and handles the existing alias from a previous user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderConfirmSignUpResponse*&gt; *)confirmSignUp:(AWSCognitoIdentityProviderConfirmSignUpRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmSignUp service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderConfirmSignUpResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/confirmSignUp:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/confirmSignUp:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Confirms registration of a user and handles the existing alias from a previous user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderConfirmSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)confirmSignUp:(AWSCognitoIdentityProviderConfirmSignUpRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderConfirmSignUpResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ConfirmSignUp service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyFailedAttempts, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/confirmSignUp:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserImportJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateUserImportJobResponse*&gt; *)createUserImportJob:(AWSCognitoIdentityProviderCreateUserImportJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserImportJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateUserImportJobResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createUserImportJob:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserImportJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createUserImportJob:(AWSCognitoIdentityProviderCreateUserImportJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateUserImportJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserImportJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createUserImportJob:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPool:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new Amazon Cognito user pool and sets the password policy for the pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateUserPoolResponse*&gt; *)createUserPool:(AWSCognitoIdentityProviderCreateUserPoolRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPool service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateUserPoolResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createUserPool:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPool:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates a new Amazon Cognito user pool and sets the password policy for the pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createUserPool:(AWSCognitoIdentityProviderCreateUserPoolRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateUserPoolResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPool service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createUserPool:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPoolClient:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates the user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderCreateUserPoolClientResponse*&gt; *)createUserPoolClient:(AWSCognitoIdentityProviderCreateUserPoolClientRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPoolClient service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderCreateUserPoolClientResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/createUserPoolClient:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/createUserPoolClient:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Creates the user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderCreateUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)createUserPoolClient:(AWSCognitoIdentityProviderCreateUserPoolClientRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderCreateUserPoolClientResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the CreateUserPoolClient service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/createUserPoolClient:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to delete one&apos;s self.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteUser:(AWSCognitoIdentityProviderDeleteUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUser:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to delete one&apos;s self.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUser:(AWSCognitoIdentityProviderDeleteUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUser:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the attributes for a user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDeleteUserAttributesResponse*&gt; *)deleteUserAttributes:(AWSCognitoIdentityProviderDeleteUserAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDeleteUserAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUserAttributes:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the attributes for a user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUserAttributes:(AWSCognitoIdentityProviderDeleteUserAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDeleteUserAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUserAttributes:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPool:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteUserPool:(AWSCognitoIdentityProviderDeleteUserPoolRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPool service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUserPool:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPool:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Deletes the specified Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUserPool:(AWSCognitoIdentityProviderDeleteUserPoolRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPool service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUserPool:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPoolClient:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows the developer to delete the user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolClientRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)deleteUserPoolClient:(AWSCognitoIdentityProviderDeleteUserPoolClientRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPoolClient service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteUserPoolClient:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/deleteUserPoolClient:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows the developer to delete the user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDeleteUserPoolClientRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)deleteUserPoolClient:(AWSCognitoIdentityProviderDeleteUserPoolClientRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DeleteUserPoolClient service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteUserPoolClient:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserImportJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeUserImportJobResponse*&gt; *)describeUserImportJob:(AWSCognitoIdentityProviderDescribeUserImportJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserImportJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeUserImportJobResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeUserImportJob:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserImportJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Describes the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeUserImportJob:(AWSCognitoIdentityProviderDescribeUserImportJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeUserImportJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserImportJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeUserImportJob:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPool:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the configuration information and metadata of the specified user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeUserPoolResponse*&gt; *)describeUserPool:(AWSCognitoIdentityProviderDescribeUserPoolRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPool service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeUserPoolResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeUserPool:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPool:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Returns the configuration information and metadata of the specified user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeUserPool:(AWSCognitoIdentityProviderDescribeUserPoolRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeUserPoolResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPool service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeUserPool:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPoolClient:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Client method for returning the configuration information and metadata of the specified user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderDescribeUserPoolClientResponse*&gt; *)describeUserPoolClient:(AWSCognitoIdentityProviderDescribeUserPoolClientRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPoolClient service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderDescribeUserPoolClientResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/describeUserPoolClient:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/describeUserPoolClient:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Client method for returning the configuration information and metadata of the specified user pool client.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderDescribeUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)describeUserPoolClient:(AWSCognitoIdentityProviderDescribeUserPoolClientRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderDescribeUserPoolClientResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the DescribeUserPoolClient service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeUserPoolClient:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/forgetDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Forgets the specified device.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgetDeviceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask *)forgetDevice:(AWSCognitoIdentityProviderForgetDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ForgetDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will be nil. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/forgetDevice:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/forgetDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Forgets the specified device.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgetDeviceRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)forgetDevice:(AWSCognitoIdentityProviderForgetDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ForgetDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/forgetDevice:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/forgotPassword:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Retrieves the password for the specified client ID or username.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgotPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgotPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderForgotPasswordResponse*&gt; *)forgotPassword:(AWSCognitoIdentityProviderForgotPasswordRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ForgotPassword service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderForgotPasswordResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/forgotPassword:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/forgotPassword:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Retrieves the password for the specified client ID or username.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgotPasswordRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderForgotPasswordResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)forgotPassword:(AWSCognitoIdentityProviderForgotPasswordRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderForgotPasswordResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ForgotPassword service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/forgotPassword:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getCSVHeader:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the header information for the .csv file to be used as input for the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetCSVHeaderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetCSVHeaderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetCSVHeaderResponse*&gt; *)getCSVHeader:(AWSCognitoIdentityProviderGetCSVHeaderRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetCSVHeader service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetCSVHeaderResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getCSVHeader:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getCSVHeader:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the header information for the .csv file to be used as input for the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetCSVHeaderRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetCSVHeaderResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getCSVHeader:(AWSCognitoIdentityProviderGetCSVHeaderRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetCSVHeaderResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetCSVHeader service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCSVHeader:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getDevice:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the device.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetDeviceResponse*&gt; *)getDevice:(AWSCognitoIdentityProviderGetDeviceRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetDevice service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetDeviceResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getDevice:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getDevice:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the device.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetDeviceRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetDeviceResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getDevice:(AWSCognitoIdentityProviderGetDeviceRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetDeviceResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetDevice service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getDevice:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUser:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the user attributes and metadata for a user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetUserResponse*&gt; *)getUser:(AWSCognitoIdentityProviderGetUserRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUser service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetUserResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getUser:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUser:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the user attributes and metadata for a user.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getUser:(AWSCognitoIdentityProviderGetUserRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetUserResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUser service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getUser:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUserAttributeVerificationCode:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the user attribute verification code for the specified attribute name.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserAttributeVerificationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse*&gt; *)getUserAttributeVerificationCode:(AWSCognitoIdentityProviderGetUserAttributeVerificationCodeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/getUserAttributeVerificationCode:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/getUserAttributeVerificationCode:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Gets the user attribute verification code for the specified attribute name.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserAttributeVerificationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)getUserAttributeVerificationCode:(AWSCognitoIdentityProviderGetUserAttributeVerificationCodeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGetUserAttributeVerificationCodeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GetUserAttributeVerificationCode service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getUserAttributeVerificationCode:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/globalSignOut:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Signs out users from all devices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGlobalSignOutRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGlobalSignOutResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderGlobalSignOutResponse*&gt; *)globalSignOut:(AWSCognitoIdentityProviderGlobalSignOutRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GlobalSignOut service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderGlobalSignOutResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/globalSignOut:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/globalSignOut:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Signs out users from all devices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGlobalSignOutRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderGlobalSignOutResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)globalSignOut:(AWSCognitoIdentityProviderGlobalSignOutRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderGlobalSignOutResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the GlobalSignOut service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/globalSignOut:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/initiateAuth:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authentication flow.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderInitiateAuthRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderInitiateAuthResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderInitiateAuthResponse*&gt; *)initiateAuth:(AWSCognitoIdentityProviderInitiateAuthRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the InitiateAuth service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderInitiateAuthResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/initiateAuth:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/initiateAuth:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Initiates the authentication flow.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderInitiateAuthRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderInitiateAuthResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)initiateAuth:(AWSCognitoIdentityProviderInitiateAuthRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderInitiateAuthResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the InitiateAuth service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initiateAuth:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listDevices:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the devices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListDevicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListDevicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListDevicesResponse*&gt; *)listDevices:(AWSCognitoIdentityProviderListDevicesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListDevices service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListDevicesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listDevices:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listDevices:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the devices.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListDevicesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListDevicesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listDevices:(AWSCognitoIdentityProviderListDevicesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListDevicesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListDevices service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listDevices:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserImportJobs:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the user import jobs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserImportJobsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserImportJobsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUserImportJobsResponse*&gt; *)listUserImportJobs:(AWSCognitoIdentityProviderListUserImportJobsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserImportJobs service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUserImportJobsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUserImportJobs:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserImportJobs:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the user import jobs.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserImportJobsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserImportJobsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUserImportJobs:(AWSCognitoIdentityProviderListUserImportJobsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUserImportJobsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserImportJobs service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUserImportJobs:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserPoolClients:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the clients that have been created for the specified user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolClientsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolClientsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUserPoolClientsResponse*&gt; *)listUserPoolClients:(AWSCognitoIdentityProviderListUserPoolClientsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserPoolClients service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUserPoolClientsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUserPoolClients:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserPoolClients:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the clients that have been created for the specified user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolClientsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolClientsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUserPoolClients:(AWSCognitoIdentityProviderListUserPoolClientsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUserPoolClientsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserPoolClients service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUserPoolClients:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserPools:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the user pools associated with an AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUserPoolsResponse*&gt; *)listUserPools:(AWSCognitoIdentityProviderListUserPoolsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserPools service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUserPoolsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUserPools:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUserPools:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the user pools associated with an AWS account.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUserPoolsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUserPools:(AWSCognitoIdentityProviderListUserPoolsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUserPoolsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUserPools service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUserPools:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUsers:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the users in the Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderListUsersResponse*&gt; *)listUsers:(AWSCognitoIdentityProviderListUsersRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUsers service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderListUsersResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/listUsers:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/listUsers:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Lists the users in the Amazon Cognito user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderListUsersResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)listUsers:(AWSCognitoIdentityProviderListUsersRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderListUsersResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ListUsers service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/listUsers:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/resendConfirmationCode:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resends the confirmation (for confirmation of registration) to a specific user in the user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderResendConfirmationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderResendConfirmationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderResendConfirmationCodeResponse*&gt; *)resendConfirmationCode:(AWSCognitoIdentityProviderResendConfirmationCodeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ResendConfirmationCode service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderResendConfirmationCodeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/resendConfirmationCode:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/resendConfirmationCode:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Resends the confirmation (for confirmation of registration) to a specific user in the user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderResendConfirmationCodeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderResendConfirmationCodeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)resendConfirmationCode:(AWSCognitoIdentityProviderResendConfirmationCodeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderResendConfirmationCodeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the ResendConfirmationCode service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/resendConfirmationCode:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/respondToAuthChallenge:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Responds to the authentication challenge.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderRespondToAuthChallengeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderRespondToAuthChallengeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderRespondToAuthChallengeResponse*&gt; *)respondToAuthChallenge:(AWSCognitoIdentityProviderRespondToAuthChallengeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RespondToAuthChallenge service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderRespondToAuthChallengeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/respondToAuthChallenge:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/respondToAuthChallenge:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Responds to the authentication challenge.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderRespondToAuthChallengeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderRespondToAuthChallengeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)respondToAuthChallenge:(AWSCognitoIdentityProviderRespondToAuthChallengeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderRespondToAuthChallengeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the RespondToAuthChallenge service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorMFAMethodNotFound, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/respondToAuthChallenge:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUserSettings:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the user settings like multi-factor authentication (MFA). If MFA is to be removed for a particular attribute pass the attribute with code delivery as null. If null list is passed, all MFA options are removed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserSettingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserSettingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderSetUserSettingsResponse*&gt; *)setUserSettings:(AWSCognitoIdentityProviderSetUserSettingsRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUserSettings service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderSetUserSettingsResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/setUserSettings:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/setUserSettings:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Sets the user settings like multi-factor authentication (MFA). If MFA is to be removed for a particular attribute pass the attribute with code delivery as null. If null list is passed, all MFA options are removed.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserSettingsRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSetUserSettingsResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setUserSettings:(AWSCognitoIdentityProviderSetUserSettingsRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderSetUserSettingsResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SetUserSettings service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setUserSettings:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/signUp:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Registers the user in the specified user pool and creates a user name, password, and user attributes.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderSignUpResponse*&gt; *)signUp:(AWSCognitoIdentityProviderSignUpRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SignUp service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderSignUpResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure.</Abstract></ReturnValue>
			<Anchor>//api/name/signUp:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/signUp:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Registers the user in the specified user pool and creates a user name, password, and user attributes.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSignUpRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderSignUpResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)signUp:(AWSCognitoIdentityProviderSignUpRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderSignUpResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the SignUp service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidPassword, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorUsernameExists, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/signUp:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/startUserImportJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Starts the user import.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStartUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStartUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderStartUserImportJobResponse*&gt; *)startUserImportJob:(AWSCognitoIdentityProviderStartUserImportJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StartUserImportJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderStartUserImportJobResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/startUserImportJob:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/startUserImportJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Starts the user import.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStartUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStartUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)startUserImportJob:(AWSCognitoIdentityProviderStartUserImportJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderStartUserImportJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StartUserImportJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startUserImportJob:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/stopUserImportJob:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Stops the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStopUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStopUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderStopUserImportJobResponse*&gt; *)stopUserImportJob:(AWSCognitoIdentityProviderStopUserImportJobRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StopUserImportJob service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderStopUserImportJobResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract></ReturnValue>
			<Anchor>//api/name/stopUserImportJob:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/stopUserImportJob:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Stops the user import job.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStopUserImportJobRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderStopUserImportJobResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)stopUserImportJob:(AWSCognitoIdentityProviderStopUserImportJobRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderStopUserImportJobResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the StopUserImportJob service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorPreconditionNotMet, AWSCognitoIdentityProviderErrorNotAuthorized.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stopUserImportJob:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateDeviceStatus:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the device status.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateDeviceStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateDeviceStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateDeviceStatusResponse*&gt; *)updateDeviceStatus:(AWSCognitoIdentityProviderUpdateDeviceStatusRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateDeviceStatus service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateDeviceStatusResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateDeviceStatus:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateDeviceStatus:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the device status.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateDeviceStatusRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateDeviceStatusResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateDeviceStatus:(AWSCognitoIdentityProviderUpdateDeviceStatusRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateDeviceStatusResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateDeviceStatus service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInvalidUserPoolConfiguration, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateDeviceStatus:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserAttributes:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to update a specific attribute (one at a time).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateUserAttributesResponse*&gt; *)updateUserAttributes:(AWSCognitoIdentityProviderUpdateUserAttributesRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserAttributes service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateUserAttributesResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateUserAttributes:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserAttributes:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows a user to update a specific attribute (one at a time).&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserAttributesRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserAttributesResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateUserAttributes:(AWSCognitoIdentityProviderUpdateUserAttributesRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateUserAttributesResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserAttributes service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUnexpectedLambda, AWSCognitoIdentityProviderErrorUserLambdaValidation, AWSCognitoIdentityProviderErrorInvalidLambdaResponse, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorAliasExists, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy, AWSCognitoIdentityProviderErrorCodeDeliveryFailure, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateUserAttributes:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserPool:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified user pool with the specified attributes.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateUserPoolResponse*&gt; *)updateUserPool:(AWSCognitoIdentityProviderUpdateUserPoolRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserPool service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateUserPoolResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorConcurrentModification, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy.</Abstract></ReturnValue>
			<Anchor>//api/name/updateUserPool:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserPool:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Updates the specified user pool with the specified attributes.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateUserPool:(AWSCognitoIdentityProviderUpdateUserPoolRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateUserPoolResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserPool service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorConcurrentModification, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorUserImportInProgress, AWSCognitoIdentityProviderErrorInternalError, AWSCognitoIdentityProviderErrorInvalidSmsRoleAccessPolicy, AWSCognitoIdentityProviderErrorInvalidSmsRoleTrustRelationship, AWSCognitoIdentityProviderErrorInvalidEmailRoleAccessPolicy.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateUserPool:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserPoolClient:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows the developer to update the specified user pool client and password policy.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderUpdateUserPoolClientResponse*&gt; *)updateUserPoolClient:(AWSCognitoIdentityProviderUpdateUserPoolClientRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserPoolClient service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderUpdateUserPoolClientResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/updateUserPoolClient:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/updateUserPoolClient:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Allows the developer to update the specified user pool client and password policy.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolClientRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderUpdateUserPoolClientResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)updateUserPoolClient:(AWSCognitoIdentityProviderUpdateUserPoolClientRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderUpdateUserPoolClientResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the UpdateUserPoolClient service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateUserPoolClient:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/verifyUserAttribute:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Verifies the specified user attributes in the user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifyUserAttributeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifyUserAttributeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (AWSTask&lt;AWSCognitoIdentityProviderVerifyUserAttributeResponse*&gt; *)verifyUserAttribute:(AWSCognitoIdentityProviderVerifyUserAttributeRequest *)request</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyUserAttribute service method.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instance of AWSTask. On successful execution, task.result will contain an instance of AWSCognitoIdentityProviderVerifyUserAttributeResponse. On failed execution, task.error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract></ReturnValue>
			<Anchor>//api/name/verifyUserAttribute:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/AWSCognitoIdentityProvider/verifyUserAttribute:completionHandler:</TokenIdentifier>
			<Abstract type="html">&lt;p&gt;Verifies the specified user attributes in the user pool.&lt;/p&gt;</Abstract>
			<DeclaredIn>AWSCognitoIdentityProviderService.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifyUserAttributeRequest</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/AWSCognitoIdentityProviderVerifyUserAttributeResponse</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)verifyUserAttribute:(AWSCognitoIdentityProviderVerifyUserAttributeRequest *)request completionHandler:(void ( ^ _Nullable ) ( AWSCognitoIdentityProviderVerifyUserAttributeResponse *_Nullable response , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A container for the necessary parameters to execute the VerifyUserAttribute service method.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the load request is complete.
                          response - A response object, or nil if the request failed.
                          error - An error object that indicates why the request failed, or nil if the request was successful. On failed execution, error may contain an NSError with AWSCognitoIdentityProviderErrorDomain domain and the following error code: AWSCognitoIdentityProviderErrorResourceNotFound, AWSCognitoIdentityProviderErrorInvalidParameter, AWSCognitoIdentityProviderErrorCodeMismatch, AWSCognitoIdentityProviderErrorExpiredCode, AWSCognitoIdentityProviderErrorNotAuthorized, AWSCognitoIdentityProviderErrorTooManyRequests, AWSCognitoIdentityProviderErrorLimitExceeded, AWSCognitoIdentityProviderErrorPasswordResetRequired, AWSCognitoIdentityProviderErrorUserNotFound, AWSCognitoIdentityProviderErrorUserNotConfirmed, AWSCognitoIdentityProviderErrorInternalError.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/verifyUserAttribute:completionHandler:</Anchor>
            <NodeRef refid="178"/>
		</Token>
		
        
        
	</File>
</Tokens>